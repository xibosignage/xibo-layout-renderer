{"version":3,"file":"xibo-layout-renderer.min.js","sources":["../node_modules/nanoevents/index.js","../../src/Modules/Platform/Platform.ts","../../src/Types/Layout/Layout.types.ts","../../src/Modules/Generators/Generators.ts","../../src/Types/Region/Region.types.ts","../../src/Types/Media/Media.types.ts","../../src/Modules/Transitions/Transitions.ts","../../src/Modules/Media/Media.ts","../../src/Modules/Media/VideoMedia.ts","../../src/Modules/Media/AudioMedia.ts","../../src/Modules/Layout/Layout.ts","../../src/Modules/Region/Region.ts","../../src/Types/XLR/XLR.types.ts","../../src/xibo-layout-renderer.ts"],"sourcesContent":["export let createNanoEvents = () => ({\n  emit(event, ...args) {\n    for (\n      let i = 0,\n        callbacks = this.events[event] || [],\n        length = callbacks.length;\n      i < length;\n      i++\n    ) {\n      callbacks[i](...args)\n    }\n  },\n  events: {},\n  on(event, cb) {\n    ;(this.events[event] ||= []).push(cb)\n    return () => {\n      this.events[event] = this.events[event]?.filter(i => cb !== i)\n    }\n  }\n})\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {OptionsType} from \"../../Types/Layout\";\r\n\r\nconst RESOURCE_URL = '/playlist/widget/resource/:regionId/:id';\r\nconst XLF_URL = '/layout/xlf/:layoutId';\r\nconst LAYOUT_BACKGROUND_DOWNLOAD_URL = '/layout/background/:id';\r\nconst LAYOUT_PREVIEW_URL = '/layout/preview/[layoutCode]';\r\nconst LIBRARY_DOWNLOAD_URL = '/library/download/:id';\r\nconst LOADER_URL = '/theme/default/img/loader.gif';\r\n\r\nexport const platform: OptionsType = {\r\n    getResourceUrl: RESOURCE_URL,\r\n    xlfUrl: XLF_URL,\r\n    layoutBackgroundDownloadUrl: LAYOUT_BACKGROUND_DOWNLOAD_URL,\r\n    layoutPreviewUrl: LAYOUT_PREVIEW_URL,\r\n    libraryDownloadUrl: LIBRARY_DOWNLOAD_URL,\r\n    loaderUrl: LOADER_URL,\r\n    idCounter: 0,\r\n    inPreview: true,\r\n    appHost: null,\r\n    platform: 'CMS',\r\n};\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {DefaultEvents, Emitter, Unsubscribe} from \"nanoevents\";\r\nimport {IRegion} from \"../Region\";\r\nimport {platform} from \"../../Modules/Platform\";\r\nimport {ILayoutEvents} from \"../../Modules/Layout\";\r\nimport {IXlr} from \"../XLR\";\r\n\r\nexport type InputLayoutType = {\r\n    layoutId: number | null;\r\n    path?: string;\r\n};\r\n\r\nexport type OptionsType = {\r\n    xlfUrl: string;\r\n    getResourceUrl: string;\r\n    layoutBackgroundDownloadUrl: string;\r\n    layoutPreviewUrl: string;\r\n    libraryDownloadUrl: string;\r\n    loaderUrl: string;\r\n    idCounter: number;\r\n    inPreview: boolean;\r\n    appHost?: string | null;\r\n    platform: 'CMS' | 'chromeOS';\r\n    config?: {\r\n        cmsUrl: string | null;\r\n        schemaVersion: number;\r\n        cmsKey: string | null;\r\n        hardwareKey: string | null;\r\n    };\r\n};\r\n\r\nexport interface ILayout {\r\n    id: number | null;\r\n    layoutId: number | null;\r\n    sw: number | null;\r\n    sh: number | null;\r\n    xw: number | null;\r\n    xh: number | null;\r\n    zIndex: number | null;\r\n    scaleFactor: number;\r\n    sWidth: number;\r\n    sHeight: number;\r\n    offsetX: number;\r\n    offsetY: number;\r\n    bgColor: string;\r\n    bgImage: string;\r\n    bgId: string;\r\n    containerName: string;\r\n    layoutNode: Document | null;\r\n    regionMaxZIndex: number;\r\n    ready: boolean;\r\n    regionObjects: IRegion[];\r\n    drawer: String[];\r\n    allExpired: boolean;\r\n    regions: IRegion[];\r\n    actions: String[];\r\n    options: OptionsType;\r\n    done: boolean;\r\n    allEnded: boolean;\r\n    path?: string;\r\n    prepareLayout(): void;\r\n    parseXlf(): void;\r\n    run(): void;\r\n    emitter?: Emitter<DefaultEvents>;\r\n    on<E extends keyof ILayoutEvents>(event: E, callback: ILayoutEvents[E]): Unsubscribe;\r\n    regionExpired(): void;\r\n    end(): void;\r\n    regionEnded(): void;\r\n    stopAllMedia(): Promise<void>;\r\n}\r\n\r\nexport const initialLayout: ILayout = {\r\n    id: null,\r\n    layoutId: null,\r\n    sw: 0,\r\n    sh: 0,\r\n    xw: 0,\r\n    xh: 0,\r\n    zIndex: 0,\r\n    scaleFactor: 1,\r\n    sWidth: 0,\r\n    sHeight: 0,\r\n    offsetX: 0,\r\n    offsetY: 0,\r\n    bgColor: '',\r\n    bgImage: '',\r\n    bgId: '',\r\n    containerName: '',\r\n    layoutNode: null,\r\n    regionMaxZIndex: 0,\r\n    ready: false,\r\n    regionObjects: [],\r\n    drawer: [],\r\n    allExpired: false,\r\n    regions: [],\r\n    actions: [],\r\n    options: platform,\r\n    done: false,\r\n    allEnded: false,\r\n    path: '',\r\n    prepareLayout() {\r\n    },\r\n    parseXlf() {\r\n    },\r\n    run() {\r\n    },\r\n    on<E extends keyof ILayoutEvents>(event: E, callback: ILayoutEvents[E]): Unsubscribe {\r\n        return <Unsubscribe>{};\r\n    },\r\n    regionExpired() {\r\n    },\r\n    end() {\r\n    },\r\n    regionEnded() {\r\n    },\r\n    stopAllMedia() {\r\n        return Promise.resolve();\r\n    },\r\n};\r\n\r\nexport type GetLayoutParamType = {\r\n    xlr: IXlr;\r\n    moveNext?: boolean;\r\n}\r\n\r\nexport type GetLayoutType = {\r\n    currentLayoutIndex: number;\r\n    inputLayouts: InputLayoutType[];\r\n    current: ILayout | undefined;\r\n    next: ILayout | undefined;\r\n}\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { IMedia } from '../../Types/Media';\r\nimport {InputLayoutType, OptionsType} from \"../../Types/Layout\";\r\n\r\nexport function nextId(options: { idCounter: number; }) {\r\n    if (options.idCounter > 500) {\r\n        options.idCounter = 0;\r\n    }\r\n\r\n    options.idCounter = options.idCounter + 1;\r\n    return options.idCounter;\r\n}\r\n\r\nexport const getMediaId = ({mediaType, containerName}: IMedia) => {\r\n    let mediaId = containerName;\r\n\r\n    if (mediaType === 'video') {\r\n        mediaId = mediaId + '-vid';\r\n    } else if (mediaType === 'audio') {\r\n        mediaId = mediaId + '-aud';\r\n    }\r\n\r\n    return mediaId;\r\n};\r\n\r\nexport const capitalizeStr = (inputStr: string) => {\r\n    if (inputStr === null) {\r\n        return '';\r\n    }\r\n\r\n    return String(inputStr).charAt(0).toUpperCase() + String(inputStr).substring(1);\r\n};\r\n\r\nexport async function getDataBlob(src: string) {\r\n    return fetch(src, {mode: 'no-cors'})\r\n        .then((res) => res.blob())\r\n        .then((blob) => new Promise((res, rej) => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onloadend = () => res(reader.result);\r\n            reader.onerror = rej;\r\n            reader.readAsDataURL(blob);\r\n        }));\r\n}\r\n\r\nexport async function preloadMediaBlob(src: string, type: 'video' | 'audio' | 'image') {\r\n    const res = await fetch(src, {mode: 'no-cors'});\r\n    let blob: Blob | MediaSource = new Blob();\r\n\r\n    if (type === 'image') {\r\n        blob = new Blob()\r\n    } else if (type === 'video') {\r\n        blob = await res.blob();\r\n    } else if (type === 'audio') {\r\n        const data = await res.arrayBuffer();\r\n        blob = new Blob([data], { type: audioFileType(getFileExt(src)) })\r\n    }\r\n\r\n    console.log({blob})\r\n    return URL.createObjectURL(blob);\r\n}\r\n\r\nexport async function fetchJSON(url: string) {\r\n    return fetch(url)\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport function getFileExt(filename: string) {\r\n    const filenameArr = String(filename).split('.');\r\n\r\n    return filenameArr[filenameArr.length - 1];\r\n}\r\n\r\nexport function audioFileType(str: string) {\r\n    const validAudioTypes = {\r\n        'mp3': 'audio/mp3',\r\n        'wav': 'audio/wav',\r\n        'ogg': 'audio/ogg',\r\n    };\r\n\r\n    if (Boolean(validAudioTypes[str as 'mp3' | 'wav' | 'ogg'])) {\r\n        return validAudioTypes[str as 'mp3' | 'wav' | 'ogg'];\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nexport function composeResourceUrlByPlatform(platform: OptionsType['platform'], params: any) {\r\n    let resourceUrl = params.regionOptions.getResourceUrl\r\n        .replace(\":regionId\", params.regionId)\r\n        .replace(\":id\", params.mediaId) +\r\n        '?preview=1&layoutPreview=1';\r\n\r\n    if (platform === 'chromeOS') {\r\n        resourceUrl = params.cmsUrl +\r\n            '/chromeOS/resource/' +\r\n            params.fileId +\r\n            '?saveAs=' + params.uri;\r\n    } else if (!Boolean(params['mediaType'])) {\r\n        resourceUrl += '&scale_override=' + params.scaleFactor;\r\n    }\r\n\r\n    return resourceUrl;\r\n}\r\n\r\nexport function composeBgUrlByPlatform(\r\n    platform: OptionsType['platform'],\r\n    params: any\r\n) {\r\n    let bgImageUrl = params.layoutBackgroundDownloadUrl.replace(\":id\", (params.layout.id as unknown) as string) +\r\n        '?preview=1&width=' + params.layout.sWidth +\r\n        '&height=' + params.layout.sHeight +\r\n        '&dynamic&proportional=0';\r\n\r\n    if (platform === 'chromeOS') {\r\n        bgImageUrl = params.cmsUrl +\r\n            '/chromeOS/resource/' + params.layout.id +\r\n            '?saveAs=' + params.layout.bgImage;\r\n    }\r\n\r\n    return bgImageUrl;\r\n}\r\n\r\ntype LayoutIndexType = {\r\n    [k: string]: InputLayoutType & {\r\n        index: number;\r\n    }\r\n}\r\n\r\nexport function getIndexByLayoutId(layoutsInput: InputLayoutType[], layoutId?: number | null) {\r\n    let layoutIndexes = layoutsInput.reduce((a: LayoutIndexType, b, indx) => {\r\n        a[Number(b.layoutId)] = {\r\n            ...b,\r\n            index: indx\r\n        };\r\n\r\n        return a;\r\n    }, {});\r\n\r\n    if (layoutId === null || !layoutId) {\r\n        return layoutIndexes;\r\n    }\r\n\r\n    return layoutIndexes[layoutId];\r\n}\r\n\r\nexport function isEmpty(input: any) {\r\n    return !Boolean(input) || String(input).length === 0;\r\n}\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { DefaultEvents, Emitter, Unsubscribe } from \"nanoevents\";\r\nimport {ILayout, initialLayout, OptionsType} from \"../Layout/Layout.types\";\r\nimport {platform} from \"../../Modules/Platform/Platform\";\r\nimport {IMedia} from \"../Media/Media.types\";\r\n\r\nexport interface IRegionEvents {\r\n    start: (layout: IRegion) => void;\r\n    end: (layout: IRegion) => void;\r\n}\r\n\r\nexport interface IRegion {\r\n    layout: ILayout;\r\n    id: string;\r\n    regionId: string;\r\n    xml: null | Element;\r\n    mediaObjects: IMedia[];\r\n    mediaObjectsActions: String[];\r\n    currentMedia: number;\r\n    complete: boolean;\r\n    containerName: string;\r\n    ending: boolean;\r\n    ended: boolean;\r\n    oneMedia: boolean;\r\n    oldMedia: IMedia | undefined;\r\n    curMedia: IMedia | undefined;\r\n    nxtMedia: IMedia | undefined;\r\n    currentMediaIndex: number;\r\n    totalMediaObjects: number;\r\n    ready: boolean;\r\n    options: {\r\n        [k: string]: any;\r\n    };\r\n    sWidth: number;\r\n    sHeight: number;\r\n    offsetX: number;\r\n    offsetY: number;\r\n    zIndex: number;\r\n    index: number;\r\n    emitter?: Emitter<DefaultEvents>;\r\n    prepareRegion(): void;\r\n    playNextMedia(): void;\r\n    transitionNodes(oldMedia: IMedia | undefined, newMedia: IMedia | undefined): void;\r\n    finished(): void;\r\n    run(): void;\r\n    end(): void;\r\n    exitTransition(): void;\r\n    exitTransitionComplete(): void;\r\n    on<E extends keyof IRegionEvents>(event: E, callback: IRegionEvents[E]): Unsubscribe;\r\n    prepareMediaObjects(): void;\r\n}\r\n\r\nexport const initialRegion: IRegion = {\r\n    layout: initialLayout,\r\n    id: '',\r\n    regionId: '',\r\n    xml: null,\r\n    mediaObjects: [],\r\n    mediaObjectsActions: [],\r\n    currentMedia: -1,\r\n    complete: false,\r\n    containerName: '',\r\n    ending: false,\r\n    ended: false,\r\n    oneMedia: false,\r\n    oldMedia: undefined,\r\n    curMedia: undefined,\r\n    nxtMedia: undefined,\r\n    currentMediaIndex: 0,\r\n    totalMediaObjects: 0,\r\n    ready: false,\r\n    options: {},\r\n    sWidth: 0,\r\n    sHeight: 0,\r\n    offsetX: 0,\r\n    offsetY: 0,\r\n    zIndex: 0,\r\n    index: -1,\r\n    prepareRegion() {\r\n    },\r\n    playNextMedia() {\r\n    },\r\n    transitionNodes() {\r\n    },\r\n    finished() {\r\n    },\r\n    run() {\r\n    },\r\n    end() {\r\n    },\r\n    exitTransition() {},\r\n    exitTransitionComplete() {},\r\n    on<E extends keyof IRegionEvents>(event: E, callback: IRegionEvents[E]): Unsubscribe {\r\n        return <Unsubscribe>{};\r\n    },\r\n    prepareMediaObjects() {\r\n    },\r\n};\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { DefaultEvents, Emitter, Unsubscribe } from \"nanoevents\";\r\nimport { IMediaEvents } from \"../../Modules/Media/Media\";\r\nimport {initialRegion, IRegion} from \"../Region/Region.types\";\r\n\r\nexport interface IMedia {\r\n    region: IRegion;\r\n    xml: null | Element;\r\n    id: string;\r\n    idCounter: number;\r\n    index: number;\r\n    containerName: string;\r\n    html: null | HTMLElement;\r\n    iframe: null | HTMLIFrameElement;\r\n    iframeName: string;\r\n    mediaType: string;\r\n    render: string;\r\n    attachedAudio: boolean;\r\n    singlePlay: boolean;\r\n    timeoutId: ReturnType<typeof setTimeout>;\r\n    ready: boolean;\r\n    checkIframeStatus: boolean;\r\n    loadIframeOnRun: boolean;\r\n    tempSrc: string;\r\n    finished: boolean;\r\n    schemaVersion: string;\r\n    type: string;\r\n    duration: number;\r\n    useDuration: boolean;\r\n    fileId: string;\r\n    uri: string;\r\n    options: {\r\n        [k: string]: any;\r\n    };\r\n    divWidth: number;\r\n    divHeight: number;\r\n    url: string | null;\r\n    loop: boolean;\r\n    emitter?: Emitter<DefaultEvents>;\r\n    run(): void;\r\n    init(): void;\r\n    stop(): Promise<void>;\r\n    on<E extends keyof IMediaEvents>(event: E, callback: IMediaEvents[E]): Unsubscribe;\r\n}\r\n\r\nexport const initialMedia: IMedia = {\r\n    region: initialRegion,\r\n    xml: null,\r\n    id: '',\r\n    index: 0,\r\n    idCounter: 0,\r\n    containerName: '',\r\n    html: null,\r\n    iframe: null,\r\n    iframeName: '',\r\n    mediaType: '',\r\n    render: 'html',\r\n    attachedAudio: false,\r\n    singlePlay: false,\r\n    timeoutId: setTimeout(() => {}, 100),\r\n    ready: true,\r\n    checkIframeStatus: false,\r\n    loadIframeOnRun: false,\r\n    tempSrc: '',\r\n    finished: false,\r\n    schemaVersion: '1',\r\n    type: '',\r\n    duration: 0,\r\n    useDuration: Boolean(0),\r\n    fileId: '',\r\n    uri: '',\r\n    options: {},\r\n    divWidth: 0,\r\n    divHeight: 0,\r\n    url: null,\r\n    loop: false,\r\n    run() {},\r\n    init() {},\r\n    stop() {\r\n        return Promise.resolve();\r\n    },\r\n    on<E extends keyof IMediaEvents>(event: E, callback: IMediaEvents[E]): Unsubscribe {\r\n        return <Unsubscribe>{};\r\n    },\r\n}\r\n","/*\n * Copyright (C) 2024 Xibo Signage Ltd\n *\n * Xibo - Digital Signage - https://www.xibosignage.com\n *\n * This file is part of Xibo.\n *\n * Xibo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * Xibo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\n */\nexport const defaultTrans = (duration: number, trans: 'in' | 'out') => {\n    const defaultKeyframes = [\n        { display: trans === 'in' ? 'none' : 'block' },\n        { display: trans === 'out' ? 'none' : 'block' },\n    ];\n    const defaultTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n    };\n\n    return {\n        keyframes: defaultKeyframes,\n        timing: defaultTiming,\n    };\n};\n\nexport const fadeInElem = (duration: number) => {\n    const fadeInKeyframes = [\n        { opacity: 0 },\n        { opacity: 1 },\n    ];\n    const fadeInTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n        fill: 'forwards',\n    };\n\n    return {\n        keyframes: fadeInKeyframes,\n        timing: fadeInTiming,\n    }\n};\n\nexport const fadeOutElem = (duration: number) => {\n    const fadeOutKeyframes = [\n        { opacity: 1 },\n        { opacity: 0, zIndex: -1 },\n    ];\n    const fadeOutTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n        fill: 'forwards',\n    };\n\n    return {\n        keyframes: fadeOutKeyframes,\n        timing: fadeOutTiming,\n    }\n};\n\nexport type KeyframeOptionsType = {\n    from: {\n        [k: string]: any,\n    },\n    to: {\n        [k: string]: any,\n    },\n}\n\nexport const flyInElem = (duration: number, keyframeOptions: KeyframeOptionsType | undefined, direction?: string) => {\n    const flyInKeyframes = [\n        {opacity: 0},\n        {opacity: 1, zIndex: 1},\n    ];\n    const flyInTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n        fill: 'forwards',\n    };\n\n    if (keyframeOptions && Boolean(keyframeOptions.from)) {\n        flyInKeyframes[0] = {...keyframeOptions.from, ...flyInKeyframes[0]};\n    }\n\n    if (keyframeOptions && Boolean(keyframeOptions.to)) {\n        flyInKeyframes[1] = {...keyframeOptions.to, ...flyInKeyframes[1]};\n    }\n\n    return {\n        keyframes: flyInKeyframes,\n        timing: flyInTiming,\n    };\n};\n\nexport const flyOutElem = (duration: number, keyframeOptions: KeyframeOptionsType | undefined, direction?: string) => {\n    const flyOutKeyframes: Keyframe[] = [\n        {opacity: 1},\n        {opacity: 0, zIndex: -1},\n    ];\n    const flyOutTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n        fill: 'forwards',\n    };\n\n    if (keyframeOptions && Boolean(keyframeOptions.from)) {\n        flyOutKeyframes[0] = {...keyframeOptions.from, ...flyOutKeyframes[0]};\n    }\n\n    if (keyframeOptions && Boolean(keyframeOptions.to)) {\n        flyOutKeyframes[1] = {...keyframeOptions.to, ...flyOutKeyframes[1]};\n    }\n\n    return {\n        keyframes: flyOutKeyframes,\n        timing: flyOutTiming,\n    };\n};\n\nexport type TransitionNameType = 'fadeIn' | 'fadeOut' | 'flyIn' | 'flyOut' | 'defaultIn' | 'defaultOut';\n\nexport type TransitionElementOptions = {\n    duration: number;\n    keyframes?: KeyframeOptionsType;\n    direction?: string;\n};\n\nexport const transitionElement = (transition: TransitionNameType, options: TransitionElementOptions) => {\n    const transitions = {\n        fadeIn: fadeInElem(options.duration),\n        fadeOut: fadeOutElem(options.duration),\n        flyIn: flyInElem(options.duration, options.keyframes, options.direction),\n        flyOut: flyOutElem(options.duration, options.keyframes, options.direction),\n        defaultIn: defaultTrans(options.duration, 'in'),\n        defaultOut: defaultTrans(options.duration, 'out'),\n    };\n\n    return transitions[transition];\n};\n\nexport type compassPoints = 'N' | 'NE' | 'E' | 'SE' | 'S' | 'SW' | 'W' | 'NW';\n\nexport type flyTransitionParams = {\n    trans: 'in' | 'out';\n    direction: compassPoints;\n    height: string | number;\n    width: string | number;\n};\n\nexport const flyTransitionKeyframes = (params: flyTransitionParams): KeyframeOptionsType => {\n    const keyframes = {\n        from: {},\n        to: {},\n    };\n    const opacityAttr = (source: 'from' | 'to') => {\n        if (source === 'from') {\n            return params.trans === 'in' ? 0 : 1;\n        }\n        \n        return params.trans === 'out' ? 1 : 0;\n    };\n\n    switch (params.direction) {\n        case 'N':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `${params.height}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `-${params.height}px`,\n            };\n            break;\n        case 'NE':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `${params.height}px` : 0,\n                left: params.trans === 'in' ? `-${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `-${params.height}px`,\n                left: params.trans === 'in' ? 0 : `${params.width}px`,\n            };\n            break;\n        case 'E':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                left: params.trans === 'in' ? `-${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                left: params.trans === 'in' ? 0 : `${params.width}px`,\n            };\n            break;\n        case 'SE':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `-${params.height}px` : 0,\n                left: params.trans === 'in' ? `-${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `${params.height}px`,\n                left: params.trans === 'in' ? 0 : `${params.width}px`,\n            };\n            break;\n        case 'S':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `-${params.height}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `${params.height}px`,\n            };\n            break;\n        case 'SW':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `-${params.height}px` : 0,\n                left: params.trans === 'in' ? `${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `${params.height}px`,\n                left: params.trans === 'in' ? 0 : `-${params.width}px`,\n            };\n            break;\n        case 'W':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                left: params.trans === 'in' ? `${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                left: params.trans === 'in' ? 0 : `-${params.width}px`,\n            };\n            break;\n        case 'NW':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `${params.height}px` : 0,\n                left: params.trans === 'in' ? `${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `-${params.height}px`,\n                left: params.trans === 'in' ? 0 : `-${params.width}px`,\n            };\n            break;\n        default:\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `${params.height}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `-${params.height}px`,\n            };\n            break;\n    }\n\n    return keyframes;\n};\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { createNanoEvents } from \"nanoevents\";\r\nimport { OptionsType } from '../../Types/Layout';\r\nimport { IRegion } from '../../Types/Region';\r\nimport { IMedia, initialMedia } from '../../Types/Media';\r\nimport { fetchJSON, getMediaId, nextId, preloadMediaBlob } from '../Generators';\r\nimport { TransitionElementOptions, compassPoints, flyTransitionKeyframes, transitionElement } from '../Transitions';\r\nimport VideoMedia from './VideoMedia';\r\nimport AudioMedia from './AudioMedia';\r\nimport {composeResourceUrlByPlatform, getDataBlob} from \"../Generators/Generators\";\r\nimport {IXlr} from \"../../Types/XLR\";\r\n\r\nexport interface IMediaEvents {\r\n    start: (media: IMedia) => void;\r\n    end: (media: IMedia) => void;\r\n}\r\n\r\nexport default function Media(\r\n    region: IRegion,\r\n    mediaId: string,\r\n    xml: Element,\r\n    options: OptionsType,\r\n    xlr: IXlr,\r\n) {\r\n    const props = {\r\n        region: region,\r\n        mediaId: mediaId,\r\n        xml: xml,\r\n        options: options,\r\n    };\r\n    let mediaTimer: string | number | NodeJS.Timeout | null | undefined = null;\r\n    let mediaTimeCount = 0;\r\n    const emitter = createNanoEvents<IMediaEvents>();\r\n    const mediaObject: IMedia = {\r\n        ...initialMedia,\r\n        ...props,\r\n    };\r\n    const startMediaTimer = (media: IMedia) => {\r\n        mediaTimer = setInterval(() => {\r\n            mediaTimeCount++;\r\n            if (mediaTimeCount > media.duration) {\r\n                media.emitter?.emit('end', media);\r\n            }\r\n        }, 1000);\r\n        console.log('Showing Media ' + media.id + ' for ' + media.duration + 's of Region ' + media.region.regionId);\r\n    };\r\n\r\n    emitter.on('start', function(media) {\r\n        if (media.mediaType === 'video') {\r\n            VideoMedia(media).init();\r\n\r\n            if (media.duration > 0) {\r\n                startMediaTimer(media);\r\n            }\r\n        } else if (media.mediaType === 'audio') {\r\n            AudioMedia(media).init();\r\n            if (media.duration > 0) {\r\n                startMediaTimer(media);\r\n            }\r\n        } else {\r\n            startMediaTimer(media);\r\n        }\r\n    });\r\n\r\n    emitter.on('end', function(media) {\r\n        if (mediaTimer) {\r\n            clearInterval(mediaTimer);\r\n            mediaTimeCount = 0;\r\n        }\r\n\r\n        media.region.playNextMedia();\r\n    });\r\n\r\n    mediaObject.init = function() {\r\n        const self = mediaObject;\r\n        self.id = props.mediaId;\r\n        self.fileId = self.xml?.getAttribute('fileId') || '';\r\n        self.idCounter = nextId(props.options);\r\n        self.containerName = `M-${self.id}-${self.idCounter}`;\r\n        self.iframeName = `${self.containerName}-iframe`;\r\n        self.mediaType = self.xml?.getAttribute('type') || '';\r\n        self.render = self.xml?.getAttribute('render') || '';\r\n        self.duration = parseInt(self.xml?.getAttribute('duration') as string) || 0;\r\n        self.options = { ...props.options, mediaId };\r\n\r\n        const $mediaIframe = document.createElement('iframe');\r\n        const mediaOptions = self.xml?.getElementsByTagName('options');\r\n\r\n        if (mediaOptions) {\r\n            for (let _options of Array.from(mediaOptions)) {\r\n                // Get options\r\n                const _mediaOptions = _options.children;\r\n                for (let mediaOption of Array.from(_mediaOptions)) {\r\n                    self.options[mediaOption.nodeName.toLowerCase()] = mediaOption.textContent;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check for options.uri and add it to media\r\n        if (Boolean(self.options['uri'])) {\r\n            self.uri = self.options['uri'];\r\n        }\r\n\r\n        // Show in fullscreen?\r\n        if(self.options.showfullscreen === \"1\") {\r\n            // Set dimensions as the layout ones\r\n            self.divWidth = self.region.layout.sWidth;\r\n            self.divHeight = self.region.layout.sHeight;\r\n        } else {\r\n            // Set dimensions as the region ones\r\n            self.divWidth = self.region.sWidth;\r\n            self.divHeight = self.region.sHeight;\r\n        }\r\n\r\n        $mediaIframe.scrolling = 'no';\r\n        $mediaIframe.id = self.iframeName;\r\n        $mediaIframe.width = `${self.divWidth}px`;\r\n        $mediaIframe.height = `${self.divHeight}px`;\r\n        $mediaIframe.style.cssText = `border: 0; visibility: hidden;`;\r\n\r\n        const $mediaId = getMediaId(self);\r\n        let $media = document.getElementById($mediaId);\r\n\r\n        if ($media === null) {\r\n            if (self.mediaType === 'video') {\r\n                $media = document.createElement('video');\r\n            } else if (self.mediaType === 'audio') {\r\n                $media = new Audio();\r\n            } else {\r\n                $media = document.createElement('div');\r\n            }\r\n        \r\n            $media.id = $mediaId;\r\n        }\r\n\r\n        $media.className = 'media--item';\r\n\r\n        /* Scale the Content Container */\r\n        $media.style.cssText = `\r\n            display: none;\r\n            width: ${self.divWidth}px;\r\n            height: ${self.divHeight}px;\r\n            position: absolute;\r\n            background-size: contain;\r\n            background-repeat: no-repeat;\r\n            background-position: center;\r\n        `;\r\n\r\n        const $region = document.getElementById(`${self.region.containerName}`);\r\n\r\n        const resourceUrlParams: any = {\r\n            ...xlr.config.config,\r\n            regionOptions: self.region.options,\r\n            layoutId: self.region.layout.layoutId,\r\n            regionId: self.region.id,\r\n            mediaId: self.id,\r\n            fileId: self.fileId,\r\n            scaleFactor: self.region.layout.scaleFactor,\r\n            uri: self.uri,\r\n        };\r\n\r\n        if (self.mediaType === 'image' || self.mediaType === 'video') {\r\n            resourceUrlParams.mediaType = self.mediaType;\r\n        }\r\n\r\n        const tmpUrl = composeResourceUrlByPlatform(xlr.config.platform, resourceUrlParams);\r\n\r\n        self.url = tmpUrl;\r\n\r\n        // Loop if media has loop, or if region has loop and a single media\r\n        self.loop =\r\n            self.options['loop'] == '1' ||\r\n            (self.region.options['loop'] == '1' && self.region.totalMediaObjects == 1);\r\n\r\n        $mediaIframe.src = `${tmpUrl}&width=${self.divWidth}&height=${self.divHeight}`;\r\n\r\n        if (self.render === 'html' || self.mediaType === 'ticker' || self.mediaType === 'webpage') {\r\n            self.checkIframeStatus = true;\r\n            self.iframe = $mediaIframe;\r\n        }  else if (self.mediaType === \"image\") {\r\n            // preload.addFiles(tmpUrl);\r\n            // $media.style.cssText = $media.style.cssText.concat(`background-image: url('${tmpUrl}');`);\r\n            if (self.options['scaletype'] === 'stretch') {\r\n                $media.style.cssText = $media.style.cssText.concat(`background-size: 100% 100%;`);\r\n            } else if (self.options['scaletype'] === 'fit') {\r\n                $media.style.cssText = $media.style.cssText.concat(`background-size: cover;`);\r\n            } else {\r\n                // Center scale type, do we have align or valign?\r\n                const align = (self.options['align'] == \"\") ? \"center\" : self.options['align'];\r\n                const valign = (self.options['valign'] == \"\" || self.options['valign'] == \"middle\") ? \"center\" : self.options['valign'];\r\n                $media.style.cssText = $media.style.cssText.concat(`background-position: ${align} ${valign}`);\r\n            }\r\n        } else if (self.mediaType === 'video') {\r\n            const $videoMedia = $media as HTMLVideoElement;\r\n\r\n            $videoMedia.preload = 'auto';\r\n            $videoMedia.textContent = 'Unsupported Video';\r\n\r\n            if (Boolean(self.options['mute'])) {\r\n                $videoMedia.muted = self.options.mute === '1';\r\n            }\r\n\r\n            if (Boolean(self.options['scaletype'])) {\r\n                if (self.options.scaletype === 'stretch') {\r\n                    $videoMedia.style.objectFit = 'fill';\r\n                }\r\n            }\r\n            $videoMedia.playsInline = true;\r\n\r\n            if (self.loop) {\r\n                $videoMedia.loop = true;\r\n            }\r\n\r\n            $media = $videoMedia;\r\n        } else if (self.mediaType === 'audio') {\r\n            const $audioMedia = $media as HTMLAudioElement;\r\n\r\n            $audioMedia.preload = 'auto';\r\n            $audioMedia.textContent = 'Unsupported Audio';\r\n            $audioMedia.autoplay = true;\r\n\r\n            if (self.loop) {\r\n                $audioMedia.loop = true;\r\n            }\r\n\r\n            $media = $audioMedia;\r\n        }\r\n\r\n        // Duration is per item condition\r\n        if (self.render === 'html' || self.mediaType === 'ticker') {\r\n            /* Check if the ticker duration is based on the number of items in the feed */\r\n            if (self.options['durationisperitem'] === '1') {\r\n                const regex = new RegExp('<!-- NUMITEMS=(.*?) -->');\r\n\r\n                (async () => {\r\n                    let html = await fetchJSON(`${tmpUrl}&width=${self.divWidth}&height=${self.divHeight}`);\r\n                    console.log({html});\r\n                    const res = regex.exec(html);\r\n\r\n                    if (res !== null) {\r\n                        self.duration = parseInt(String(self.duration)) * parseInt(res[1]);\r\n                    }\r\n                })();\r\n            }\r\n        }\r\n\r\n        // Check if the media has fade-in/out transitions\r\n        if (Boolean(self.options['transin']) && Boolean(self.options['transinduration'])) {\r\n            const transInDuration = Number(self.options.transinduration);\r\n            const fadeInTrans = transitionElement('fadeIn', { duration: transInDuration });\r\n            $media.animate(fadeInTrans.keyframes, fadeInTrans.timing);\r\n        }\r\n\r\n        // Add media to the region\r\n        // Second media if exists, will be off-canvas\r\n        // All added media will be hidden by default\r\n        // It will start showing when region.nextMedia() function is called\r\n\r\n        // When there's only 1 item and loop = false, don't remove the item but leave it at its last state\r\n        // For image, and only 1 item, it should still have the transition for next state\r\n        // Add conditions for video duration being 0 or 1 and also the loop property\r\n        // For video url, we have to create a URL out of the XLF video URL\r\n\r\n        /**\r\n         * @DONE\r\n         * Case 1: Video duration = 0, this will play the video for its entire duration\r\n         * Case 2: Video duration is set > 0 and loop = false\r\n         * E.g. Set duration = 100s, video duration = 62s\r\n         * the video will play until 62s and will stop to its last frame until 100s\r\n         * After 100s, it will expire\r\n         * Case 3: Video duration is set > 0 and loop = true\r\n         * E.g. Set duration = 100s, video duration = 62s, loop = true\r\n         * the video will play until 62s and will loop through until the remaining 38s\r\n         * to complete the 100s set duration\r\n         */\r\n\r\n        // Add html node to media for \r\n\r\n        self.html = $media;\r\n\r\n        // Check/set iframe based widgets play status\r\n        // if(self.iframe && self.checkIframeStatus) {\r\n        //     // Set state as false ( for now )\r\n        //     self.ready = false;\r\n        //\r\n        //     // Append iframe\r\n        //     $media.innerHTML = '';\r\n        //     $media.appendChild(self.iframe as Node);\r\n        //\r\n        //     // On iframe load, set state as ready to play full preview\r\n        //     (self.iframe) && self.iframe.addEventListener('load', function(){\r\n        //         self.ready = true;\r\n        //         if (self.iframe) {\r\n        //             const iframeStyles = self.iframe.style.cssText;\r\n        //             self.iframe.style.cssText = iframeStyles?.concat('visibility: visible;');\r\n        //         }\r\n        //     });\r\n        // }\r\n\r\n    };\r\n\r\n    mediaObject.run = function() {\r\n        const self = mediaObject;\r\n        let transInDuration = 1;\r\n        let transInDirection: compassPoints = 'E';\r\n\r\n        if (Boolean(self.options['transinduration'])) {\r\n            transInDuration = Number(self.options.transinduration);\r\n        }\r\n\r\n        if (Boolean(self.options['transindirection'])) {\r\n            transInDirection = self.options.transindirection;\r\n        }\r\n\r\n        let defaultTransInOptions: TransitionElementOptions = {duration: transInDuration};\r\n        let transIn = transitionElement('defaultIn', {duration: defaultTransInOptions.duration});\r\n        \r\n        if (Boolean(self.options['transin'])) {\r\n            let transInName = self.options['transin'];\r\n\r\n            if (transInName === 'fly') {\r\n                transInName = `${transInName}In`;\r\n                defaultTransInOptions.keyframes = flyTransitionKeyframes({\r\n                    trans: 'in',\r\n                    direction: transInDirection,\r\n                    height: self.divHeight,\r\n                    width: self.divWidth,\r\n                });\r\n            }\r\n\r\n            transIn = transitionElement(transInName, defaultTransInOptions);\r\n        }\r\n\r\n        const showCurrentMedia = async () => {\r\n            let $mediaId = getMediaId(self);\r\n            let $media = document.getElementById($mediaId);\r\n            const isCMS = xlr.config.platform === 'CMS';\r\n\r\n            if ($media === null) {\r\n                $media = getNewMedia();\r\n            }\r\n\r\n            if ($media !== null) {\r\n                $media.style.setProperty('display', 'block');\r\n\r\n                if (Boolean(self.options['transin'])) {\r\n                    $media.animate(transIn.keyframes, transIn.timing);\r\n                }\r\n\r\n                if (self.mediaType === 'image' && self.url !== null) {\r\n                    ($media as HTMLImageElement).style\r\n                        .setProperty(\r\n                            'background-image',\r\n                            `url(${!isCMS ? self.url : await getDataBlob(self.url)}`\r\n                        );\r\n                } else if (self.mediaType === 'video' && self.url !== null) {\r\n                    ($media as HTMLVideoElement).src =\r\n                        isCMS ? await preloadMediaBlob(self.url, self.mediaType) : self.url;\r\n                } else if (self.mediaType === 'audio' && self.url !== null) {\r\n                    ($media as HTMLAudioElement).src =\r\n                        isCMS ? await preloadMediaBlob(self.url, self.mediaType) : self.url;\r\n                } else if ((self.render === 'html' || self.mediaType === 'webpage') &&\r\n                    self.iframe && self.checkIframeStatus\r\n                ) {\r\n                    // Set state as false ( for now )\r\n                    self.ready = false;\r\n\r\n                    // Append iframe\r\n                    $media.innerHTML = '';\r\n                    $media.appendChild(self.iframe as Node);\r\n\r\n                    // On iframe load, set state as ready to play full preview\r\n                    (self.iframe) && self.iframe.addEventListener('load', function(){\r\n                        self.ready = true;\r\n                        if (self.iframe) {\r\n                            const iframeStyles = self.iframe.style.cssText;\r\n                            self.iframe.style.cssText = iframeStyles?.concat('visibility: visible;');\r\n                        }\r\n                    });\r\n                }\r\n\r\n                self.emitter?.emit('start', self);\r\n            }\r\n        };\r\n        const getNewMedia = (): HTMLElement | null => {\r\n            const $region = document.getElementById(`${self.region.containerName}`);\r\n            // This function is for checking whether\r\n            // the region still has to show a media item\r\n            // when another region is not finished yet\r\n            if (self.region.complete && !self.region.layout.allEnded) {\r\n                // Add currentMedia to the region\r\n\r\n                ($region) && $region.insertBefore(self.html as Node, $region.lastElementChild);\r\n\r\n                return self.html as HTMLElement;\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        showCurrentMedia();\r\n    };\r\n\r\n    mediaObject.stop = async function() {\r\n        const self = mediaObject;\r\n        const $media = document.getElementById(getMediaId(self));\r\n\r\n        if ($media) {\r\n            $media.style.display = 'none';\r\n            $media.remove();\r\n        }\r\n    };\r\n\r\n    \r\n    mediaObject.on = function<E extends keyof IMediaEvents>(event: E, callback: IMediaEvents[E]) {\r\n        return emitter.on(event, callback);\r\n    };\r\n\r\n    mediaObject.emitter = emitter;\r\n\r\n    mediaObject.init();\r\n\r\n    return mediaObject;\r\n}","/*\n * Copyright (C) 2024 Xibo Signage Ltd\n *\n * Xibo - Digital Signage - https://www.xibosignage.com\n *\n * This file is part of Xibo.\n *\n * Xibo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * Xibo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport { IMedia } from '../../Types/Media';\nimport { capitalizeStr, getMediaId } from '../Generators';\n\nexport default function VideoMedia(media: IMedia) {\n    const videoMediaObject = {\n        init() {\n            const $videoMedia = document.getElementById(getMediaId(media)) as HTMLVideoElement;\n\n            if ($videoMedia) {\n                $videoMedia.onloadstart = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} has started loading data . . .`);\n                };\n                $videoMedia.onloadeddata = () => {\n                    if ($videoMedia.readyState >= 2) {\n                        console.log(`${capitalizeStr(media.mediaType)} data for media > ${media.id} has been fully loaded . . .`);\n                    }\n                };\n                $videoMedia.oncanplay = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} can be played . . .`);\n        \n                    const videoPlayPromise = $videoMedia.play();\n        \n                    if (videoPlayPromise !== undefined) {\n                        videoPlayPromise.then(() => {\n                            console.log('autoplay started . . .');\n                            // Autoplay restarted\n                        }).catch(error => {\n                            $videoMedia.muted = true;\n                            $videoMedia.play();\n                        });\n                    }\n                };\n                $videoMedia.onplaying = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} is now playing . . .`);\n                };\n\n                if (media.duration === 0) {\n                    $videoMedia.ondurationchange = () => {\n                        console.log('Showing Media ' + media.id + ' for ' + $videoMedia.duration + 's of Region ' + media.region.regionId);\n                    };\n                    $videoMedia.onended = () => {\n                        console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} has ended playing . . .`);\n                        media.emitter?.emit('end', media);\n                    };\n                }\n            }\n        }\n    }\n\n    return videoMediaObject;\n}\n","/*\n * Copyright (C) 2024 Xibo Signage Ltd\n *\n * Xibo - Digital Signage - https://www.xibosignage.com\n *\n * This file is part of Xibo.\n *\n * Xibo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * Xibo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport { IMedia } from '../../Types/Media';\nimport { capitalizeStr, getMediaId } from '../Generators';\n\nimport './media.css';\n\nexport default function AudioMedia(media: IMedia) {\n    const audioMediaObject = {\n        init() {\n            const $audioMedia = document.getElementById(getMediaId(media)) as HTMLAudioElement;\n            let $playBtn: HTMLButtonElement | null = null;\n\n            if ($audioMedia) {\n                $audioMedia.onloadstart = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} has started loading data . . .`);\n                };\n                $audioMedia.onloadeddata = () => {\n                    if ($audioMedia.readyState >= 2) {\n                        console.log(`${capitalizeStr(media.mediaType)} data for media > ${media.id} has been fully loaded . . .`);\n                    }\n                };\n                $audioMedia.oncanplay = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} can be played . . .`);\n                };\n                $audioMedia.onplaying = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} is now playing . . .`);\n\n                    if ($playBtn !== null) {\n                        $playBtn.remove();\n                    }\n                };\n\n                const audioPlayPromise = $audioMedia.play();\n    \n                if (audioPlayPromise !== undefined) {\n                    audioPlayPromise.then(() => {\n                        console.log('autoplay started . . .');\n                        // Autoplay restarted\n                    }).catch(error => {\n                        if (error.name === 'NotAllowedError') {\n                            // Let's show a play audio button\n                            $playBtn = document.createElement('button');\n\n                            $playBtn.classList.add('play-audio-btn');\n                            $playBtn.textContent = 'Play Audio';\n                            $playBtn.addEventListener('click', () => {\n                                $audioMedia.muted = false;\n                                $audioMedia.play();\n                            });\n                            $audioMedia.parentNode?.insertBefore($playBtn, $audioMedia.nextSibling);\n                        }\n                    });\n                }\n                if (media.duration === 0) {\n                    $audioMedia.ondurationchange = () => {\n                        console.log('Showing Media ' + media.id + ' for ' + $audioMedia.duration + 's of Region ' + media.region.regionId);\n                    };\n                    $audioMedia.onended = () => {\n                        console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} has ended playing . . .`);\n                        media.emitter?.emit('end', media);\n                    };\n                }\n            }\n        },\n    };\n\n    return audioMediaObject;\n}\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {createNanoEvents} from 'nanoevents';\r\nimport {\r\n    GetLayoutParamType,\r\n    GetLayoutType,\r\n    ILayout,\r\n    initialLayout,\r\n    OptionsType,\r\n} from '../../Types/Layout';\r\nimport { IXlr } from '../../Types/XLR';\r\nimport { nextId } from '../Generators';\r\nimport { Region } from '../Region';\r\n\r\nimport './layout.css';\r\nimport {composeBgUrlByPlatform, getIndexByLayoutId} from '../Generators/Generators';\r\n\r\nconst playAgainClickHandle = function(ev: { preventDefault: () => void; }) {\r\n    ev.preventDefault();\r\n    history.go(0);\r\n};\r\n\r\nexport function initRenderingDOM(targetContainer: Element | null) {\r\n    let _targetContainer = targetContainer;\r\n    const previewPlayer = document.createElement('div');\r\n    const previewScreen = document.createElement('div');\r\n    const endPlay = document.createElement('div');\r\n    const playAgainLink = document.createElement('a');\r\n\r\n    // Preview player\r\n    previewPlayer.className = 'player-preview';\r\n    previewPlayer.id = 'player_container';\r\n\r\n    // Preview screen\r\n    previewScreen.className = 'screen-preview';\r\n    previewScreen.id = 'screen_container';\r\n\r\n    // Ended play\r\n    endPlay.className = 'preview-ended';\r\n    endPlay.id = 'play_ended';\r\n    endPlay.style.display = 'none';\r\n\r\n    // Play again link\r\n    playAgainLink.id = 'play_back_preview';\r\n    playAgainLink.className = 'play-back-preview';\r\n    playAgainLink.style.cssText = 'text-decoration: none; color: #ffffff;';\r\n    playAgainLink.innerHTML = 'Play again?';\r\n    playAgainLink.removeEventListener('click', playAgainClickHandle);\r\n    playAgainLink.addEventListener('click', playAgainClickHandle);\r\n\r\n    if (!_targetContainer) {\r\n        _targetContainer = document.body;\r\n    }\r\n\r\n    if (_targetContainer) {\r\n        if (_targetContainer.querySelector('#player_container') === null) {\r\n            _targetContainer.insertBefore(previewPlayer, _targetContainer.firstChild);\r\n\r\n            if (previewPlayer.querySelector('#screen_container') === null) {\r\n                previewPlayer.appendChild(previewScreen);\r\n            }\r\n\r\n            if (previewPlayer.querySelector('#play_ended') === null) {\r\n                previewPlayer.appendChild(endPlay);\r\n\r\n                if (endPlay.querySelector('a') === null) {\r\n                    endPlay.appendChild(playAgainLink);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getXlf(layoutOptions: OptionsType) {\r\n    let apiHost = window.location.origin;\r\n\r\n    let xlfUrl = apiHost + layoutOptions.xlfUrl;\r\n    let fetchOptions: RequestInit = {};\r\n\r\n    if (layoutOptions.platform === 'CMS') {\r\n        xlfUrl = apiHost + layoutOptions.xlfUrl;\r\n        fetchOptions.mode = 'no-cors';\r\n    } else if (layoutOptions.platform === 'chromeOS') {\r\n        xlfUrl = layoutOptions.xlfUrl;\r\n        fetchOptions.mode = 'cors';\r\n        fetchOptions.headers = {\r\n            'Content-Type': 'text/xml',\r\n        };\r\n    } else if (layoutOptions.platform !== 'CMS' && layoutOptions.appHost !== null) {\r\n        xlfUrl = layoutOptions.appHost + layoutOptions.xlfUrl;\r\n    }\r\n\r\n    const res = await fetch(xlfUrl);\r\n\r\n    return await res.text();\r\n}\r\n\r\nexport function handleAxiosError(error: any, message?: string) {\r\n    console.error(error);\r\n    if (error.response.status == 500) {\r\n        // SOAP responses are always 500's\r\n        // Return the body\r\n        throw new Error(error.response.data);\r\n    } else {\r\n        throw new Error(message || 'Unknown Error');\r\n    }\r\n}\r\n\r\nexport function getLayout(params: GetLayoutParamType): GetLayoutType {\r\n    let _currentLayout = undefined;\r\n    let _nextLayout = undefined;\r\n    let {\r\n        inputLayouts,\r\n        currentLayout,\r\n        nextLayout,\r\n        currentLayoutIndex: currLayoutIndx\r\n    } = params.xlr;\r\n    const hasLayout = inputLayouts.length > 0;\r\n    let currentLayoutIndex = currLayoutIndx;\r\n    let nextLayoutIndex = currentLayoutIndex + 1;\r\n\r\n    if (currentLayout === undefined && nextLayout === undefined) {\r\n        let activeLayout;\r\n        // Preview just got started\r\n        if (hasLayout) {\r\n            let nextLayoutTemp = {...initialLayout};\r\n            activeLayout = inputLayouts[currentLayoutIndex];\r\n            _currentLayout = {...initialLayout, ...activeLayout};\r\n\r\n            if (inputLayouts.length > 1) {\r\n                nextLayoutTemp = {...nextLayoutTemp, ...inputLayouts[nextLayoutIndex]};\r\n                _nextLayout = nextLayoutTemp;\r\n            } else {\r\n                _nextLayout = _currentLayout;\r\n            }\r\n\r\n            _currentLayout.id = activeLayout.layoutId;\r\n\r\n            if (nextLayoutTemp) {\r\n                _nextLayout.id = nextLayoutTemp.layoutId;\r\n            }\r\n        }\r\n    } else {\r\n        if (hasLayout) {\r\n            _currentLayout = nextLayout;\r\n\r\n            currentLayoutIndex = getIndexByLayoutId(inputLayouts, _currentLayout?.layoutId).index as number;\r\n            nextLayoutIndex = currentLayoutIndex + 1;\r\n\r\n            if (inputLayouts.length > 1 && nextLayoutIndex < inputLayouts.length) {\r\n                if (Boolean(params.xlr.layouts[nextLayoutIndex])) {\r\n                    _nextLayout = params.xlr.layouts[nextLayoutIndex];\r\n                } else {\r\n                    _nextLayout = {...initialLayout, ...inputLayouts[nextLayoutIndex]};\r\n                }\r\n            }\r\n\r\n            // If _nextLayout is undefined, then we go back to first layout\r\n            if (_nextLayout === undefined) {\r\n                _nextLayout = params.xlr.layouts[0];\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        currentLayoutIndex,\r\n        inputLayouts: params.xlr.inputLayouts,\r\n        current: _currentLayout,\r\n        next: _nextLayout,\r\n    }\r\n}\r\n\r\nexport interface ILayoutEvents {\r\n    start: (layout: ILayout) => void;\r\n    end: (layout: ILayout) => void;\r\n}\r\n\r\nexport default function Layout(\r\n    data: Document | null,\r\n    options: OptionsType,\r\n    xlr: IXlr,\r\n    layout?: ILayout\r\n) {\r\n    const props = {\r\n        data: data,\r\n        options: options,\r\n        layout: layout || initialLayout,\r\n    }\r\n    const emitter = createNanoEvents<ILayoutEvents>();\r\n\r\n    emitter.on('start', (layout) => {\r\n        layout.done = false;\r\n        console.log('Layout start emitted > Layout ID > ', layout.id);\r\n    });\r\n\r\n    emitter.on('end', (layout) => {\r\n        console.log('Ending layout with ID of > ', layout.layoutId);\r\n        layout.done = true;\r\n        /* Remove layout that has ended */\r\n        const $layout = document.getElementById(layout.containerName);\r\n\r\n        console.log({$layout});\r\n\r\n        if ($layout !== null) {\r\n            $layout.remove();\r\n        }\r\n\r\n        if (xlr.config.platform !== 'CMS') {\r\n            // Transition next layout to current layout and prepare next layout if exist\r\n            xlr.prepareLayouts().then((parent) => {\r\n                xlr.playSchedules(parent);\r\n            });\r\n        }\r\n    });\r\n\r\n    const layoutObject: ILayout = {\r\n        ...props.layout,\r\n        options: props.options,\r\n        emitter,\r\n    };\r\n\r\n    layoutObject.on = function<E extends keyof ILayoutEvents>(event: E, callback: ILayoutEvents[E]) {\r\n        return emitter.on(event, callback);\r\n    };\r\n    layoutObject.run = function() {\r\n        const layout = layoutObject;\r\n        const $layoutContainer = document.getElementById(`${layout.containerName}`);\r\n        const $splashScreen = document.getElementById(`splash_${layout.id}`);\r\n\r\n        if ($layoutContainer) {\r\n            $layoutContainer.style.display = 'block';\r\n        }\r\n\r\n        if ($splashScreen) {\r\n            $splashScreen.style.display = 'none';\r\n        }\r\n\r\n        console.log('Layout running > Layout ID > ', layout.id);\r\n        console.log('Layout Regions > ', layout.regions);\r\n        for (let i = 0; i < layout.regions.length; i++) {\r\n            // playLog(4, \"debug\", \"Running region \" + self.regions[i].id, false);\r\n            layout.regions[i].run();\r\n        }\r\n    };\r\n\r\n    layoutObject.parseXlf = function() {\r\n        const layout = layoutObject;\r\n        const {data, options} = props;\r\n        layout.containerName = \"L\" + layout.id + \"-\" + nextId(options);\r\n        layout.regions = [];\r\n\r\n        /* Create a hidden div to show the layout in */\r\n        let $layout = document.getElementById(layout.containerName);\r\n\r\n        if ($layout === null) {\r\n            $layout = document.createElement('div');\r\n            $layout.id = layout.containerName;\r\n        }\r\n\r\n        let $screen = document.getElementById('screen_container');\r\n        ($screen) && $screen.appendChild($layout);\r\n\r\n        if ($layout) {\r\n            $layout.style.display = 'none';\r\n            $layout.style.outline = 'red solid thin';\r\n        }\r\n\r\n        layout.layoutNode = data;\r\n\r\n        /* Calculate the screen size */\r\n        layout.sw = $screen?.offsetWidth || 0;\r\n        layout.sh = $screen?.offsetHeight || 0;\r\n\r\n        layout.xw = Number(layout.layoutNode?.firstElementChild?.getAttribute('width'));\r\n        layout.xh = Number(layout.layoutNode?.firstElementChild?.getAttribute('height'));\r\n        layout.zIndex = Number(layout.layoutNode?.firstElementChild?.getAttribute('zindex')) || 0;\r\n\r\n        /* Calculate Scale Factor */\r\n        layout.scaleFactor = Math.min((layout.sw / layout.xw), (layout.sh / layout.xh));\r\n        layout.sWidth = Math.round(layout.xw * layout.scaleFactor);\r\n        layout.sHeight = Math.round(layout.xh * layout.scaleFactor);\r\n        layout.offsetX = Math.abs(layout.sw - layout.sWidth) / 2;\r\n        layout.offsetY = Math.abs(layout.sh - layout.sHeight) / 2;\r\n\r\n        /* Scale the Layout Container */\r\n        if ($layout) {\r\n            $layout.style.width = `${layout.sWidth}px`;\r\n            $layout.style.height = `${layout.sHeight}px`;\r\n            $layout.style.position = 'absolute';\r\n            $layout.style.left = `${layout.offsetX}px`;\r\n            $layout.style.top = `${layout.offsetY}px`;\r\n        }\r\n\r\n        if ($layout && layout.zIndex !== null) {\r\n            $layout.style.zIndex = `${layout.zIndex}`;\r\n        }\r\n\r\n        /* Set the layout background */\r\n        layout.bgColor = layout.layoutNode?.firstElementChild?.getAttribute('bgcolor') || '';\r\n        layout.bgImage = layout.layoutNode?.firstElementChild?.getAttribute('background') || '';\r\n\r\n        if (!(layout.bgImage === \"\" || typeof layout.bgImage === 'undefined')) {\r\n            /* Extract the image ID from the filename */\r\n            layout.bgId = layout.bgImage.substring(0, layout.bgImage.indexOf('.'));\r\n\r\n            const bgImageUrl = composeBgUrlByPlatform(\r\n                xlr.config.platform,\r\n                {\r\n                    ...options,\r\n                    layout,\r\n                }\r\n            );\r\n\r\n            if ($layout) {\r\n                $layout.style.backgroundImage = `url(\"${bgImageUrl}\")`;\r\n                $layout.style.backgroundRepeat = 'no-repeat';\r\n                $layout.style.backgroundSize = `${layout.sWidth}px ${layout.sHeight}px`;\r\n                $layout.style.backgroundPosition = '0px 0px';\r\n            }\r\n        }\r\n\r\n        // Set the background color\r\n        if ($layout && layout.bgColor) {\r\n            $layout.style.backgroundColor = `${layout.bgColor}`;\r\n        }\r\n\r\n        // Hide if layout is not the currentLayout\r\n        if ($layout && xlr.currentLayoutId !== undefined && xlr.currentLayoutId !== layout.id) {\r\n            $layout.style.display = 'none';\r\n        }\r\n\r\n        // Create regions\r\n        const layoutRegions = Array.from(layout?.layoutNode?.getElementsByTagName('region') || []);\r\n\r\n        Array.from(layoutRegions).forEach((regionXml, indx) => {\r\n            const regionObj = Region(\r\n                layout,\r\n                regionXml,\r\n                regionXml?.getAttribute('id') || '',\r\n                options,\r\n                xlr,\r\n            );\r\n\r\n            regionObj.index = indx;\r\n            layout.regions.push(regionObj);\r\n        });\r\n    };\r\n\r\n    layoutObject.prepareLayout = function() {\r\n        layoutObject.parseXlf();\r\n    };\r\n\r\n    layoutObject.regionExpired = function() {\r\n        const self = layoutObject;\r\n        self.allExpired = true;\r\n\r\n        for (let layoutRegion of self.regions) {\r\n            if (!layoutRegion.complete) {\r\n                self.allExpired = false;\r\n            }\r\n        }\r\n\r\n        if (self.allExpired) {\r\n            self.end();\r\n        }\r\n    };\r\n\r\n    layoutObject.regionEnded = function() {\r\n        const self = layoutObject;\r\n        self.allEnded = true;\r\n        \r\n        for (var i = 0; i < self.regions.length; i++) {\r\n            if (! self.regions[i].ended) {\r\n                self.allEnded = false;\r\n            }\r\n        }\r\n        \r\n        if (self.allEnded) {\r\n            self.stopAllMedia().then(() => {\r\n                console.log('starting to end layout . . .');\r\n                if (xlr.config.platform === 'CMS') {\r\n                    const $end = document.getElementById('play_ended');\r\n                    const $preview = document.getElementById('screen_container');\r\n        \r\n                    if ($preview) {\r\n                        while($preview.firstChild) {\r\n                            $preview.removeChild($preview.firstChild);\r\n                        }\r\n        \r\n                        $preview.style.display = 'none';\r\n                    }\r\n        \r\n                    if ($end) {\r\n                        $end.style.display = 'block';\r\n                    }\r\n                }\r\n                \r\n                self.emitter?.emit('end', self);\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    layoutObject.end = function() {\r\n        console.log('Executing Layout::end and Calling Region::end ', layoutObject);\r\n\r\n        /* Ask the layout to gracefully stop running now */\r\n        for (let layoutRegion of layoutObject.regions) {\r\n            layoutRegion.end();\r\n        }\r\n    };\r\n\r\n    layoutObject.stopAllMedia = function() {\r\n        console.log('Stopping all media . . .');\r\n        return new Promise(async (resolve) => {\r\n            for(var i = 0;i < layoutObject.regions.length;i++) {\r\n                var region = layoutObject.regions[i];\r\n                for(var j = 0;j < region.mediaObjects.length;j++) {\r\n                    var media = region.mediaObjects[j];\r\n                    await media.stop();\r\n                }\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    };\r\n\r\n    layoutObject.prepareLayout();\r\n\r\n    return layoutObject;\r\n}\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { createNanoEvents } from \"nanoevents\";\r\nimport { ILayout, OptionsType } from '../../Types/Layout';\r\nimport { initialRegion, IRegion, IRegionEvents } from '../../Types/Region';\r\nimport { IMedia } from '../../Types/Media';\r\nimport { getMediaId, nextId } from '../Generators';\r\nimport { platform } from '../Platform';\r\nimport { Media } from '../Media';\r\nimport {\r\n    TransitionElementOptions,\r\n    TransitionNameType,\r\n    compassPoints,\r\n    flyTransitionKeyframes,\r\n    transitionElement,\r\n} from '../Transitions';\r\nimport {IXlr} from \"../../Types/XLR\";\r\n\r\nexport default function Region(\r\n    layout: ILayout,\r\n    xml: Element,\r\n    regionId: string,\r\n    options: OptionsType,\r\n    xlr: IXlr,\r\n) {\r\n    const props = {\r\n        layout: layout,\r\n        xml: xml,\r\n        regionId: regionId,\r\n        options: options,\r\n    }\r\n    const emitter = createNanoEvents<IRegionEvents>();\r\n    let regionObject: IRegion = {\r\n        ...initialRegion,\r\n        ...props,\r\n    };\r\n\r\n    regionObject.prepareRegion = function() {\r\n        const self = regionObject;\r\n        const {layout, options} = self;\r\n        self.id = props.regionId;\r\n        self.options = {...platform, ...props.options};\r\n        self.containerName = `R-${self.id}-${nextId(self.options as OptionsType & IRegion[\"options\"])}`;\r\n        self.xml = props.xml;\r\n        self.mediaObjects = [];\r\n\r\n        self.sWidth = (self.xml) && Number(self.xml?.getAttribute('width')) * layout.scaleFactor;\r\n        self.sHeight = (self.xml) && Number(self.xml?.getAttribute('height')) * layout.scaleFactor;\r\n        self.offsetX = (self.xml) && Number(self.xml?.getAttribute('left')) * layout.scaleFactor;\r\n        self.offsetY = (self.xml) && Number(self.xml?.getAttribute('top')) * layout.scaleFactor;\r\n        self.zIndex = (self.xml) && Number(self.xml?.getAttribute('zindex'));\r\n        \r\n        const regionOptions = self.xml?.getElementsByTagName('options');\r\n\r\n        if (regionOptions) {\r\n            for (let _options of Array.from(regionOptions)) {\r\n                // Get options\r\n                const _regionOptions = _options.children;\r\n                for (let regionOption of Array.from(_regionOptions)) {\r\n                    self.options[regionOption.nodeName.toLowerCase()] = regionOption.textContent;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let $region = document.getElementById(self.containerName);\r\n        const $layout = document.getElementById(`${self.layout.containerName}`);\r\n\r\n        if ($region === null) {\r\n            $region = document.createElement('div');\r\n            $region.id = self.containerName;\r\n        }\r\n\r\n        ($layout) && $layout.appendChild($region);\r\n\r\n        /* Scale the Layout Container */\r\n        /* Add region styles */\r\n        $region.style.cssText = `\r\n            width: ${self.sWidth}px;\r\n            height: ${self.sHeight}px;\r\n            position: absolute;\r\n            left: ${self.offsetX}px;\r\n            top: ${self.offsetY}px;\r\n            z-index: ${Math.round(self.zIndex)};\r\n        `;\r\n        $region.className = 'region--item';\r\n\r\n        /* Parse region media objects */\r\n        const regionMediaItems = Array.from(self.xml.getElementsByTagName('media'));\r\n        self.totalMediaObjects = regionMediaItems.length;\r\n\r\n        Array.from(regionMediaItems).forEach((mediaXml, indx) => {\r\n            const mediaObj = Media(\r\n                self,\r\n                mediaXml?.getAttribute('id') || '',\r\n                mediaXml,\r\n                options as OptionsType & IRegion[\"options\"],\r\n                xlr,\r\n            );\r\n\r\n            mediaObj.index = indx;\r\n            self.mediaObjects.push(mediaObj);\r\n        });\r\n\r\n        self.prepareMediaObjects();\r\n    };\r\n\r\n    regionObject.finished = function() {\r\n        const self = regionObject;\r\n        console.log('Region::finished called . . . ', self.id);\r\n        // Mark as complete\r\n        self.complete = true;\r\n        self.layout.regions[regionObject.index] = regionObject;\r\n        self.layout.regionExpired();\r\n    };\r\n\r\n    regionObject.prepareMediaObjects = function() {\r\n        const self = regionObject;\r\n        let nextMediaIndex;\r\n\r\n        if (self.mediaObjects.length > 0) {\r\n\r\n            if (self.curMedia) {\r\n                self.oldMedia = self.curMedia;\r\n            } else {\r\n                self.oldMedia = undefined;\r\n            }\r\n\r\n            if (self.currentMediaIndex >= self.mediaObjects.length) {\r\n                self.currentMediaIndex = 0;\r\n            }\r\n\r\n            self.curMedia = self.mediaObjects[self.currentMediaIndex];\r\n\r\n            nextMediaIndex = self.currentMediaIndex + 1;\r\n\r\n            if (nextMediaIndex >= self.mediaObjects.length ||\r\n                (\r\n                    !Boolean(self.mediaObjects[nextMediaIndex]) &&\r\n                    self.mediaObjects.length === 1\r\n                )\r\n            ) {\r\n                nextMediaIndex = 0;\r\n            }\r\n\r\n            if (Boolean(self.mediaObjects[nextMediaIndex])) {\r\n                self.nxtMedia = self.mediaObjects[nextMediaIndex];\r\n            }\r\n\r\n            const $region = document.getElementById(`${self.containerName}`);\r\n            // Append available media to region DOM\r\n            if (self.curMedia) {\r\n                ($region) && $region.insertBefore(self.curMedia.html as Node, $region.lastElementChild);\r\n            }\r\n\r\n            if (self.nxtMedia) {\r\n                ($region) && $region.insertBefore(self.nxtMedia.html as Node, $region.lastElementChild);\r\n            }\r\n        }\r\n    };\r\n\r\n    regionObject.run = function() {\r\n        console.log('Called Region::run > ', regionObject.id);\r\n\r\n        if (regionObject.curMedia) {\r\n            regionObject.transitionNodes(regionObject.oldMedia, regionObject.curMedia);\r\n        }\r\n    };\r\n\r\n    regionObject.transitionNodes = function(oldMedia: IMedia | undefined, newMedia: IMedia | undefined) {\r\n        const self = regionObject;\r\n        let transOutDuration = 1;\r\n        let transOutDirection: compassPoints = 'E';\r\n\r\n        if (newMedia) {\r\n            if (oldMedia && Boolean(oldMedia.options['transoutduration'])) {\r\n                transOutDuration = Number(oldMedia.options.transoutduration);\r\n            }\r\n\r\n            if (oldMedia && Boolean(oldMedia.options['transoutdirection'])) {\r\n                transOutDirection = oldMedia.options.transoutdirection;\r\n            }\r\n    \r\n            let defaultTransOutOptions: TransitionElementOptions = {duration: transOutDuration};\r\n            let transOut = transitionElement('defaultOut', {duration: defaultTransOutOptions.duration});\r\n    \r\n            let transOutName: TransitionNameType | string;\r\n            if (oldMedia && Boolean(oldMedia.options['transout'])) {\r\n                transOutName = oldMedia.options['transout'];\r\n    \r\n                if (transOutName === 'fly') {\r\n                    transOutName = `${transOutName}Out`;\r\n                    defaultTransOutOptions.keyframes = flyTransitionKeyframes({\r\n                        trans: 'out',\r\n                        direction: transOutDirection,\r\n                        height: oldMedia.divHeight,\r\n                        width: oldMedia.divWidth,\r\n                    });\r\n                }\r\n                \r\n                transOut = transitionElement(transOutName as TransitionNameType, defaultTransOutOptions);\r\n            }\r\n            \r\n            const hideOldMedia = new Promise((resolve) => {\r\n                // Hide oldMedia\r\n                if (oldMedia) {\r\n                    const $oldMedia = document.getElementById(getMediaId(oldMedia));\r\n                    if ($oldMedia) {\r\n                        const removeOldMedia = () => {\r\n                            $oldMedia.style.setProperty('display', 'none');\r\n                            $oldMedia.remove();\r\n                        };\r\n\r\n                        let oldMediaAnimate: any;\r\n                        if (Boolean(oldMedia.options['transout'])) {\r\n                            oldMediaAnimate = $oldMedia.animate(transOut.keyframes, transOut.timing);\r\n                        }\r\n\r\n                        if (Boolean(oldMedia.options['transout']) && self.totalMediaObjects > 1) {\r\n                            if (transOutName === 'flyOut') {\r\n                                // Reset last item to original position and state\r\n                                oldMediaAnimate ? oldMediaAnimate.finished\r\n                                    .then(() => {\r\n                                        resolve(true);\r\n                                        oldMediaAnimate?.effect?.updateTiming({fill: 'none'});\r\n                                        removeOldMedia();\r\n                                    }) : undefined;\r\n                            } else {\r\n                                setTimeout(removeOldMedia, transOutDuration / 2);\r\n                                resolve(true);\r\n                            }\r\n                        } else {\r\n                            removeOldMedia();\r\n                            // Resolve this right away\r\n                            // As a result, the transition between two media object\r\n                            // seems like a cross-over\r\n                            resolve(true);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    \r\n            if (oldMedia) {\r\n                hideOldMedia.then((isDone) => {\r\n                    if (isDone) {\r\n                        newMedia.run();\r\n                    }\r\n                });\r\n            } else {\r\n                newMedia.run();\r\n            }\r\n        }\r\n    };\r\n\r\n    regionObject.playNextMedia = function() {\r\n        const self = regionObject;\r\n\r\n        /* The current media has finished running */\r\n        if (self.ended) {\r\n            return;\r\n        }\r\n\r\n        if (self.currentMediaIndex === self.mediaObjects.length - 1) {\r\n            self.finished();\r\n\r\n            if (self.layout.allEnded) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // When the region has completed and when currentMedia is html\r\n        // Then, preserve the currentMedia state\r\n        if (self.complete &&\r\n            self.curMedia?.render === 'html'\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        // When the region has completed and mediaObjects.length = 1\r\n        // and curMedia.loop = false, then put the media on\r\n        // its current state\r\n        if (self.complete && self.mediaObjects.length === 1 &&\r\n            self.curMedia?.render !== 'html' &&\r\n            self.curMedia?.mediaType === 'image' &&\r\n            !self.curMedia?.loop\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        self.currentMediaIndex = self.currentMediaIndex + 1;\r\n        self.prepareMediaObjects();\r\n\r\n        self.transitionNodes(self.oldMedia, self.curMedia);\r\n    };\r\n    \r\n    regionObject.end = function() {\r\n        const self = regionObject;\r\n        self.ending = true;\r\n        /* The Layout has finished running */\r\n        /* Do any region exit transition then clean up */\r\n        self.layout.regions[self.index] = self;\r\n\r\n        console.log('Calling Region::end ', self);\r\n        self.exitTransition();\r\n    };\r\n\r\n    regionObject.exitTransition = function() {\r\n        const self = regionObject;\r\n        /* TODO: Actually implement region exit transitions */\r\n        const $region = document.getElementById(`${self.containerName}`);\r\n\r\n        if ($region) {\r\n            $region.style.display = 'none';\r\n        }\r\n\r\n        console.log('Called Region::exitTransition ', self.id);\r\n\r\n        self.exitTransitionComplete();\r\n    };\r\n\r\n    regionObject.exitTransitionComplete = function() {\r\n        const self = regionObject;\r\n        console.log('Called Region::exitTransitionComplete ', self.id);\r\n        self.ended = true;\r\n        self.layout.regions[self.index] = self;\r\n        self.layout.regionEnded();\r\n    };\r\n\r\n    regionObject.on = function<E extends keyof IRegionEvents>(event: E, callback: IRegionEvents[E]) {\r\n        return emitter.on(event, callback);\r\n    };\r\n\r\n    regionObject.emitter = emitter;\r\n\r\n    regionObject.prepareRegion();\r\n\r\n    return regionObject;\r\n}","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {ILayout, InputLayoutType, OptionsType} from \"../Layout/Layout.types\";\r\nimport {platform} from \"../../Modules/Platform/Platform\";\r\n\r\nexport type PrepareLayoutsType = {\r\n    moveNext?: boolean;\r\n};\r\n\r\nexport enum ELayoutType {\r\n    CURRENT,\r\n    NEXT,\r\n}\r\n\r\nexport interface IXlr {\r\n    inputLayouts: InputLayoutType[],\r\n    config: OptionsType,\r\n    layouts: ILayout[],\r\n    currentLayoutIndex: number;\r\n    currentLayoutId: number | null;\r\n    currentLayout: ILayout | undefined;\r\n    nextLayout: ILayout | undefined;\r\n    bootstrap(): void;\r\n    init(): Promise<IXlr>;\r\n    playSchedules(xlr: IXlr): void;\r\n    prepareLayoutXlf(inputLayout: ILayout | undefined): Promise<ILayout>;\r\n    prepareLayouts(): Promise<IXlr>;\r\n}\r\n\r\nexport const initialXlr: IXlr = {\r\n    inputLayouts: [],\r\n    config: platform,\r\n    layouts: [],\r\n    currentLayoutIndex: 0,\r\n    currentLayoutId: null,\r\n    currentLayout: undefined,\r\n    nextLayout: undefined,\r\n    bootstrap() {\r\n    },\r\n    init() {\r\n        return Promise.resolve(<IXlr>{});\r\n    },\r\n    playSchedules() {\r\n    },\r\n    prepareLayoutXlf(inputLayout: ILayout | undefined): Promise<ILayout> {\r\n        return Promise.resolve(<ILayout>{});\r\n    },\r\n    prepareLayouts(): Promise<IXlr> {\r\n        return Promise.resolve(<IXlr>{});\r\n    }\r\n};\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {\r\n    Layout, getLayout, getXlf, initRenderingDOM\r\n} from \"./Modules/Layout\";\r\nimport { platform } from './Modules/Platform';\r\nimport {\r\n    ILayout, initialLayout, InputLayoutType, OptionsType,\r\n} from \"./Types/Layout\";\r\nimport { ELayoutType, initialXlr, IXlr } from './Types/XLR';\r\n\r\nexport default function XiboLayoutRenderer(\r\n    inputLayouts: InputLayoutType[],\r\n    options?: OptionsType,\r\n) {\r\n    const props = {\r\n        inputLayouts,\r\n        options,\r\n    }\r\n\r\n    const xlrObject: IXlr = {\r\n        ...initialXlr,\r\n        bootstrap() {\r\n            // Place to set configurations and initialize required props\r\n            const self = this;\r\n            self.inputLayouts = !Array.isArray(props.inputLayouts) ?\r\n                [props.inputLayouts] : props.inputLayouts;\r\n            self.config = JSON.parse(JSON.stringify({...platform, ...props.options}));\r\n        },\r\n        init() {\r\n            return new Promise<IXlr>((resolve) => {\r\n                const self = this;\r\n\r\n                // Prepare rendering DOM\r\n                const previewCanvas = document.querySelector('.preview-canvas');\r\n\r\n                initRenderingDOM(previewCanvas);\r\n\r\n                self.prepareLayouts().then((xlr) => {\r\n                    resolve(xlr);\r\n                });\r\n            });\r\n        },\r\n\r\n        playSchedules(xlr: IXlr) {\r\n            // Check if there's a current layout\r\n            if (xlr.currentLayout !== undefined) {\r\n                xlr.currentLayout.emitter?.emit('start', xlr.currentLayout);\r\n                xlr.currentLayout.run();\r\n            }\r\n        },\r\n\r\n        async prepareLayoutXlf(inputLayout: ILayout) {\r\n            const self = this;\r\n            // Compose layout props first\r\n            let newOptions: OptionsType = Object.assign({}, platform);\r\n\r\n            newOptions = {\r\n                ...newOptions,\r\n                ...props.options,\r\n            };\r\n\r\n            if (self.config.platform ==='CMS' &&\r\n                inputLayout && Boolean(inputLayout.layoutId)\r\n            ) {\r\n                newOptions.xlfUrl =\r\n                    newOptions.xlfUrl.replace(':layoutId', String(inputLayout.layoutId));\r\n            } else if (self.config.platform === 'chromeOS') {\r\n                newOptions.xlfUrl = inputLayout.path as string;\r\n            }\r\n\r\n            let layoutXlf: string;\r\n            let layoutXlfNode: Document | null;\r\n            if (inputLayout && inputLayout.layoutNode === null) {\r\n                layoutXlf = await getXlf(newOptions);\r\n\r\n                const parser = new window.DOMParser();\r\n                layoutXlfNode = parser.parseFromString(layoutXlf as string, 'text/xml');\r\n            } else {\r\n                layoutXlfNode = inputLayout && inputLayout.layoutNode;\r\n            }\r\n\r\n            return new Promise<ILayout>((resolve) => {\r\n                const xlrLayoutObj = initialLayout;\r\n                \r\n                xlrLayoutObj.id = Number(inputLayout.layoutId);\r\n                xlrLayoutObj.layoutId = Number(inputLayout.layoutId);\r\n                xlrLayoutObj.options = newOptions;\r\n\r\n                resolve(Layout(layoutXlfNode, newOptions, self, xlrLayoutObj));\r\n            });\r\n        },\r\n\r\n        async prepareLayouts() {\r\n            const self = this;\r\n            // Get layouts\r\n            const xlrLayouts = getLayout({xlr: self});\r\n\r\n            self.currentLayoutId = xlrLayouts.current?.layoutId as ILayout['layoutId'];\r\n\r\n            const layoutsXlf = () => {\r\n                let xlf = [];\r\n\r\n                xlf.push(xlrLayouts.current);\r\n\r\n                if (xlrLayouts.current?.layoutId !== xlrLayouts.next?.layoutId) {\r\n                    xlf.push(xlrLayouts.next);\r\n                }\r\n\r\n                return xlf.reduce((coll: Promise<ILayout>[], item) => {\r\n                    return [\r\n                        ...coll,\r\n                        self.prepareLayoutXlf(item),\r\n                    ];\r\n                }, []);\r\n            };\r\n            const layouts = await Promise.all<Array<Promise<ILayout>>>(layoutsXlf());\r\n\r\n            return new Promise<IXlr>((resolve) => {\r\n                self.layouts = layouts;\r\n                self.currentLayout = self.layouts[0];\r\n\r\n                if (Boolean(self.layouts[1])) {\r\n                    self.nextLayout = self.layouts[1];\r\n                } else {\r\n                    // Use current layout as next layout if only one layout is available\r\n                    self.nextLayout = self.layouts[0];\r\n                }\r\n\r\n                self.currentLayoutIndex = xlrLayouts.currentLayoutIndex;\r\n                self.layouts[self.currentLayoutIndex] = self.currentLayout;\r\n\r\n                resolve(self);\r\n            });\r\n        },\r\n    }\r\n\r\n    xlrObject.bootstrap();\r\n\r\n    return xlrObject;\r\n}\r\n"],"names":["createNanoEvents","e","emit","event","_len","arguments","length","args","Array","_key","i","callbacks","this","events","on","cb","push","_this$events$e","filter","platform","getResourceUrl","xlfUrl","layoutBackgroundDownloadUrl","layoutPreviewUrl","libraryDownloadUrl","loaderUrl","idCounter","inPreview","appHost","initialLayout","id","layoutId","sw","sh","xw","xh","zIndex","scaleFactor","sWidth","sHeight","offsetX","offsetY","bgColor","bgImage","bgId","containerName","layoutNode","regionMaxZIndex","ready","regionObjects","drawer","allExpired","regions","actions","options","done","allEnded","path","prepareLayout","parseXlf","run","callback","regionExpired","end","regionEnded","stopAllMedia","Promise","resolve","nextId","getMediaId","_ref","mediaType","mediaId","capitalizeStr","inputStr","String","charAt","toUpperCase","substring","async","preloadMediaBlob","src","type","o","n","_t16","_regeneratorRuntime","wrap","_callee10$","_context10","prev","next","fetch","mode","res","blob","Blob","arrayBuffer","data","audioFileType","getFileExt","abrupt","console","log","URL","createObjectURL","stop","_callee10","_r","apply","filename","filenameArr","split","str","validAudioTypes","mp3","wav","ogg","Boolean","initialRegion","layout","regionId","xml","mediaObjects","mediaObjectsActions","currentMedia","complete","ending","ended","oneMedia","oldMedia","undefined","curMedia","nxtMedia","currentMediaIndex","totalMediaObjects","index","prepareRegion","playNextMedia","transitionNodes","finished","exitTransition","exitTransitionComplete","prepareMediaObjects","initialMedia","region","html","iframe","iframeName","render","attachedAudio","singlePlay","timeoutId","setTimeout","checkIframeStatus","loadIframeOnRun","tempSrc","schemaVersion","duration","useDuration","fileId","uri","divWidth","divHeight","url","loop","init","defaultTrans","c","trans","keyframes","display","timing","fadeOutElem","opacity","fill","flyInElem","m","keyframeOptions","direction","flyInKeyframes","flyInTiming","from","_objectSpread","to","flyOutElem","y","flyOutKeyframes","flyOutTiming","transitionElement","transition","fadeIn","fadeOut","flyIn","flyOut","defaultIn","defaultOut","flyTransitionKeyframes","params","opacityAttr","source","top","height","concat","left","width","Media","xlr","props","mediaTimer","mediaTimeCount","emitter","mediaObject","startMediaTimer","media","setInterval","_e$emitter","$videoMedia","document","getElementById","onloadstart","onloadeddata","readyState","oncanplay","videoPlayPromise","play","then","error","muted","onplaying","ondurationchange","onended","VideoMedia","$audioMedia","$playBtn","remove","audioPlayPromise","catch","name","createElement","classList","add","textContent","addEventListener","parentNode","insertBefore","nextSibling","AudioMedia","clearInterval","_e$xml","_e$xml2","_e$xml3","_e$xml4","_e$xml5","self","getAttribute","parseInt","$mediaIframe","mediaOptions","getElementsByTagName","_i2","_Array$from","_options","_mediaOptions","children","_i3","_Array$from2","mediaOption","nodeName","toLowerCase","showfullscreen","scrolling","style","cssText","$mediaId","$media","Audio","className","resourceUrlParams","config","regionOptions","tmpUrl","resourceUrl","replace","cmsUrl","composeResourceUrlByPlatform","scaletype","align","valign","preload","mute","objectFit","playsInline","autoplay","durationisperitem","regex","RegExp","_asyncToGenerator","mark","_callee2","_callee2$","_context2","_callee$","_context","json","err","_callee","fetchJSON","exec","transin","transinduration","transInDuration","Number","fadeInTrans","animate","transInDirection","transindirection","defaultTransInOptions","transIn","transInName","getNewMedia","$region","t","lastElementChild","isCMS","_context4","t0","setProperty","rej","reader","FileReader","onloadend","result","onerror","readAsDataURL","_context3","_callee3","getDataBlob","t4","t3","t5","t2","call","t1","innerHTML","appendChild","iframeStyles","_e$emitter4","_callee4","_context5","_callee5","playAgainClickHandle","ev","preventDefault","history","go","getLayout","_currentLayout","_nextLayout","inputLayouts","currentLayout","nextLayout","currentLayoutIndex","currLayoutIndx","hasLayout","nextLayoutIndex","activeLayout","nextLayoutTemp","layoutsInput","layoutIndexes","reduce","a","b","indx","getIndexByLayoutId","layouts","current","Layout","$layout","prepareLayouts","parent","playSchedules","layoutObject","$layoutContainer","$splashScreen","_o$layoutNode","_o$layoutNode2","_o$layoutNode3","_o$layoutNode4","_o$layoutNode5","_o$layoutNode6","$screen","outline","offsetWidth","offsetHeight","firstElementChild","Math","min","round","abs","position","indexOf","bgImageUrl","composeBgUrlByPlatform","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","backgroundColor","currentLayoutId","layoutRegions","forEach","regionXml","regionObj","regionObject","_e$xml6","_e$xml7","_e$xml8","_e$xml9","_e$xml10","_e$xml11","_i4","_Array$from3","_regionOptions","_i5","_Array$from4","regionOption","l","regionMediaItems","mediaXml","mediaObj","nextMediaIndex","newMedia","transOutDuration","transOutDirection","transoutduration","transoutdirection","transOutName","defaultTransOutOptions","transOut","transout","hideOldMedia","$oldMedia","removeOldMedia","oldMediaAnimate","_l3","effect","updateTiming","isDone","_e$curMedia","_e$curMedia2","_e$curMedia3","_e$curMedia4","Region","_iterator","_createForOfIteratorHelper","layoutRegion","s","_step","_e$emitter5","$end","$preview","firstChild","removeChild","_iterator2","_step2","f","j","_context6","_callee6","_x5","_ref7","ELayoutType","CURRENT","NEXT","initialXlr","bootstrap","prepareLayoutXlf","inputLayout","xlrObject","isArray","JSON","parse","stringify","targetContainer","_targetContainer","previewPlayer","previewScreen","endPlay","playAgainLink","removeEventListener","body","querySelector","initRenderingDOM","newOptions","Object","assign","layoutOptions","apiHost","window","location","origin","_context7","text","sent","_callee7","getXlf","layoutXlf","parser","DOMParser","layoutXlfNode","parseFromString","_context8","xlrLayoutObj","_callee8","xlrLayouts","_context9","all","_t$current2","_t$next","xlf","coll","item","layoutsXlf","_callee9"],"mappings":"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","x_google_ignoreList":[0]}