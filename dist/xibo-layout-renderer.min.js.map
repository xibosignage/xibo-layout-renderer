{"version":3,"file":"xibo-layout-renderer.min.js","sources":["../node_modules/nanoevents/index.js","../../src/Modules/Platform/Platform.ts","../../src/Types/Layout/Layout.types.ts","../../src/Modules/Generators/Generators.ts","../../src/Types/Region/Region.types.ts","../../src/Types/Media/Media.types.ts","../../src/Modules/Transitions/Transitions.ts","../../src/Modules/Media/Media.ts","../../src/Modules/Media/VideoMedia.ts","../../src/Modules/Media/AudioMedia.ts","../../src/Modules/Layout/Layout.ts","../../src/Modules/Region/Region.ts","../../src/Types/XLR/XLR.types.ts","../../src/xibo-layout-renderer.ts"],"sourcesContent":["export let createNanoEvents = () => ({\n  emit(event, ...args) {\n    for (\n      let i = 0,\n        callbacks = this.events[event] || [],\n        length = callbacks.length;\n      i < length;\n      i++\n    ) {\n      callbacks[i](...args)\n    }\n  },\n  events: {},\n  on(event, cb) {\n    ;(this.events[event] ||= []).push(cb)\n    return () => {\n      this.events[event] = this.events[event]?.filter(i => cb !== i)\n    }\n  }\n})\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {OptionsType} from \"../../Types/Layout\";\r\n\r\nconst RESOURCE_URL = '/playlist/widget/resource/:regionId/:id';\r\nconst XLF_URL = '/layout/xlf/:layoutId';\r\nconst LAYOUT_BACKGROUND_DOWNLOAD_URL = '/layout/background/:id';\r\nconst LAYOUT_PREVIEW_URL = '/layout/preview/[layoutCode]';\r\nconst LIBRARY_DOWNLOAD_URL = '/library/download/:id';\r\nconst LOADER_URL = '/theme/default/img/loader.gif';\r\n\r\nexport const platform: OptionsType = {\r\n    getResourceUrl: RESOURCE_URL,\r\n    xlfUrl: XLF_URL,\r\n    layoutBackgroundDownloadUrl: LAYOUT_BACKGROUND_DOWNLOAD_URL,\r\n    layoutPreviewUrl: LAYOUT_PREVIEW_URL,\r\n    libraryDownloadUrl: LIBRARY_DOWNLOAD_URL,\r\n    loaderUrl: LOADER_URL,\r\n    idCounter: 0,\r\n    inPreview: true,\r\n    appHost: null,\r\n    platform: 'CMS',\r\n};\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {DefaultEvents, Emitter, Unsubscribe} from \"nanoevents\";\r\nimport {IRegion} from \"../Region\";\r\nimport {platform} from \"../../Modules/Platform\";\r\nimport {ILayoutEvents} from \"../../Modules/Layout\";\r\nimport {IXlr} from \"../XLR\";\r\n\r\nexport type InputLayoutType = {\r\n    layoutId: number | null;\r\n    path?: string;\r\n};\r\n\r\nexport type OptionsType = {\r\n    xlfUrl: string;\r\n    getResourceUrl: string;\r\n    layoutBackgroundDownloadUrl: string;\r\n    layoutPreviewUrl: string;\r\n    libraryDownloadUrl: string;\r\n    loaderUrl: string;\r\n    idCounter: number;\r\n    inPreview: boolean;\r\n    appHost?: string | null;\r\n    platform: 'CMS' | 'chromeOS';\r\n    config?: {\r\n        cmsUrl: string | null;\r\n        schemaVersion: number;\r\n        cmsKey: string | null;\r\n        hardwareKey: string | null;\r\n    };\r\n};\r\n\r\nexport interface ILayout {\r\n    id: number | null;\r\n    layoutId: number | null;\r\n    sw: number | null;\r\n    sh: number | null;\r\n    xw: number | null;\r\n    xh: number | null;\r\n    zIndex: number | null;\r\n    scaleFactor: number;\r\n    sWidth: number;\r\n    sHeight: number;\r\n    offsetX: number;\r\n    offsetY: number;\r\n    bgColor: string;\r\n    bgImage: string;\r\n    bgId: string;\r\n    containerName: string;\r\n    layoutNode: Document | null;\r\n    regionMaxZIndex: number;\r\n    ready: boolean;\r\n    regionObjects: IRegion[];\r\n    drawer: String[];\r\n    allExpired: boolean;\r\n    regions: IRegion[];\r\n    actions: String[];\r\n    options: OptionsType;\r\n    done: boolean;\r\n    allEnded: boolean;\r\n    path?: string;\r\n    prepareLayout(): void;\r\n    parseXlf(): void;\r\n    run(): void;\r\n    emitter?: Emitter<DefaultEvents>;\r\n    on<E extends keyof ILayoutEvents>(event: E, callback: ILayoutEvents[E]): Unsubscribe;\r\n    regionExpired(): void;\r\n    end(): void;\r\n    regionEnded(): void;\r\n    stopAllMedia(): Promise<void>;\r\n}\r\n\r\nexport const initialLayout: ILayout = {\r\n    id: null,\r\n    layoutId: null,\r\n    sw: 0,\r\n    sh: 0,\r\n    xw: 0,\r\n    xh: 0,\r\n    zIndex: 0,\r\n    scaleFactor: 1,\r\n    sWidth: 0,\r\n    sHeight: 0,\r\n    offsetX: 0,\r\n    offsetY: 0,\r\n    bgColor: '',\r\n    bgImage: '',\r\n    bgId: '',\r\n    containerName: '',\r\n    layoutNode: null,\r\n    regionMaxZIndex: 0,\r\n    ready: false,\r\n    regionObjects: [],\r\n    drawer: [],\r\n    allExpired: false,\r\n    regions: [],\r\n    actions: [],\r\n    options: platform,\r\n    done: false,\r\n    allEnded: false,\r\n    path: '',\r\n    prepareLayout() {\r\n    },\r\n    parseXlf() {\r\n    },\r\n    run() {\r\n    },\r\n    on<E extends keyof ILayoutEvents>(event: E, callback: ILayoutEvents[E]): Unsubscribe {\r\n        return <Unsubscribe>{};\r\n    },\r\n    regionExpired() {\r\n    },\r\n    end() {\r\n    },\r\n    regionEnded() {\r\n    },\r\n    stopAllMedia() {\r\n        return Promise.resolve();\r\n    },\r\n};\r\n\r\nexport type GetLayoutParamType = {\r\n    xlr: IXlr;\r\n    moveNext?: boolean;\r\n}\r\n\r\nexport type GetLayoutType = {\r\n    currentLayoutIndex: number;\r\n    inputLayouts: InputLayoutType[];\r\n    current: ILayout | undefined;\r\n    next: ILayout | undefined;\r\n}\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { IMedia } from '../../Types/Media';\r\nimport {InputLayoutType, OptionsType} from \"../../Types/Layout\";\r\n\r\nexport function nextId(options: { idCounter: number; }) {\r\n    if (options.idCounter > 500) {\r\n        options.idCounter = 0;\r\n    }\r\n\r\n    options.idCounter = options.idCounter + 1;\r\n    return options.idCounter;\r\n}\r\n\r\nexport const getMediaId = ({mediaType, containerName}: IMedia) => {\r\n    let mediaId = containerName;\r\n\r\n    if (mediaType === 'video') {\r\n        mediaId = mediaId + '-vid';\r\n    } else if (mediaType === 'audio') {\r\n        mediaId = mediaId + '-aud';\r\n    }\r\n\r\n    return mediaId;\r\n};\r\n\r\nexport const capitalizeStr = (inputStr: string) => {\r\n    if (inputStr === null) {\r\n        return '';\r\n    }\r\n\r\n    return String(inputStr).charAt(0).toUpperCase() + String(inputStr).substring(1);\r\n};\r\n\r\nexport async function getDataBlob(src: string) {\r\n    return fetch(src, {mode: 'no-cors'})\r\n        .then((res) => res.blob())\r\n        .then((blob) => new Promise((res, rej) => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onloadend = () => res(reader.result);\r\n            reader.onerror = rej;\r\n            reader.readAsDataURL(blob);\r\n        }));\r\n}\r\n\r\nexport async function preloadMediaBlob(src: string, type: 'video' | 'audio' | 'image') {\r\n    const res = await fetch(src, {mode: 'no-cors'});\r\n    let blob: Blob | MediaSource = new Blob();\r\n\r\n    if (type === 'image') {\r\n        blob = new Blob()\r\n    } else if (type === 'video') {\r\n        blob = await res.blob();\r\n    } else if (type === 'audio') {\r\n        const data = await res.arrayBuffer();\r\n        blob = new Blob([data], { type: audioFileType(getFileExt(src)) })\r\n    }\r\n\r\n    console.log({blob})\r\n    return URL.createObjectURL(blob);\r\n}\r\n\r\nexport async function fetchJSON(url: string) {\r\n    return fetch(url)\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport function getFileExt(filename: string) {\r\n    const filenameArr = String(filename).split('.');\r\n\r\n    return filenameArr[filenameArr.length - 1];\r\n}\r\n\r\nexport function audioFileType(str: string) {\r\n    const validAudioTypes = {\r\n        'mp3': 'audio/mp3',\r\n        'wav': 'audio/wav',\r\n        'ogg': 'audio/ogg',\r\n    };\r\n\r\n    if (Boolean(validAudioTypes[str as 'mp3' | 'wav' | 'ogg'])) {\r\n        return validAudioTypes[str as 'mp3' | 'wav' | 'ogg'];\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nexport function composeResourceUrlByPlatform(platform: OptionsType['platform'], params: any) {\r\n    let resourceUrl = params.regionOptions.getResourceUrl\r\n        .replace(\":regionId\", params.regionId)\r\n        .replace(\":id\", params.mediaId) +\r\n        '?preview=1&layoutPreview=1';\r\n\r\n    if (platform === 'chromeOS') {\r\n        resourceUrl = params.cmsUrl +\r\n            '/chromeOS/resource/' +\r\n            params.fileId +\r\n            '?saveAs=' + params.uri;\r\n    } else if (!Boolean(params['mediaType'])) {\r\n        resourceUrl += '&scale_override=' + params.scaleFactor;\r\n    }\r\n\r\n    return resourceUrl;\r\n}\r\n\r\nexport function composeBgUrlByPlatform(\r\n    platform: OptionsType['platform'],\r\n    params: any\r\n) {\r\n    let bgImageUrl = params.layoutBackgroundDownloadUrl.replace(\":id\", (params.layout.id as unknown) as string) +\r\n        '?preview=1&width=' + params.layout.sWidth +\r\n        '&height=' + params.layout.sHeight +\r\n        '&dynamic&proportional=0';\r\n\r\n    if (platform === 'chromeOS') {\r\n        bgImageUrl = params.cmsUrl +\r\n            '/chromeOS/resource/' + params.layout.id +\r\n            '?saveAs=' + params.layout.bgImage;\r\n    }\r\n\r\n    return bgImageUrl;\r\n}\r\n\r\ntype LayoutIndexType = {\r\n    [k: string]: InputLayoutType & {\r\n        index: number;\r\n    }\r\n}\r\n\r\nexport function getIndexByLayoutId(layoutsInput: InputLayoutType[], layoutId?: number | null) {\r\n    let layoutIndexes = layoutsInput.reduce((a: LayoutIndexType, b, indx) => {\r\n        a[Number(b.layoutId)] = {\r\n            ...b,\r\n            index: indx\r\n        };\r\n\r\n        return a;\r\n    }, {});\r\n\r\n    if (layoutId === null || !layoutId) {\r\n        return layoutIndexes;\r\n    }\r\n\r\n    return layoutIndexes[layoutId];\r\n}\r\n\r\nexport function isEmpty(input: any) {\r\n    return !Boolean(input) || String(input).length === 0;\r\n}\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { DefaultEvents, Emitter, Unsubscribe } from \"nanoevents\";\r\nimport {ILayout, initialLayout, OptionsType} from \"../Layout/Layout.types\";\r\nimport {platform} from \"../../Modules/Platform/Platform\";\r\nimport {IMedia} from \"../Media/Media.types\";\r\n\r\nexport interface IRegionEvents {\r\n    start: (layout: IRegion) => void;\r\n    end: (layout: IRegion) => void;\r\n}\r\n\r\nexport interface IRegion {\r\n    layout: ILayout;\r\n    id: string;\r\n    regionId: string;\r\n    xml: null | Element;\r\n    mediaObjects: IMedia[];\r\n    mediaObjectsActions: String[];\r\n    currentMedia: number;\r\n    complete: boolean;\r\n    containerName: string;\r\n    ending: boolean;\r\n    ended: boolean;\r\n    oneMedia: boolean;\r\n    oldMedia: IMedia | undefined;\r\n    curMedia: IMedia | undefined;\r\n    nxtMedia: IMedia | undefined;\r\n    currentMediaIndex: number;\r\n    totalMediaObjects: number;\r\n    ready: boolean;\r\n    options: {\r\n        [k: string]: any;\r\n    };\r\n    sWidth: number;\r\n    sHeight: number;\r\n    offsetX: number;\r\n    offsetY: number;\r\n    zIndex: number;\r\n    index: number;\r\n    emitter?: Emitter<DefaultEvents>;\r\n    prepareRegion(): void;\r\n    playNextMedia(): void;\r\n    transitionNodes(oldMedia: IMedia | undefined, newMedia: IMedia | undefined): void;\r\n    finished(): void;\r\n    run(): void;\r\n    end(): void;\r\n    exitTransition(): void;\r\n    exitTransitionComplete(): void;\r\n    on<E extends keyof IRegionEvents>(event: E, callback: IRegionEvents[E]): Unsubscribe;\r\n    prepareMediaObjects(): void;\r\n}\r\n\r\nexport const initialRegion: IRegion = {\r\n    layout: initialLayout,\r\n    id: '',\r\n    regionId: '',\r\n    xml: null,\r\n    mediaObjects: [],\r\n    mediaObjectsActions: [],\r\n    currentMedia: -1,\r\n    complete: false,\r\n    containerName: '',\r\n    ending: false,\r\n    ended: false,\r\n    oneMedia: false,\r\n    oldMedia: undefined,\r\n    curMedia: undefined,\r\n    nxtMedia: undefined,\r\n    currentMediaIndex: 0,\r\n    totalMediaObjects: 0,\r\n    ready: false,\r\n    options: {},\r\n    sWidth: 0,\r\n    sHeight: 0,\r\n    offsetX: 0,\r\n    offsetY: 0,\r\n    zIndex: 0,\r\n    index: -1,\r\n    prepareRegion() {\r\n    },\r\n    playNextMedia() {\r\n    },\r\n    transitionNodes() {\r\n    },\r\n    finished() {\r\n    },\r\n    run() {\r\n    },\r\n    end() {\r\n    },\r\n    exitTransition() {},\r\n    exitTransitionComplete() {},\r\n    on<E extends keyof IRegionEvents>(event: E, callback: IRegionEvents[E]): Unsubscribe {\r\n        return <Unsubscribe>{};\r\n    },\r\n    prepareMediaObjects() {\r\n    },\r\n};\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { DefaultEvents, Emitter, Unsubscribe } from \"nanoevents\";\r\nimport { IMediaEvents } from \"../../Modules/Media/Media\";\r\nimport {initialRegion, IRegion} from \"../Region/Region.types\";\r\n\r\nexport interface IMedia {\r\n    region: IRegion;\r\n    xml: null | Element;\r\n    id: string;\r\n    idCounter: number;\r\n    index: number;\r\n    containerName: string;\r\n    html: null | HTMLElement;\r\n    iframe: null | HTMLIFrameElement;\r\n    iframeName: string;\r\n    mediaType: string;\r\n    render: string;\r\n    attachedAudio: boolean;\r\n    singlePlay: boolean;\r\n    timeoutId: ReturnType<typeof setTimeout>;\r\n    ready: boolean;\r\n    checkIframeStatus: boolean;\r\n    loadIframeOnRun: boolean;\r\n    tempSrc: string;\r\n    finished: boolean;\r\n    schemaVersion: string;\r\n    type: string;\r\n    duration: number;\r\n    useDuration: boolean;\r\n    fileId: string;\r\n    uri: string;\r\n    options: {\r\n        [k: string]: any;\r\n    };\r\n    divWidth: number;\r\n    divHeight: number;\r\n    url: string | null;\r\n    loop: boolean;\r\n    emitter?: Emitter<DefaultEvents>;\r\n    run(): void;\r\n    init(): void;\r\n    stop(): Promise<void>;\r\n    on<E extends keyof IMediaEvents>(event: E, callback: IMediaEvents[E]): Unsubscribe;\r\n}\r\n\r\nexport const initialMedia: IMedia = {\r\n    region: initialRegion,\r\n    xml: null,\r\n    id: '',\r\n    index: 0,\r\n    idCounter: 0,\r\n    containerName: '',\r\n    html: null,\r\n    iframe: null,\r\n    iframeName: '',\r\n    mediaType: '',\r\n    render: 'html',\r\n    attachedAudio: false,\r\n    singlePlay: false,\r\n    timeoutId: setTimeout(() => {}, 100),\r\n    ready: true,\r\n    checkIframeStatus: false,\r\n    loadIframeOnRun: false,\r\n    tempSrc: '',\r\n    finished: false,\r\n    schemaVersion: '1',\r\n    type: '',\r\n    duration: 0,\r\n    useDuration: Boolean(0),\r\n    fileId: '',\r\n    uri: '',\r\n    options: {},\r\n    divWidth: 0,\r\n    divHeight: 0,\r\n    url: null,\r\n    loop: false,\r\n    run() {},\r\n    init() {},\r\n    stop() {\r\n        return Promise.resolve();\r\n    },\r\n    on<E extends keyof IMediaEvents>(event: E, callback: IMediaEvents[E]): Unsubscribe {\r\n        return <Unsubscribe>{};\r\n    },\r\n}\r\n","/*\n * Copyright (C) 2024 Xibo Signage Ltd\n *\n * Xibo - Digital Signage - https://www.xibosignage.com\n *\n * This file is part of Xibo.\n *\n * Xibo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * Xibo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\n */\nexport const defaultTrans = (duration: number, trans: 'in' | 'out') => {\n    const defaultKeyframes = [\n        { display: trans === 'in' ? 'none' : 'block' },\n        { display: trans === 'out' ? 'none' : 'block' },\n    ];\n    const defaultTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n    };\n\n    return {\n        keyframes: defaultKeyframes,\n        timing: defaultTiming,\n    };\n};\n\nexport const fadeInElem = (duration: number) => {\n    const fadeInKeyframes = [\n        { opacity: 0 },\n        { opacity: 1 },\n    ];\n    const fadeInTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n        fill: 'forwards',\n    };\n\n    return {\n        keyframes: fadeInKeyframes,\n        timing: fadeInTiming,\n    }\n};\n\nexport const fadeOutElem = (duration: number) => {\n    const fadeOutKeyframes = [\n        { opacity: 1 },\n        { opacity: 0, zIndex: -1 },\n    ];\n    const fadeOutTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n        fill: 'forwards',\n    };\n\n    return {\n        keyframes: fadeOutKeyframes,\n        timing: fadeOutTiming,\n    }\n};\n\nexport type KeyframeOptionsType = {\n    from: {\n        [k: string]: any,\n    },\n    to: {\n        [k: string]: any,\n    },\n}\n\nexport const flyInElem = (duration: number, keyframeOptions: KeyframeOptionsType | undefined, direction?: string) => {\n    const flyInKeyframes = [\n        {opacity: 0},\n        {opacity: 1, zIndex: 1},\n    ];\n    const flyInTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n        fill: 'forwards',\n    };\n\n    if (keyframeOptions && Boolean(keyframeOptions.from)) {\n        flyInKeyframes[0] = {...keyframeOptions.from, ...flyInKeyframes[0]};\n    }\n\n    if (keyframeOptions && Boolean(keyframeOptions.to)) {\n        flyInKeyframes[1] = {...keyframeOptions.to, ...flyInKeyframes[1]};\n    }\n\n    return {\n        keyframes: flyInKeyframes,\n        timing: flyInTiming,\n    };\n};\n\nexport const flyOutElem = (duration: number, keyframeOptions: KeyframeOptionsType | undefined, direction?: string) => {\n    const flyOutKeyframes: Keyframe[] = [\n        {opacity: 1},\n        {opacity: 0, zIndex: -1},\n    ];\n    const flyOutTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n        fill: 'forwards',\n    };\n\n    if (keyframeOptions && Boolean(keyframeOptions.from)) {\n        flyOutKeyframes[0] = {...keyframeOptions.from, ...flyOutKeyframes[0]};\n    }\n\n    if (keyframeOptions && Boolean(keyframeOptions.to)) {\n        flyOutKeyframes[1] = {...keyframeOptions.to, ...flyOutKeyframes[1]};\n    }\n\n    return {\n        keyframes: flyOutKeyframes,\n        timing: flyOutTiming,\n    };\n};\n\nexport type TransitionNameType = 'fadeIn' | 'fadeOut' | 'flyIn' | 'flyOut' | 'defaultIn' | 'defaultOut';\n\nexport type TransitionElementOptions = {\n    duration: number;\n    keyframes?: KeyframeOptionsType;\n    direction?: string;\n};\n\nexport const transitionElement = (transition: TransitionNameType, options: TransitionElementOptions) => {\n    const transitions = {\n        fadeIn: fadeInElem(options.duration),\n        fadeOut: fadeOutElem(options.duration),\n        flyIn: flyInElem(options.duration, options.keyframes, options.direction),\n        flyOut: flyOutElem(options.duration, options.keyframes, options.direction),\n        defaultIn: defaultTrans(options.duration, 'in'),\n        defaultOut: defaultTrans(options.duration, 'out'),\n    };\n\n    return transitions[transition];\n};\n\nexport type compassPoints = 'N' | 'NE' | 'E' | 'SE' | 'S' | 'SW' | 'W' | 'NW';\n\nexport type flyTransitionParams = {\n    trans: 'in' | 'out';\n    direction: compassPoints;\n    height: string | number;\n    width: string | number;\n};\n\nexport const flyTransitionKeyframes = (params: flyTransitionParams): KeyframeOptionsType => {\n    const keyframes = {\n        from: {},\n        to: {},\n    };\n    const opacityAttr = (source: 'from' | 'to') => {\n        if (source === 'from') {\n            return params.trans === 'in' ? 0 : 1;\n        }\n        \n        return params.trans === 'out' ? 1 : 0;\n    };\n\n    switch (params.direction) {\n        case 'N':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `${params.height}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `-${params.height}px`,\n            };\n            break;\n        case 'NE':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `${params.height}px` : 0,\n                left: params.trans === 'in' ? `-${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `-${params.height}px`,\n                left: params.trans === 'in' ? 0 : `${params.width}px`,\n            };\n            break;\n        case 'E':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                left: params.trans === 'in' ? `-${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                left: params.trans === 'in' ? 0 : `${params.width}px`,\n            };\n            break;\n        case 'SE':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `-${params.height}px` : 0,\n                left: params.trans === 'in' ? `-${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `${params.height}px`,\n                left: params.trans === 'in' ? 0 : `${params.width}px`,\n            };\n            break;\n        case 'S':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `-${params.height}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `${params.height}px`,\n            };\n            break;\n        case 'SW':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `-${params.height}px` : 0,\n                left: params.trans === 'in' ? `${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `${params.height}px`,\n                left: params.trans === 'in' ? 0 : `-${params.width}px`,\n            };\n            break;\n        case 'W':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                left: params.trans === 'in' ? `${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                left: params.trans === 'in' ? 0 : `-${params.width}px`,\n            };\n            break;\n        case 'NW':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `${params.height}px` : 0,\n                left: params.trans === 'in' ? `${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `-${params.height}px`,\n                left: params.trans === 'in' ? 0 : `-${params.width}px`,\n            };\n            break;\n        default:\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `${params.height}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `-${params.height}px`,\n            };\n            break;\n    }\n\n    return keyframes;\n};\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { createNanoEvents } from \"nanoevents\";\r\nimport { OptionsType } from '../../Types/Layout';\r\nimport { IRegion } from '../../Types/Region';\r\nimport { IMedia, initialMedia } from '../../Types/Media';\r\nimport { fetchJSON, getMediaId, nextId, preloadMediaBlob } from '../Generators';\r\nimport { TransitionElementOptions, compassPoints, flyTransitionKeyframes, transitionElement } from '../Transitions';\r\nimport VideoMedia from './VideoMedia';\r\nimport AudioMedia from './AudioMedia';\r\nimport {composeResourceUrlByPlatform, getDataBlob} from \"../Generators/Generators\";\r\nimport {IXlr} from \"../../Types/XLR\";\r\n\r\nexport interface IMediaEvents {\r\n    start: (media: IMedia) => void;\r\n    end: (media: IMedia) => void;\r\n}\r\n\r\nexport default function Media(\r\n    region: IRegion,\r\n    mediaId: string,\r\n    xml: Element,\r\n    options: OptionsType,\r\n    xlr: IXlr,\r\n) {\r\n    const props = {\r\n        region: region,\r\n        mediaId: mediaId,\r\n        xml: xml,\r\n        options: options,\r\n    };\r\n    let mediaTimer: string | number | NodeJS.Timeout | null | undefined = null;\r\n    let mediaTimeCount = 0;\r\n    const emitter = createNanoEvents<IMediaEvents>();\r\n    const mediaObject: IMedia = {\r\n        ...initialMedia,\r\n        ...props,\r\n    };\r\n    const startMediaTimer = (media: IMedia) => {\r\n        mediaTimer = setInterval(() => {\r\n            mediaTimeCount++;\r\n            if (mediaTimeCount > media.duration) {\r\n                media.emitter?.emit('end', media);\r\n            }\r\n        }, 1000);\r\n        console.log('Showing Media ' + media.id + ' for ' + media.duration + 's of Region ' + media.region.regionId);\r\n    };\r\n\r\n    emitter.on('start', function(media) {\r\n        if (media.mediaType === 'video') {\r\n            VideoMedia(media).init();\r\n\r\n            if (media.duration > 0) {\r\n                startMediaTimer(media);\r\n            }\r\n        } else if (media.mediaType === 'audio') {\r\n            AudioMedia(media).init();\r\n            if (media.duration > 0) {\r\n                startMediaTimer(media);\r\n            }\r\n        } else {\r\n            startMediaTimer(media);\r\n        }\r\n    });\r\n\r\n    emitter.on('end', function(media) {\r\n        if (mediaTimer) {\r\n            clearInterval(mediaTimer);\r\n            mediaTimeCount = 0;\r\n        }\r\n\r\n        media.region.playNextMedia();\r\n    });\r\n\r\n    mediaObject.init = function() {\r\n        const self = mediaObject;\r\n        self.id = props.mediaId;\r\n        self.fileId = self.xml?.getAttribute('fileId') || '';\r\n        self.idCounter = nextId(props.options);\r\n        self.containerName = `M-${self.id}-${self.idCounter}`;\r\n        self.iframeName = `${self.containerName}-iframe`;\r\n        self.mediaType = self.xml?.getAttribute('type') || '';\r\n        self.render = self.xml?.getAttribute('render') || '';\r\n        self.duration = parseInt(self.xml?.getAttribute('duration') as string) || 0;\r\n        self.options = { ...props.options, mediaId };\r\n\r\n        const $mediaIframe = document.createElement('iframe');\r\n        const mediaOptions = self.xml?.getElementsByTagName('options');\r\n\r\n        if (mediaOptions) {\r\n            for (let _options of Array.from(mediaOptions)) {\r\n                // Get options\r\n                const _mediaOptions = _options.children;\r\n                for (let mediaOption of Array.from(_mediaOptions)) {\r\n                    self.options[mediaOption.nodeName.toLowerCase()] = mediaOption.textContent;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check for options.uri and add it to media\r\n        if (Boolean(self.options['uri'])) {\r\n            self.uri = self.options['uri'];\r\n        }\r\n\r\n        // Show in fullscreen?\r\n        if(self.options.showfullscreen === \"1\") {\r\n            // Set dimensions as the layout ones\r\n            self.divWidth = self.region.layout.sWidth;\r\n            self.divHeight = self.region.layout.sHeight;\r\n        } else {\r\n            // Set dimensions as the region ones\r\n            self.divWidth = self.region.sWidth;\r\n            self.divHeight = self.region.sHeight;\r\n        }\r\n\r\n        $mediaIframe.scrolling = 'no';\r\n        $mediaIframe.id = self.iframeName;\r\n        $mediaIframe.width = `${self.divWidth}px`;\r\n        $mediaIframe.height = `${self.divHeight}px`;\r\n        $mediaIframe.style.cssText = `border: 0; visibility: hidden;`;\r\n\r\n        const $mediaId = getMediaId(self);\r\n        let $media = document.getElementById($mediaId);\r\n\r\n        if ($media === null) {\r\n            if (self.mediaType === 'video') {\r\n                $media = document.createElement('video');\r\n            } else if (self.mediaType === 'audio') {\r\n                $media = new Audio();\r\n            } else {\r\n                $media = document.createElement('div');\r\n            }\r\n        \r\n            $media.id = $mediaId;\r\n        }\r\n\r\n        $media.className = 'media--item';\r\n\r\n        /* Scale the Content Container */\r\n        $media.style.cssText = `\r\n            display: none;\r\n            width: ${self.divWidth}px;\r\n            height: ${self.divHeight}px;\r\n            position: absolute;\r\n            background-size: contain;\r\n            background-repeat: no-repeat;\r\n            background-position: center;\r\n        `;\r\n\r\n        const $region = document.getElementById(`${self.region.containerName}`);\r\n\r\n        const resourceUrlParams: any = {\r\n            ...xlr.config.config,\r\n            regionOptions: self.region.options,\r\n            layoutId: self.region.layout.layoutId,\r\n            regionId: self.region.id,\r\n            mediaId: self.id,\r\n            fileId: self.fileId,\r\n            scaleFactor: self.region.layout.scaleFactor,\r\n            uri: self.uri,\r\n        };\r\n\r\n        if (self.mediaType === 'image' || self.mediaType === 'video') {\r\n            resourceUrlParams.mediaType = self.mediaType;\r\n        }\r\n\r\n        const tmpUrl = composeResourceUrlByPlatform(xlr.config.platform, resourceUrlParams);\r\n\r\n        self.url = tmpUrl;\r\n\r\n        // Loop if media has loop, or if region has loop and a single media\r\n        self.loop =\r\n            self.options['loop'] == '1' ||\r\n            (self.region.options['loop'] == '1' && self.region.totalMediaObjects == 1);\r\n\r\n        $mediaIframe.src = `${tmpUrl}&width=${self.divWidth}&height=${self.divHeight}`;\r\n\r\n        if (self.render === 'html' || self.mediaType === 'ticker' || self.mediaType === 'webpage') {\r\n            self.checkIframeStatus = true;\r\n            self.iframe = $mediaIframe;\r\n        }  else if (self.mediaType === \"image\") {\r\n            // preload.addFiles(tmpUrl);\r\n            // $media.style.cssText = $media.style.cssText.concat(`background-image: url('${tmpUrl}');`);\r\n            if (self.options['scaletype'] === 'stretch') {\r\n                $media.style.cssText = $media.style.cssText.concat(`background-size: 100% 100%;`);\r\n            } else if (self.options['scaletype'] === 'fit') {\r\n                $media.style.cssText = $media.style.cssText.concat(`background-size: cover;`);\r\n            } else {\r\n                // Center scale type, do we have align or valign?\r\n                const align = (self.options['align'] == \"\") ? \"center\" : self.options['align'];\r\n                const valign = (self.options['valign'] == \"\" || self.options['valign'] == \"middle\") ? \"center\" : self.options['valign'];\r\n                $media.style.cssText = $media.style.cssText.concat(`background-position: ${align} ${valign}`);\r\n            }\r\n        } else if (self.mediaType === 'video') {\r\n            const $videoMedia = $media as HTMLVideoElement;\r\n\r\n            $videoMedia.preload = 'auto';\r\n            $videoMedia.textContent = 'Unsupported Video';\r\n\r\n            if (Boolean(self.options['mute'])) {\r\n                $videoMedia.muted = self.options.mute === '1';\r\n            }\r\n\r\n            if (Boolean(self.options['scaletype'])) {\r\n                if (self.options.scaletype === 'stretch') {\r\n                    $videoMedia.style.objectFit = 'fill';\r\n                }\r\n            }\r\n            $videoMedia.playsInline = true;\r\n\r\n            if (self.loop) {\r\n                $videoMedia.loop = true;\r\n            }\r\n\r\n            $media = $videoMedia;\r\n        } else if (self.mediaType === 'audio') {\r\n            const $audioMedia = $media as HTMLAudioElement;\r\n\r\n            $audioMedia.preload = 'auto';\r\n            $audioMedia.textContent = 'Unsupported Audio';\r\n            $audioMedia.autoplay = true;\r\n\r\n            if (self.loop) {\r\n                $audioMedia.loop = true;\r\n            }\r\n\r\n            $media = $audioMedia;\r\n        }\r\n\r\n        // Duration is per item condition\r\n        if (self.render === 'html' || self.mediaType === 'ticker') {\r\n            /* Check if the ticker duration is based on the number of items in the feed */\r\n            if (self.options['durationisperitem'] === '1') {\r\n                const regex = new RegExp('<!-- NUMITEMS=(.*?) -->');\r\n\r\n                (async () => {\r\n                    let html = await fetchJSON(`${tmpUrl}&width=${self.divWidth}&height=${self.divHeight}`);\r\n                    console.log({html});\r\n                    const res = regex.exec(html);\r\n\r\n                    if (res !== null) {\r\n                        self.duration = parseInt(String(self.duration)) * parseInt(res[1]);\r\n                    }\r\n                })();\r\n            }\r\n        }\r\n\r\n        // Check if the media has fade-in/out transitions\r\n        if (Boolean(self.options['transin']) && Boolean(self.options['transinduration'])) {\r\n            const transInDuration = Number(self.options.transinduration);\r\n            const fadeInTrans = transitionElement('fadeIn', { duration: transInDuration });\r\n            $media.animate(fadeInTrans.keyframes, fadeInTrans.timing);\r\n        }\r\n\r\n        // Add media to the region\r\n        // Second media if exists, will be off-canvas\r\n        // All added media will be hidden by default\r\n        // It will start showing when region.nextMedia() function is called\r\n\r\n        // When there's only 1 item and loop = false, don't remove the item but leave it at its last state\r\n        // For image, and only 1 item, it should still have the transition for next state\r\n        // Add conditions for video duration being 0 or 1 and also the loop property\r\n        // For video url, we have to create a URL out of the XLF video URL\r\n\r\n        /**\r\n         * @DONE\r\n         * Case 1: Video duration = 0, this will play the video for its entire duration\r\n         * Case 2: Video duration is set > 0 and loop = false\r\n         * E.g. Set duration = 100s, video duration = 62s\r\n         * the video will play until 62s and will stop to its last frame until 100s\r\n         * After 100s, it will expire\r\n         * Case 3: Video duration is set > 0 and loop = true\r\n         * E.g. Set duration = 100s, video duration = 62s, loop = true\r\n         * the video will play until 62s and will loop through until the remaining 38s\r\n         * to complete the 100s set duration\r\n         */\r\n\r\n        // Add html node to media for \r\n\r\n        self.html = $media;\r\n\r\n        // Check/set iframe based widgets play status\r\n        // if(self.iframe && self.checkIframeStatus) {\r\n        //     // Set state as false ( for now )\r\n        //     self.ready = false;\r\n        //\r\n        //     // Append iframe\r\n        //     $media.innerHTML = '';\r\n        //     $media.appendChild(self.iframe as Node);\r\n        //\r\n        //     // On iframe load, set state as ready to play full preview\r\n        //     (self.iframe) && self.iframe.addEventListener('load', function(){\r\n        //         self.ready = true;\r\n        //         if (self.iframe) {\r\n        //             const iframeStyles = self.iframe.style.cssText;\r\n        //             self.iframe.style.cssText = iframeStyles?.concat('visibility: visible;');\r\n        //         }\r\n        //     });\r\n        // }\r\n\r\n    };\r\n\r\n    mediaObject.run = function() {\r\n        const self = mediaObject;\r\n        let transInDuration = 1;\r\n        let transInDirection: compassPoints = 'E';\r\n\r\n        if (Boolean(self.options['transinduration'])) {\r\n            transInDuration = Number(self.options.transinduration);\r\n        }\r\n\r\n        if (Boolean(self.options['transindirection'])) {\r\n            transInDirection = self.options.transindirection;\r\n        }\r\n\r\n        let defaultTransInOptions: TransitionElementOptions = {duration: transInDuration};\r\n        let transIn = transitionElement('defaultIn', {duration: defaultTransInOptions.duration});\r\n        \r\n        if (Boolean(self.options['transin'])) {\r\n            let transInName = self.options['transin'];\r\n\r\n            if (transInName === 'fly') {\r\n                transInName = `${transInName}In`;\r\n                defaultTransInOptions.keyframes = flyTransitionKeyframes({\r\n                    trans: 'in',\r\n                    direction: transInDirection,\r\n                    height: self.divHeight,\r\n                    width: self.divWidth,\r\n                });\r\n            }\r\n\r\n            transIn = transitionElement(transInName, defaultTransInOptions);\r\n        }\r\n\r\n        const showCurrentMedia = async () => {\r\n            let $mediaId = getMediaId(self);\r\n            let $media = document.getElementById($mediaId);\r\n            const isCMS = xlr.config.platform === 'CMS';\r\n\r\n            if ($media === null) {\r\n                $media = getNewMedia();\r\n            }\r\n\r\n            if ($media !== null) {\r\n                $media.style.setProperty('display', 'block');\r\n\r\n                if (Boolean(self.options['transin'])) {\r\n                    $media.animate(transIn.keyframes, transIn.timing);\r\n                }\r\n\r\n                if (self.mediaType === 'image' && self.url !== null) {\r\n                    ($media as HTMLImageElement).style\r\n                        .setProperty(\r\n                            'background-image',\r\n                            `url(${!isCMS ? self.url : await getDataBlob(self.url)}`\r\n                        );\r\n                } else if (self.mediaType === 'video' && self.url !== null) {\r\n                    ($media as HTMLVideoElement).src =\r\n                        isCMS ? await preloadMediaBlob(self.url, self.mediaType) : self.url;\r\n                } else if (self.mediaType === 'audio' && self.url !== null) {\r\n                    ($media as HTMLAudioElement).src =\r\n                        isCMS ? await preloadMediaBlob(self.url, self.mediaType) : self.url;\r\n                } else if ((self.render === 'html' || self.mediaType === 'webpage') &&\r\n                    self.iframe && self.checkIframeStatus\r\n                ) {\r\n                    // Set state as false ( for now )\r\n                    self.ready = false;\r\n\r\n                    // Append iframe\r\n                    $media.innerHTML = '';\r\n                    $media.appendChild(self.iframe as Node);\r\n\r\n                    // On iframe load, set state as ready to play full preview\r\n                    (self.iframe) && self.iframe.addEventListener('load', function(){\r\n                        self.ready = true;\r\n                        if (self.iframe) {\r\n                            const iframeStyles = self.iframe.style.cssText;\r\n                            self.iframe.style.cssText = iframeStyles?.concat('visibility: visible;');\r\n                        }\r\n                    });\r\n                }\r\n\r\n                self.emitter?.emit('start', self);\r\n            }\r\n        };\r\n        const getNewMedia = (): HTMLElement | null => {\r\n            const $region = document.getElementById(`${self.region.containerName}`);\r\n            // This function is for checking whether\r\n            // the region still has to show a media item\r\n            // when another region is not finished yet\r\n            if (self.region.complete && !self.region.layout.allEnded) {\r\n                // Add currentMedia to the region\r\n\r\n                ($region) && $region.insertBefore(self.html as Node, $region.lastElementChild);\r\n\r\n                return self.html as HTMLElement;\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        showCurrentMedia();\r\n    };\r\n\r\n    mediaObject.stop = async function() {\r\n        const self = mediaObject;\r\n        const $media = document.getElementById(getMediaId(self));\r\n\r\n        if ($media) {\r\n            $media.style.display = 'none';\r\n            $media.remove();\r\n        }\r\n    };\r\n\r\n    \r\n    mediaObject.on = function<E extends keyof IMediaEvents>(event: E, callback: IMediaEvents[E]) {\r\n        return emitter.on(event, callback);\r\n    };\r\n\r\n    mediaObject.emitter = emitter;\r\n\r\n    mediaObject.init();\r\n\r\n    return mediaObject;\r\n}","/*\n * Copyright (C) 2024 Xibo Signage Ltd\n *\n * Xibo - Digital Signage - https://www.xibosignage.com\n *\n * This file is part of Xibo.\n *\n * Xibo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * Xibo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport { IMedia } from '../../Types/Media';\nimport { capitalizeStr, getMediaId } from '../Generators';\n\nexport default function VideoMedia(media: IMedia) {\n    const videoMediaObject = {\n        init() {\n            const $videoMedia = document.getElementById(getMediaId(media)) as HTMLVideoElement;\n\n            if ($videoMedia) {\n                $videoMedia.onloadstart = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} has started loading data . . .`);\n                };\n                $videoMedia.onloadeddata = () => {\n                    if ($videoMedia.readyState >= 2) {\n                        console.log(`${capitalizeStr(media.mediaType)} data for media > ${media.id} has been fully loaded . . .`);\n                    }\n                };\n                $videoMedia.oncanplay = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} can be played . . .`);\n        \n                    const videoPlayPromise = $videoMedia.play();\n        \n                    if (videoPlayPromise !== undefined) {\n                        videoPlayPromise.then(() => {\n                            console.log('autoplay started . . .');\n                            // Autoplay restarted\n                        }).catch(error => {\n                            $videoMedia.muted = true;\n                            $videoMedia.play();\n                        });\n                    }\n                };\n                $videoMedia.onplaying = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} is now playing . . .`);\n                };\n\n                if (media.duration === 0) {\n                    $videoMedia.ondurationchange = () => {\n                        console.log('Showing Media ' + media.id + ' for ' + $videoMedia.duration + 's of Region ' + media.region.regionId);\n                    };\n                    $videoMedia.onended = () => {\n                        console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} has ended playing . . .`);\n                        media.emitter?.emit('end', media);\n                    };\n                }\n            }\n        }\n    }\n\n    return videoMediaObject;\n}\n","/*\n * Copyright (C) 2024 Xibo Signage Ltd\n *\n * Xibo - Digital Signage - https://www.xibosignage.com\n *\n * This file is part of Xibo.\n *\n * Xibo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * Xibo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport { IMedia } from '../../Types/Media';\nimport { capitalizeStr, getMediaId } from '../Generators';\n\nimport './media.css';\n\nexport default function AudioMedia(media: IMedia) {\n    const audioMediaObject = {\n        init() {\n            const $audioMedia = document.getElementById(getMediaId(media)) as HTMLAudioElement;\n            let $playBtn: HTMLButtonElement | null = null;\n\n            if ($audioMedia) {\n                $audioMedia.onloadstart = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} has started loading data . . .`);\n                };\n                $audioMedia.onloadeddata = () => {\n                    if ($audioMedia.readyState >= 2) {\n                        console.log(`${capitalizeStr(media.mediaType)} data for media > ${media.id} has been fully loaded . . .`);\n                    }\n                };\n                $audioMedia.oncanplay = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} can be played . . .`);\n                };\n                $audioMedia.onplaying = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} is now playing . . .`);\n\n                    if ($playBtn !== null) {\n                        $playBtn.remove();\n                    }\n                };\n\n                const audioPlayPromise = $audioMedia.play();\n    \n                if (audioPlayPromise !== undefined) {\n                    audioPlayPromise.then(() => {\n                        console.log('autoplay started . . .');\n                        // Autoplay restarted\n                    }).catch(error => {\n                        if (error.name === 'NotAllowedError') {\n                            // Let's show a play audio button\n                            $playBtn = document.createElement('button');\n\n                            $playBtn.classList.add('play-audio-btn');\n                            $playBtn.textContent = 'Play Audio';\n                            $playBtn.addEventListener('click', () => {\n                                $audioMedia.muted = false;\n                                $audioMedia.play();\n                            });\n                            $audioMedia.parentNode?.insertBefore($playBtn, $audioMedia.nextSibling);\n                        }\n                    });\n                }\n                if (media.duration === 0) {\n                    $audioMedia.ondurationchange = () => {\n                        console.log('Showing Media ' + media.id + ' for ' + $audioMedia.duration + 's of Region ' + media.region.regionId);\n                    };\n                    $audioMedia.onended = () => {\n                        console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} has ended playing . . .`);\n                        media.emitter?.emit('end', media);\n                    };\n                }\n            }\n        },\n    };\n\n    return audioMediaObject;\n}\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {createNanoEvents} from 'nanoevents';\r\nimport {\r\n    GetLayoutParamType,\r\n    GetLayoutType,\r\n    ILayout,\r\n    initialLayout,\r\n    OptionsType,\r\n} from '../../Types/Layout';\r\nimport { IXlr } from '../../Types/XLR';\r\nimport { nextId } from '../Generators';\r\nimport { Region } from '../Region';\r\n\r\nimport './layout.css';\r\nimport {composeBgUrlByPlatform, getIndexByLayoutId} from '../Generators/Generators';\r\n\r\nconst playAgainClickHandle = function(ev: { preventDefault: () => void; }) {\r\n    ev.preventDefault();\r\n    history.go(0);\r\n};\r\n\r\nexport function initRenderingDOM(targetContainer: Element | null) {\r\n    let _targetContainer = targetContainer;\r\n    const previewPlayer = document.createElement('div');\r\n    const previewScreen = document.createElement('div');\r\n    const endPlay = document.createElement('div');\r\n    const playAgainLink = document.createElement('a');\r\n\r\n    // Preview player\r\n    previewPlayer.className = 'player-preview';\r\n    previewPlayer.id = 'player_container';\r\n\r\n    // Preview screen\r\n    previewScreen.className = 'screen-preview';\r\n    previewScreen.id = 'screen_container';\r\n\r\n    // Ended play\r\n    endPlay.className = 'preview-ended';\r\n    endPlay.id = 'play_ended';\r\n    endPlay.style.display = 'none';\r\n\r\n    // Play again link\r\n    playAgainLink.id = 'play_back_preview';\r\n    playAgainLink.className = 'play-back-preview';\r\n    playAgainLink.style.cssText = 'text-decoration: none; color: #ffffff;';\r\n    playAgainLink.innerHTML = 'Play again?';\r\n    playAgainLink.removeEventListener('click', playAgainClickHandle);\r\n    playAgainLink.addEventListener('click', playAgainClickHandle);\r\n\r\n    if (!_targetContainer) {\r\n        _targetContainer = document.body;\r\n    }\r\n\r\n    if (_targetContainer) {\r\n        if (_targetContainer.querySelector('#player_container') === null) {\r\n            _targetContainer.insertBefore(previewPlayer, _targetContainer.firstChild);\r\n\r\n            if (previewPlayer.querySelector('#screen_container') === null) {\r\n                previewPlayer.appendChild(previewScreen);\r\n            }\r\n\r\n            if (previewPlayer.querySelector('#play_ended') === null) {\r\n                previewPlayer.appendChild(endPlay);\r\n\r\n                if (endPlay.querySelector('a') === null) {\r\n                    endPlay.appendChild(playAgainLink);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getXlf(layoutOptions: OptionsType) {\r\n    let apiHost = window.location.origin;\r\n\r\n    let xlfUrl = apiHost + layoutOptions.xlfUrl;\r\n    let fetchOptions: RequestInit = {};\r\n\r\n    if (layoutOptions.platform === 'CMS') {\r\n        xlfUrl = apiHost + layoutOptions.xlfUrl;\r\n        fetchOptions.mode = 'no-cors';\r\n    } else if (layoutOptions.platform === 'chromeOS') {\r\n        xlfUrl = layoutOptions.xlfUrl;\r\n        fetchOptions.mode = 'cors';\r\n        fetchOptions.headers = {\r\n            'Content-Type': 'text/xml',\r\n        };\r\n    } else if (layoutOptions.platform !== 'CMS' && layoutOptions.appHost !== null) {\r\n        xlfUrl = layoutOptions.appHost + layoutOptions.xlfUrl;\r\n    }\r\n\r\n    const res = await fetch(xlfUrl);\r\n\r\n    return await res.text();\r\n}\r\n\r\nexport function handleAxiosError(error: any, message?: string) {\r\n    console.error(error);\r\n    if (error.response.status == 500) {\r\n        // SOAP responses are always 500's\r\n        // Return the body\r\n        throw new Error(error.response.data);\r\n    } else {\r\n        throw new Error(message || 'Unknown Error');\r\n    }\r\n}\r\n\r\nexport function getLayout(params: GetLayoutParamType): GetLayoutType {\r\n    let _currentLayout = undefined;\r\n    let _nextLayout = undefined;\r\n    let {\r\n        inputLayouts,\r\n        currentLayout,\r\n        nextLayout,\r\n        currentLayoutIndex: currLayoutIndx\r\n    } = params.xlr;\r\n    const hasLayout = inputLayouts.length > 0;\r\n    let currentLayoutIndex = currLayoutIndx;\r\n    let nextLayoutIndex = currentLayoutIndex + 1;\r\n\r\n    if (currentLayout === undefined && nextLayout === undefined) {\r\n        let activeLayout;\r\n        // Preview just got started\r\n        if (hasLayout) {\r\n            let nextLayoutTemp = {...initialLayout};\r\n            activeLayout = inputLayouts[currentLayoutIndex];\r\n            _currentLayout = {...initialLayout, ...activeLayout};\r\n\r\n            if (inputLayouts.length > 1) {\r\n                nextLayoutTemp = {...nextLayoutTemp, ...inputLayouts[nextLayoutIndex]};\r\n                _nextLayout = nextLayoutTemp;\r\n            } else {\r\n                _nextLayout = _currentLayout;\r\n            }\r\n\r\n            _currentLayout.id = activeLayout.layoutId;\r\n\r\n            if (nextLayoutTemp) {\r\n                _nextLayout.id = nextLayoutTemp.layoutId;\r\n            }\r\n        }\r\n    } else {\r\n        if (hasLayout) {\r\n            _currentLayout = nextLayout;\r\n\r\n            currentLayoutIndex = getIndexByLayoutId(inputLayouts, _currentLayout?.layoutId).index as number;\r\n            nextLayoutIndex = currentLayoutIndex + 1;\r\n\r\n            if (inputLayouts.length > 1 && nextLayoutIndex < inputLayouts.length) {\r\n                if (Boolean(params.xlr.layouts[nextLayoutIndex])) {\r\n                    _nextLayout = params.xlr.layouts[nextLayoutIndex];\r\n                } else {\r\n                    _nextLayout = {...initialLayout, ...inputLayouts[nextLayoutIndex]};\r\n                }\r\n            }\r\n\r\n            // If _nextLayout is undefined, then we go back to first layout\r\n            if (_nextLayout === undefined) {\r\n                _nextLayout = params.xlr.layouts[0];\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        currentLayoutIndex,\r\n        inputLayouts: params.xlr.inputLayouts,\r\n        current: _currentLayout,\r\n        next: _nextLayout,\r\n    }\r\n}\r\n\r\nexport interface ILayoutEvents {\r\n    start: (layout: ILayout) => void;\r\n    end: (layout: ILayout) => void;\r\n}\r\n\r\nexport default function Layout(\r\n    data: Document | null,\r\n    options: OptionsType,\r\n    xlr: IXlr,\r\n    layout?: ILayout\r\n) {\r\n    const props = {\r\n        data: data,\r\n        options: options,\r\n        layout: layout || initialLayout,\r\n    }\r\n    const emitter = createNanoEvents<ILayoutEvents>();\r\n\r\n    emitter.on('start', (layout) => {\r\n        layout.done = false;\r\n        console.log('Layout start emitted > Layout ID > ', layout.id);\r\n    });\r\n\r\n    emitter.on('end', (layout) => {\r\n        console.log('Ending layout with ID of > ', layout.layoutId);\r\n        layout.done = true;\r\n        /* Remove layout that has ended */\r\n        const $layout = document.getElementById(layout.containerName);\r\n\r\n        console.log({$layout});\r\n\r\n        if ($layout !== null) {\r\n            $layout.remove();\r\n        }\r\n\r\n        if (xlr.config.platform !== 'CMS') {\r\n            // Transition next layout to current layout and prepare next layout if exist\r\n            xlr.prepareLayouts().then((parent) => {\r\n                xlr.playSchedules(parent);\r\n            });\r\n        }\r\n    });\r\n\r\n    const layoutObject: ILayout = {\r\n        ...props.layout,\r\n        options: props.options,\r\n        emitter,\r\n    };\r\n\r\n    layoutObject.on = function<E extends keyof ILayoutEvents>(event: E, callback: ILayoutEvents[E]) {\r\n        return emitter.on(event, callback);\r\n    };\r\n    layoutObject.run = function() {\r\n        const layout = layoutObject;\r\n        const $layoutContainer = document.getElementById(`${layout.containerName}`);\r\n        const $splashScreen = document.getElementById(`splash_${layout.id}`);\r\n\r\n        if ($layoutContainer) {\r\n            $layoutContainer.style.display = 'block';\r\n        }\r\n\r\n        if ($splashScreen) {\r\n            $splashScreen.style.display = 'none';\r\n        }\r\n\r\n        console.log('Layout running > Layout ID > ', layout.id);\r\n        console.log('Layout Regions > ', layout.regions);\r\n        for (let i = 0; i < layout.regions.length; i++) {\r\n            // playLog(4, \"debug\", \"Running region \" + self.regions[i].id, false);\r\n            layout.regions[i].run();\r\n        }\r\n    };\r\n\r\n    layoutObject.parseXlf = function() {\r\n        const layout = layoutObject;\r\n        const {data, options} = props;\r\n        layout.containerName = \"L\" + layout.id + \"-\" + nextId(options);\r\n        layout.regions = [];\r\n\r\n        /* Create a hidden div to show the layout in */\r\n        let $layout = document.getElementById(layout.containerName);\r\n\r\n        if ($layout === null) {\r\n            $layout = document.createElement('div');\r\n            $layout.id = layout.containerName;\r\n        }\r\n\r\n        let $screen = document.getElementById('screen_container');\r\n        ($screen) && $screen.appendChild($layout);\r\n\r\n        if ($layout) {\r\n            $layout.style.display = 'none';\r\n            $layout.style.outline = 'red solid thin';\r\n        }\r\n\r\n        layout.layoutNode = data;\r\n\r\n        /* Calculate the screen size */\r\n        layout.sw = $screen?.offsetWidth || 0;\r\n        layout.sh = $screen?.offsetHeight || 0;\r\n\r\n        layout.xw = Number(layout.layoutNode?.firstElementChild?.getAttribute('width'));\r\n        layout.xh = Number(layout.layoutNode?.firstElementChild?.getAttribute('height'));\r\n        layout.zIndex = Number(layout.layoutNode?.firstElementChild?.getAttribute('zindex')) || 0;\r\n\r\n        /* Calculate Scale Factor */\r\n        layout.scaleFactor = Math.min((layout.sw / layout.xw), (layout.sh / layout.xh));\r\n        layout.sWidth = Math.round(layout.xw * layout.scaleFactor);\r\n        layout.sHeight = Math.round(layout.xh * layout.scaleFactor);\r\n        layout.offsetX = Math.abs(layout.sw - layout.sWidth) / 2;\r\n        layout.offsetY = Math.abs(layout.sh - layout.sHeight) / 2;\r\n\r\n        /* Scale the Layout Container */\r\n        if ($layout) {\r\n            $layout.style.width = `${layout.sWidth}px`;\r\n            $layout.style.height = `${layout.sHeight}px`;\r\n            $layout.style.position = 'absolute';\r\n            $layout.style.left = `${layout.offsetX}px`;\r\n            $layout.style.top = `${layout.offsetY}px`;\r\n        }\r\n\r\n        if ($layout && layout.zIndex !== null) {\r\n            $layout.style.zIndex = `${layout.zIndex}`;\r\n        }\r\n\r\n        /* Set the layout background */\r\n        layout.bgColor = layout.layoutNode?.firstElementChild?.getAttribute('bgcolor') || '';\r\n        layout.bgImage = layout.layoutNode?.firstElementChild?.getAttribute('background') || '';\r\n\r\n        if (!(layout.bgImage === \"\" || typeof layout.bgImage === 'undefined')) {\r\n            /* Extract the image ID from the filename */\r\n            layout.bgId = layout.bgImage.substring(0, layout.bgImage.indexOf('.'));\r\n\r\n            const bgImageUrl = composeBgUrlByPlatform(\r\n                xlr.config.platform,\r\n                {\r\n                    ...options,\r\n                    layout,\r\n                }\r\n            );\r\n\r\n            if ($layout) {\r\n                $layout.style.backgroundImage = `url(\"${bgImageUrl}\")`;\r\n                $layout.style.backgroundRepeat = 'no-repeat';\r\n                $layout.style.backgroundSize = `${layout.sWidth}px ${layout.sHeight}px`;\r\n                $layout.style.backgroundPosition = '0px 0px';\r\n            }\r\n        }\r\n\r\n        // Set the background color\r\n        if ($layout && layout.bgColor) {\r\n            $layout.style.backgroundColor = `${layout.bgColor}`;\r\n        }\r\n\r\n        // Hide if layout is not the currentLayout\r\n        if ($layout && xlr.currentLayoutId !== undefined && xlr.currentLayoutId !== layout.id) {\r\n            $layout.style.display = 'none';\r\n        }\r\n\r\n        // Create regions\r\n        const layoutRegions = Array.from(layout?.layoutNode?.getElementsByTagName('region') || []);\r\n\r\n        Array.from(layoutRegions).forEach((regionXml, indx) => {\r\n            const regionObj = Region(\r\n                layout,\r\n                regionXml,\r\n                regionXml?.getAttribute('id') || '',\r\n                options,\r\n                xlr,\r\n            );\r\n\r\n            regionObj.index = indx;\r\n            layout.regions.push(regionObj);\r\n        });\r\n    };\r\n\r\n    layoutObject.prepareLayout = function() {\r\n        layoutObject.parseXlf();\r\n    };\r\n\r\n    layoutObject.regionExpired = function() {\r\n        const self = layoutObject;\r\n        self.allExpired = true;\r\n\r\n        for (let layoutRegion of self.regions) {\r\n            if (!layoutRegion.complete) {\r\n                self.allExpired = false;\r\n            }\r\n        }\r\n\r\n        if (self.allExpired) {\r\n            self.end();\r\n        }\r\n    };\r\n\r\n    layoutObject.regionEnded = function() {\r\n        const self = layoutObject;\r\n        self.allEnded = true;\r\n        \r\n        for (var i = 0; i < self.regions.length; i++) {\r\n            if (! self.regions[i].ended) {\r\n                self.allEnded = false;\r\n            }\r\n        }\r\n        \r\n        if (self.allEnded) {\r\n            self.stopAllMedia().then(() => {\r\n                console.log('starting to end layout . . .');\r\n                if (xlr.config.platform === 'CMS') {\r\n                    const $end = document.getElementById('play_ended');\r\n                    const $preview = document.getElementById('screen_container');\r\n        \r\n                    if ($preview) {\r\n                        while($preview.firstChild) {\r\n                            $preview.removeChild($preview.firstChild);\r\n                        }\r\n        \r\n                        $preview.style.display = 'none';\r\n                    }\r\n        \r\n                    if ($end) {\r\n                        $end.style.display = 'block';\r\n                    }\r\n                }\r\n                \r\n                self.emitter?.emit('end', self);\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    layoutObject.end = function() {\r\n        console.log('Executing Layout::end and Calling Region::end ', layoutObject);\r\n\r\n        /* Ask the layout to gracefully stop running now */\r\n        for (let layoutRegion of layoutObject.regions) {\r\n            layoutRegion.end();\r\n        }\r\n    };\r\n\r\n    layoutObject.stopAllMedia = function() {\r\n        console.log('Stopping all media . . .');\r\n        return new Promise(async (resolve) => {\r\n            for(var i = 0;i < layoutObject.regions.length;i++) {\r\n                var region = layoutObject.regions[i];\r\n                for(var j = 0;j < region.mediaObjects.length;j++) {\r\n                    var media = region.mediaObjects[j];\r\n                    await media.stop();\r\n                }\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    };\r\n\r\n    layoutObject.prepareLayout();\r\n\r\n    return layoutObject;\r\n}\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { createNanoEvents } from \"nanoevents\";\r\nimport { ILayout, OptionsType } from '../../Types/Layout';\r\nimport { initialRegion, IRegion, IRegionEvents } from '../../Types/Region';\r\nimport { IMedia } from '../../Types/Media';\r\nimport { getMediaId, nextId } from '../Generators';\r\nimport { platform } from '../Platform';\r\nimport { Media } from '../Media';\r\nimport {\r\n    TransitionElementOptions,\r\n    TransitionNameType,\r\n    compassPoints,\r\n    flyTransitionKeyframes,\r\n    transitionElement,\r\n} from '../Transitions';\r\nimport {IXlr} from \"../../Types/XLR\";\r\n\r\nexport default function Region(\r\n    layout: ILayout,\r\n    xml: Element,\r\n    regionId: string,\r\n    options: OptionsType,\r\n    xlr: IXlr,\r\n) {\r\n    const props = {\r\n        layout: layout,\r\n        xml: xml,\r\n        regionId: regionId,\r\n        options: options,\r\n    }\r\n    const emitter = createNanoEvents<IRegionEvents>();\r\n    let regionObject: IRegion = {\r\n        ...initialRegion,\r\n        ...props,\r\n    };\r\n\r\n    regionObject.prepareRegion = function() {\r\n        const self = regionObject;\r\n        const {layout, options} = self;\r\n        self.id = props.regionId;\r\n        self.options = {...platform, ...props.options};\r\n        self.containerName = `R-${self.id}-${nextId(self.options as OptionsType & IRegion[\"options\"])}`;\r\n        self.xml = props.xml;\r\n        self.mediaObjects = [];\r\n\r\n        self.sWidth = (self.xml) && Number(self.xml?.getAttribute('width')) * layout.scaleFactor;\r\n        self.sHeight = (self.xml) && Number(self.xml?.getAttribute('height')) * layout.scaleFactor;\r\n        self.offsetX = (self.xml) && Number(self.xml?.getAttribute('left')) * layout.scaleFactor;\r\n        self.offsetY = (self.xml) && Number(self.xml?.getAttribute('top')) * layout.scaleFactor;\r\n        self.zIndex = (self.xml) && Number(self.xml?.getAttribute('zindex'));\r\n        \r\n        const regionOptions = self.xml?.getElementsByTagName('options');\r\n\r\n        if (regionOptions) {\r\n            for (let _options of Array.from(regionOptions)) {\r\n                // Get options\r\n                const _regionOptions = _options.children;\r\n                for (let regionOption of Array.from(_regionOptions)) {\r\n                    self.options[regionOption.nodeName.toLowerCase()] = regionOption.textContent;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let $region = document.getElementById(self.containerName);\r\n        const $layout = document.getElementById(`${self.layout.containerName}`);\r\n\r\n        if ($region === null) {\r\n            $region = document.createElement('div');\r\n            $region.id = self.containerName;\r\n        }\r\n\r\n        ($layout) && $layout.appendChild($region);\r\n\r\n        /* Scale the Layout Container */\r\n        /* Add region styles */\r\n        $region.style.cssText = `\r\n            width: ${self.sWidth}px;\r\n            height: ${self.sHeight}px;\r\n            position: absolute;\r\n            left: ${self.offsetX}px;\r\n            top: ${self.offsetY}px;\r\n            z-index: ${Math.round(self.zIndex)};\r\n        `;\r\n        $region.className = 'region--item';\r\n\r\n        /* Parse region media objects */\r\n        const regionMediaItems = Array.from(self.xml.getElementsByTagName('media'));\r\n        self.totalMediaObjects = regionMediaItems.length;\r\n\r\n        Array.from(regionMediaItems).forEach((mediaXml, indx) => {\r\n            const mediaObj = Media(\r\n                self,\r\n                mediaXml?.getAttribute('id') || '',\r\n                mediaXml,\r\n                options as OptionsType & IRegion[\"options\"],\r\n                xlr,\r\n            );\r\n\r\n            mediaObj.index = indx;\r\n            self.mediaObjects.push(mediaObj);\r\n        });\r\n\r\n        self.prepareMediaObjects();\r\n    };\r\n\r\n    regionObject.finished = function() {\r\n        const self = regionObject;\r\n        console.log('Region::finished called . . . ', self.id);\r\n        // Mark as complete\r\n        self.complete = true;\r\n        self.layout.regions[regionObject.index] = regionObject;\r\n        self.layout.regionExpired();\r\n    };\r\n\r\n    regionObject.prepareMediaObjects = function() {\r\n        const self = regionObject;\r\n        let nextMediaIndex;\r\n\r\n        if (self.mediaObjects.length > 0) {\r\n\r\n            if (self.curMedia) {\r\n                self.oldMedia = self.curMedia;\r\n            } else {\r\n                self.oldMedia = undefined;\r\n            }\r\n\r\n            if (self.currentMediaIndex >= self.mediaObjects.length) {\r\n                self.currentMediaIndex = 0;\r\n            }\r\n\r\n            self.curMedia = self.mediaObjects[self.currentMediaIndex];\r\n\r\n            nextMediaIndex = self.currentMediaIndex + 1;\r\n\r\n            if (nextMediaIndex >= self.mediaObjects.length ||\r\n                (\r\n                    !Boolean(self.mediaObjects[nextMediaIndex]) &&\r\n                    self.mediaObjects.length === 1\r\n                )\r\n            ) {\r\n                nextMediaIndex = 0;\r\n            }\r\n\r\n            if (Boolean(self.mediaObjects[nextMediaIndex])) {\r\n                self.nxtMedia = self.mediaObjects[nextMediaIndex];\r\n            }\r\n\r\n            const $region = document.getElementById(`${self.containerName}`);\r\n            // Append available media to region DOM\r\n            if (self.curMedia) {\r\n                ($region) && $region.insertBefore(self.curMedia.html as Node, $region.lastElementChild);\r\n            }\r\n\r\n            if (self.nxtMedia) {\r\n                ($region) && $region.insertBefore(self.nxtMedia.html as Node, $region.lastElementChild);\r\n            }\r\n        }\r\n    };\r\n\r\n    regionObject.run = function() {\r\n        console.log('Called Region::run > ', regionObject.id);\r\n\r\n        if (regionObject.curMedia) {\r\n            regionObject.transitionNodes(regionObject.oldMedia, regionObject.curMedia);\r\n        }\r\n    };\r\n\r\n    regionObject.transitionNodes = function(oldMedia: IMedia | undefined, newMedia: IMedia | undefined) {\r\n        const self = regionObject;\r\n        let transOutDuration = 1;\r\n        let transOutDirection: compassPoints = 'E';\r\n\r\n        if (newMedia) {\r\n            if (oldMedia && Boolean(oldMedia.options['transoutduration'])) {\r\n                transOutDuration = Number(oldMedia.options.transoutduration);\r\n            }\r\n\r\n            if (oldMedia && Boolean(oldMedia.options['transoutdirection'])) {\r\n                transOutDirection = oldMedia.options.transoutdirection;\r\n            }\r\n    \r\n            let defaultTransOutOptions: TransitionElementOptions = {duration: transOutDuration};\r\n            let transOut = transitionElement('defaultOut', {duration: defaultTransOutOptions.duration});\r\n    \r\n            let transOutName: TransitionNameType | string;\r\n            if (oldMedia && Boolean(oldMedia.options['transout'])) {\r\n                transOutName = oldMedia.options['transout'];\r\n    \r\n                if (transOutName === 'fly') {\r\n                    transOutName = `${transOutName}Out`;\r\n                    defaultTransOutOptions.keyframes = flyTransitionKeyframes({\r\n                        trans: 'out',\r\n                        direction: transOutDirection,\r\n                        height: oldMedia.divHeight,\r\n                        width: oldMedia.divWidth,\r\n                    });\r\n                }\r\n                \r\n                transOut = transitionElement(transOutName as TransitionNameType, defaultTransOutOptions);\r\n            }\r\n            \r\n            const hideOldMedia = new Promise((resolve) => {\r\n                // Hide oldMedia\r\n                if (oldMedia) {\r\n                    const $oldMedia = document.getElementById(getMediaId(oldMedia));\r\n                    if ($oldMedia) {\r\n                        const removeOldMedia = () => {\r\n                            $oldMedia.style.setProperty('display', 'none');\r\n                            $oldMedia.remove();\r\n                        };\r\n\r\n                        let oldMediaAnimate: any;\r\n                        if (Boolean(oldMedia.options['transout'])) {\r\n                            oldMediaAnimate = $oldMedia.animate(transOut.keyframes, transOut.timing);\r\n                        }\r\n\r\n                        if (Boolean(oldMedia.options['transout']) && self.totalMediaObjects > 1) {\r\n                            if (transOutName === 'flyOut') {\r\n                                // Reset last item to original position and state\r\n                                oldMediaAnimate ? oldMediaAnimate.finished\r\n                                    .then(() => {\r\n                                        resolve(true);\r\n                                        oldMediaAnimate?.effect?.updateTiming({fill: 'none'});\r\n                                        removeOldMedia();\r\n                                    }) : undefined;\r\n                            } else {\r\n                                setTimeout(removeOldMedia, transOutDuration / 2);\r\n                                resolve(true);\r\n                            }\r\n                        } else {\r\n                            removeOldMedia();\r\n                            // Resolve this right away\r\n                            // As a result, the transition between two media object\r\n                            // seems like a cross-over\r\n                            resolve(true);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    \r\n            if (oldMedia) {\r\n                hideOldMedia.then((isDone) => {\r\n                    if (isDone) {\r\n                        newMedia.run();\r\n                    }\r\n                });\r\n            } else {\r\n                newMedia.run();\r\n            }\r\n        }\r\n    };\r\n\r\n    regionObject.playNextMedia = function() {\r\n        const self = regionObject;\r\n\r\n        /* The current media has finished running */\r\n        if (self.ended) {\r\n            return;\r\n        }\r\n\r\n        if (self.currentMediaIndex === self.mediaObjects.length - 1) {\r\n            self.finished();\r\n\r\n            if (self.layout.allEnded) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // When the region has completed and when currentMedia is html\r\n        // Then, preserve the currentMedia state\r\n        if (self.complete &&\r\n            self.curMedia?.render === 'html'\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        // When the region has completed and mediaObjects.length = 1\r\n        // and curMedia.loop = false, then put the media on\r\n        // its current state\r\n        if (self.complete && self.mediaObjects.length === 1 &&\r\n            self.curMedia?.render !== 'html' &&\r\n            self.curMedia?.mediaType === 'image' &&\r\n            !self.curMedia?.loop\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        self.currentMediaIndex = self.currentMediaIndex + 1;\r\n        self.prepareMediaObjects();\r\n\r\n        self.transitionNodes(self.oldMedia, self.curMedia);\r\n    };\r\n    \r\n    regionObject.end = function() {\r\n        const self = regionObject;\r\n        self.ending = true;\r\n        /* The Layout has finished running */\r\n        /* Do any region exit transition then clean up */\r\n        self.layout.regions[self.index] = self;\r\n\r\n        console.log('Calling Region::end ', self);\r\n        self.exitTransition();\r\n    };\r\n\r\n    regionObject.exitTransition = function() {\r\n        const self = regionObject;\r\n        /* TODO: Actually implement region exit transitions */\r\n        const $region = document.getElementById(`${self.containerName}`);\r\n\r\n        if ($region) {\r\n            $region.style.display = 'none';\r\n        }\r\n\r\n        console.log('Called Region::exitTransition ', self.id);\r\n\r\n        self.exitTransitionComplete();\r\n    };\r\n\r\n    regionObject.exitTransitionComplete = function() {\r\n        const self = regionObject;\r\n        console.log('Called Region::exitTransitionComplete ', self.id);\r\n        self.ended = true;\r\n        self.layout.regions[self.index] = self;\r\n        self.layout.regionEnded();\r\n    };\r\n\r\n    regionObject.on = function<E extends keyof IRegionEvents>(event: E, callback: IRegionEvents[E]) {\r\n        return emitter.on(event, callback);\r\n    };\r\n\r\n    regionObject.emitter = emitter;\r\n\r\n    regionObject.prepareRegion();\r\n\r\n    return regionObject;\r\n}","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {ILayout, InputLayoutType, OptionsType} from \"../Layout/Layout.types\";\r\nimport {platform} from \"../../Modules/Platform/Platform\";\r\n\r\nexport type PrepareLayoutsType = {\r\n    moveNext?: boolean;\r\n};\r\n\r\nexport enum ELayoutType {\r\n    CURRENT,\r\n    NEXT,\r\n}\r\n\r\nexport interface IXlr {\r\n    inputLayouts: InputLayoutType[],\r\n    config: OptionsType,\r\n    layouts: ILayout[],\r\n    currentLayoutIndex: number;\r\n    currentLayoutId: number | null;\r\n    currentLayout: ILayout | undefined;\r\n    nextLayout: ILayout | undefined;\r\n    bootstrap(): void;\r\n    init(): Promise<IXlr>;\r\n    playSchedules(xlr: IXlr): void;\r\n    prepareLayoutXlf(inputLayout: ILayout | undefined): Promise<ILayout>;\r\n    prepareLayouts(): Promise<IXlr>;\r\n}\r\n\r\nexport const initialXlr: IXlr = {\r\n    inputLayouts: [],\r\n    config: platform,\r\n    layouts: [],\r\n    currentLayoutIndex: 0,\r\n    currentLayoutId: null,\r\n    currentLayout: undefined,\r\n    nextLayout: undefined,\r\n    bootstrap() {\r\n    },\r\n    init() {\r\n        return Promise.resolve(<IXlr>{});\r\n    },\r\n    playSchedules() {\r\n    },\r\n    prepareLayoutXlf(inputLayout: ILayout | undefined): Promise<ILayout> {\r\n        return Promise.resolve(<ILayout>{});\r\n    },\r\n    prepareLayouts(): Promise<IXlr> {\r\n        return Promise.resolve(<IXlr>{});\r\n    }\r\n};\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {\r\n    Layout, getLayout, getXlf, initRenderingDOM\r\n} from \"./Modules/Layout\";\r\nimport { platform } from './Modules/Platform';\r\nimport {\r\n    ILayout, initialLayout, InputLayoutType, OptionsType,\r\n} from \"./Types/Layout\";\r\nimport { ELayoutType, initialXlr, IXlr } from './Types/XLR';\r\n\r\nexport default function XiboLayoutRenderer(\r\n    inputLayouts: InputLayoutType[],\r\n    options?: OptionsType,\r\n) {\r\n    const props = {\r\n        inputLayouts,\r\n        options,\r\n    }\r\n\r\n    const xlrObject: IXlr = {\r\n        ...initialXlr,\r\n        bootstrap() {\r\n            // Place to set configurations and initialize required props\r\n            const self = this;\r\n            self.inputLayouts = !Array.isArray(props.inputLayouts) ?\r\n                [props.inputLayouts] : props.inputLayouts;\r\n            self.config = JSON.parse(JSON.stringify({...platform, ...props.options}));\r\n        },\r\n        init() {\r\n            return new Promise<IXlr>((resolve) => {\r\n                const self = this;\r\n\r\n                // Prepare rendering DOM\r\n                const previewCanvas = document.querySelector('.preview-canvas');\r\n\r\n                initRenderingDOM(previewCanvas);\r\n\r\n                self.prepareLayouts().then((xlr) => {\r\n                    resolve(xlr);\r\n                });\r\n            });\r\n        },\r\n\r\n        playSchedules(xlr: IXlr) {\r\n            // Check if there's a current layout\r\n            if (xlr.currentLayout !== undefined) {\r\n                xlr.currentLayout.emitter?.emit('start', xlr.currentLayout);\r\n                xlr.currentLayout.run();\r\n            }\r\n        },\r\n\r\n        async prepareLayoutXlf(inputLayout: ILayout) {\r\n            const self = this;\r\n            // Compose layout props first\r\n            let newOptions: OptionsType = Object.assign({}, platform);\r\n\r\n            newOptions = {\r\n                ...newOptions,\r\n                ...props.options,\r\n            };\r\n\r\n            if (self.config.platform ==='CMS' &&\r\n                inputLayout && Boolean(inputLayout.layoutId)\r\n            ) {\r\n                newOptions.xlfUrl =\r\n                    newOptions.xlfUrl.replace(':layoutId', String(inputLayout.layoutId));\r\n            } else if (self.config.platform === 'chromeOS') {\r\n                newOptions.xlfUrl = inputLayout.path as string;\r\n            }\r\n\r\n            let layoutXlf: string;\r\n            let layoutXlfNode: Document | null;\r\n            if (inputLayout && inputLayout.layoutNode === null) {\r\n                layoutXlf = await getXlf(newOptions);\r\n\r\n                const parser = new window.DOMParser();\r\n                layoutXlfNode = parser.parseFromString(layoutXlf as string, 'text/xml');\r\n            } else {\r\n                layoutXlfNode = inputLayout && inputLayout.layoutNode;\r\n            }\r\n\r\n            return new Promise<ILayout>((resolve) => {\r\n                const xlrLayoutObj = initialLayout;\r\n                \r\n                xlrLayoutObj.id = Number(inputLayout.layoutId);\r\n                xlrLayoutObj.layoutId = Number(inputLayout.layoutId);\r\n                xlrLayoutObj.options = newOptions;\r\n\r\n                resolve(Layout(layoutXlfNode, newOptions, self, xlrLayoutObj));\r\n            });\r\n        },\r\n\r\n        async prepareLayouts() {\r\n            const self = this;\r\n            // Get layouts\r\n            const xlrLayouts = getLayout({xlr: self});\r\n\r\n            self.currentLayoutId = xlrLayouts.current?.layoutId as ILayout['layoutId'];\r\n\r\n            const layoutsXlf = () => {\r\n                let xlf = [];\r\n\r\n                xlf.push(xlrLayouts.current);\r\n\r\n                if (xlrLayouts.current?.layoutId !== xlrLayouts.next?.layoutId) {\r\n                    xlf.push(xlrLayouts.next);\r\n                }\r\n\r\n                return xlf.reduce((coll: Promise<ILayout>[], item) => {\r\n                    return [\r\n                        ...coll,\r\n                        self.prepareLayoutXlf(item),\r\n                    ];\r\n                }, []);\r\n            };\r\n            const layouts = await Promise.all<Array<Promise<ILayout>>>(layoutsXlf());\r\n\r\n            return new Promise<IXlr>((resolve) => {\r\n                self.layouts = layouts;\r\n                self.currentLayout = self.layouts[0];\r\n\r\n                if (Boolean(self.layouts[1])) {\r\n                    self.nextLayout = self.layouts[1];\r\n                } else {\r\n                    // Use current layout as next layout if only one layout is available\r\n                    self.nextLayout = self.layouts[0];\r\n                }\r\n\r\n                self.currentLayoutIndex = xlrLayouts.currentLayoutIndex;\r\n                self.layouts[self.currentLayoutIndex] = self.currentLayout;\r\n\r\n                resolve(self);\r\n            });\r\n        },\r\n    }\r\n\r\n    xlrObject.bootstrap();\r\n\r\n    return xlrObject;\r\n}\r\n"],"names":["createNanoEvents","e","emit","event","_len","arguments","length","args","Array","_key","i","callbacks","this","events","apply","on","cb","_this$events","_this","push","_this$events$event","filter","platform","getResourceUrl","xlfUrl","layoutBackgroundDownloadUrl","layoutPreviewUrl","libraryDownloadUrl","loaderUrl","idCounter","inPreview","appHost","initialLayout","id","layoutId","sw","sh","xw","xh","zIndex","scaleFactor","sWidth","sHeight","offsetX","offsetY","bgColor","bgImage","bgId","containerName","layoutNode","regionMaxZIndex","ready","regionObjects","drawer","allExpired","regions","actions","options","done","allEnded","path","prepareLayout","parseXlf","run","callback","regionExpired","end","regionEnded","stopAllMedia","Promise","resolve","nextId","getMediaId","mediaType","t","_ref","mediaId","capitalizeStr","inputStr","String","charAt","toUpperCase","substring","async","preloadMediaBlob","src","type","o","n","_t16","_regeneratorRuntime","wrap","_callee10$","_context10","prev","next","fetch","mode","res","blob","Blob","arrayBuffer","data","audioFileType","getFileExt","abrupt","console","log","URL","createObjectURL","stop","_callee10","_r","filename","filenameArr","split","str","validAudioTypes","mp3","wav","ogg","Boolean","initialRegion","layout","regionId","xml","mediaObjects","mediaObjectsActions","currentMedia","complete","ending","ended","oneMedia","oldMedia","undefined","curMedia","nxtMedia","currentMediaIndex","totalMediaObjects","index","prepareRegion","playNextMedia","transitionNodes","finished","exitTransition","exitTransitionComplete","prepareMediaObjects","initialMedia","region","html","iframe","iframeName","render","attachedAudio","singlePlay","timeoutId","setTimeout","checkIframeStatus","loadIframeOnRun","tempSrc","schemaVersion","duration","useDuration","fileId","uri","divWidth","divHeight","url","loop","init","defaultTrans","c","trans","keyframes","display","timing","fadeOutElem","opacity","fill","flyInElem","keyframeOptions","direction","flyInKeyframes","flyInTiming","from","_objectSpread","to","flyOutElem","y","flyOutKeyframes","flyOutTiming","transitionElement","f","transition","fadeIn","fadeOut","flyIn","flyOut","defaultIn","defaultOut","flyTransitionKeyframes","params","opacityAttr","source","top","concat","height","left","width","Media","xlr","props","mediaTimer","mediaTimeCount","emitter","mediaObject","startMediaTimer","media","setInterval","_e$emitter","$videoMedia","document","getElementById","onloadstart","onloadeddata","readyState","oncanplay","videoPlayPromise","play","then","error","muted","onplaying","ondurationchange","onended","_e$emitter2","VideoMedia","$audioMedia","$playBtn","remove","audioPlayPromise","catch","_t$parentNode","name","createElement","classList","add","textContent","addEventListener","parentNode","insertBefore","nextSibling","_e$emitter3","AudioMedia","clearInterval","_e$xml","_e$xml2","_e$xml3","_e$xml4","_e$xml5","self","getAttribute","parseInt","$mediaIframe","mediaOptions","getElementsByTagName","_i","_Array$from","_options","_mediaOptions","children","_i2","_Array$from2","mediaOption","nodeName","toLowerCase","showfullscreen","scrolling","style","cssText","$mediaId","$media","Audio","className","resourceUrlParams","config","regionOptions","tmpUrl","resourceUrl","replace","cmsUrl","composeResourceUrlByPlatform","scaletype","align","valign","preload","mute","objectFit","playsInline","autoplay","durationisperitem","regex","RegExp","_asyncToGenerator","mark","_callee2","_callee2$","_context2","_callee$","_context","json","err","_callee","fetchJSON","exec","transin","transinduration","transInDuration","Number","fadeInTrans","animate","transInDirection","transindirection","defaultTransInOptions","transIn","transInName","getNewMedia","$region","lastElementChild","_callee4","_e$emitter4","_callee4$","_context4","isCMS","setProperty","rej","reader","FileReader","onloadend","result","onerror","readAsDataURL","_context3","_callee3","getDataBlob","call","t1","t5","innerHTML","appendChild","iframeStyles","showCurrentMedia","_context5","_callee5","playAgainClickHandle","x","ev","preventDefault","history","go","getLayout","_t10","_currentLayout","_nextLayout","inputLayouts","currentLayout","nextLayout","currentLayoutIndex","currLayoutIndx","hasLayout","nextLayoutIndex","activeLayout","nextLayoutTemp","layoutsInput","layoutIndexes","reduce","a","b","indx","getIndexByLayoutId","layouts","current","Layout","$layout","prepareLayouts","parent","playSchedules","layoutObject","$layoutContainer","$splashScreen","_o$layoutNode","_o$layoutNode2","_o$layoutNode3","_o$layoutNode4","_o$layoutNode5","_o$layoutNode6","$screen","outline","offsetWidth","offsetHeight","firstElementChild","Math","min","round","abs","position","indexOf","bgImageUrl","composeBgUrlByPlatform","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","backgroundColor","currentLayoutId","layoutRegions","forEach","regionXml","regionObj","regionObject","_e$xml6","_e$xml7","_e$xml8","_e$xml9","_e$xml10","_e$xml11","_i3","_Array$from3","_regionOptions","_i4","_Array$from4","regionOption","l","regionMediaItems","mediaXml","mediaObj","nextMediaIndex","newMedia","transOutDuration","transOutDirection","transoutduration","transoutdirection","transOutName","defaultTransOutOptions","transOut","transout","hideOldMedia","$oldMedia","removeOldMedia","oldMediaAnimate","effect","updateTiming","isDone","_e$curMedia","_e$curMedia2","_e$curMedia3","_e$curMedia4","Region","_iterator","_createForOfIteratorHelper","layoutRegion","s","_step","_e$emitter5","$end","$preview","firstChild","removeChild","_iterator2","_step2","_callee6$","_context6","j","_callee6","_x5","_ref7","ELayoutType","CURRENT","NEXT","initialXlr","bootstrap","prepareLayoutXlf","inputLayout","xlrObject","isArray","JSON","parse","stringify","targetContainer","_targetContainer","previewPlayer","previewScreen","endPlay","playAgainLink","removeEventListener","body","querySelector","initRenderingDOM","_this2","_callee8","r","_e5","_callee8$","_context8","newOptions","Object","assign","layoutOptions","apiHost","window","location","origin","_context7","text","sent","_callee7","getXlf","layoutXlf","parser","DOMParser","layoutXlfNode","parseFromString","xlrLayoutObj","xlrLayouts","_context9","all","_t$current2","_t$next","xlf","coll","item","_toConsumableArray","layoutsXlf","_callee9"],"mappings":"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","x_google_ignoreList":[0]}