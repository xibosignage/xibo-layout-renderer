{"version":3,"file":"xibo-layout-renderer.min.js","sources":["../node_modules/nanoevents/index.js","../../src/Modules/Platform/Platform.ts","../../src/Types/Layout/Layout.types.ts","../../src/Modules/Generators/Generators.ts","../../src/Types/Region/Region.types.ts","../../src/Types/Media/Media.types.ts","../../src/Modules/Transitions/Transitions.ts","../../src/Modules/Media/Media.ts","../../src/Modules/Media/VideoMedia.ts","../../src/Modules/Media/AudioMedia.ts","../../src/Modules/Layout/Layout.ts","../../src/Types/XLR/XLR.types.ts","../../src/Modules/Region/Region.ts","../../src/xibo-layout-renderer.ts"],"sourcesContent":["export let createNanoEvents = () => ({\n  emit(event, ...args) {\n    for (\n      let i = 0,\n        callbacks = this.events[event] || [],\n        length = callbacks.length;\n      i < length;\n      i++\n    ) {\n      callbacks[i](...args)\n    }\n  },\n  events: {},\n  on(event, cb) {\n    ;(this.events[event] ||= []).push(cb)\n    return () => {\n      this.events[event] = this.events[event]?.filter(i => cb !== i)\n    }\n  }\n})\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {OptionsType} from \"../../Types/Layout\";\r\n\r\nconst RESOURCE_URL = '/playlist/widget/resource/:regionId/:id';\r\nconst XLF_URL = '/layout/xlf/:layoutId';\r\nconst LAYOUT_BACKGROUND_DOWNLOAD_URL = '/layout/background/:id';\r\nconst LAYOUT_PREVIEW_URL = '/layout/preview/[layoutCode]';\r\nconst LIBRARY_DOWNLOAD_URL = '/library/download/:id';\r\nconst LOADER_URL = '/theme/default/img/loader.gif';\r\n\r\nexport const platform: OptionsType = {\r\n    getResourceUrl: RESOURCE_URL,\r\n    xlfUrl: XLF_URL,\r\n    layoutBackgroundDownloadUrl: LAYOUT_BACKGROUND_DOWNLOAD_URL,\r\n    layoutPreviewUrl: LAYOUT_PREVIEW_URL,\r\n    libraryDownloadUrl: LIBRARY_DOWNLOAD_URL,\r\n    loaderUrl: LOADER_URL,\r\n    idCounter: 0,\r\n    inPreview: true,\r\n    appHost: null,\r\n    platform: 'CMS',\r\n};\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {DefaultEvents, Emitter, Unsubscribe} from \"nanoevents\";\r\nimport {IRegion} from \"../Region\";\r\nimport {platform} from \"../../Modules/Platform\";\r\nimport {ILayoutEvents} from \"../../Modules/Layout\";\r\nimport {IXlr} from \"../XLR\";\r\n\r\nexport type InputLayoutType = {\r\n    layoutId: number | null;\r\n    path?: string;\r\n};\r\n\r\nexport type OptionsType = {\r\n    xlfUrl: string;\r\n    getResourceUrl: string;\r\n    layoutBackgroundDownloadUrl: string;\r\n    layoutPreviewUrl: string;\r\n    libraryDownloadUrl: string;\r\n    loaderUrl: string;\r\n    idCounter: number;\r\n    inPreview: boolean;\r\n    appHost?: string | null;\r\n    platform: 'CMS' | 'chromeOS';\r\n    config?: {\r\n        cmsUrl: string | null;\r\n        schemaVersion: number;\r\n        cmsKey: string | null;\r\n        hardwareKey: string | null;\r\n    };\r\n};\r\n\r\nexport interface ILayout {\r\n    id: number | null;\r\n    layoutId: number | null;\r\n    sw: number | null;\r\n    sh: number | null;\r\n    xw: number | null;\r\n    xh: number | null;\r\n    zIndex: number | null;\r\n    scaleFactor: number;\r\n    sWidth: number;\r\n    sHeight: number;\r\n    offsetX: number;\r\n    offsetY: number;\r\n    bgColor: string;\r\n    bgImage: string;\r\n    bgId: string;\r\n    containerName: string;\r\n    layoutNode: Document | null;\r\n    regionMaxZIndex: number;\r\n    ready: boolean;\r\n    regionObjects: IRegion[];\r\n    drawer: String[];\r\n    allExpired: boolean;\r\n    regions: IRegion[];\r\n    actions: String[];\r\n    options: OptionsType;\r\n    done: boolean;\r\n    allEnded: boolean;\r\n    path?: string;\r\n    prepareLayout(): void;\r\n    parseXlf(): void;\r\n    run(): void;\r\n    emitter?: Emitter<DefaultEvents>;\r\n    on<E extends keyof ILayoutEvents>(event: E, callback: ILayoutEvents[E]): Unsubscribe;\r\n    regionExpired(): void;\r\n    end(): void;\r\n    regionEnded(): void;\r\n    stopAllMedia(): Promise<void>;\r\n}\r\n\r\nexport const initialLayout: ILayout = {\r\n    id: null,\r\n    layoutId: null,\r\n    sw: 0,\r\n    sh: 0,\r\n    xw: 0,\r\n    xh: 0,\r\n    zIndex: 0,\r\n    scaleFactor: 1,\r\n    sWidth: 0,\r\n    sHeight: 0,\r\n    offsetX: 0,\r\n    offsetY: 0,\r\n    bgColor: '',\r\n    bgImage: '',\r\n    bgId: '',\r\n    containerName: '',\r\n    layoutNode: null,\r\n    regionMaxZIndex: 0,\r\n    ready: false,\r\n    regionObjects: [],\r\n    drawer: [],\r\n    allExpired: false,\r\n    regions: [],\r\n    actions: [],\r\n    options: platform,\r\n    done: false,\r\n    allEnded: false,\r\n    path: '',\r\n    prepareLayout() {\r\n    },\r\n    parseXlf() {\r\n    },\r\n    run() {\r\n    },\r\n    on<E extends keyof ILayoutEvents>(event: E, callback: ILayoutEvents[E]): Unsubscribe {\r\n        return <Unsubscribe>{};\r\n    },\r\n    regionExpired() {\r\n    },\r\n    end() {\r\n    },\r\n    regionEnded() {\r\n    },\r\n    stopAllMedia() {\r\n        return Promise.resolve();\r\n    },\r\n};\r\n\r\nexport type GetLayoutParamType = {\r\n    xlr: IXlr;\r\n    moveNext?: boolean;\r\n}\r\n\r\nexport type GetLayoutType = {\r\n    currentLayoutIndex: number;\r\n    inputLayouts: InputLayoutType[];\r\n    current: ILayout | undefined;\r\n    next: ILayout | undefined;\r\n}\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { IMedia } from '../../Types/Media';\r\nimport {InputLayoutType, OptionsType} from \"../../Types/Layout\";\r\n\r\nexport function nextId(options: { idCounter: number; }) {\r\n    if (options.idCounter > 500) {\r\n        options.idCounter = 0;\r\n    }\r\n\r\n    options.idCounter = options.idCounter + 1;\r\n    return options.idCounter;\r\n}\r\n\r\nexport const getMediaId = ({mediaType, containerName}: IMedia) => {\r\n    let mediaId = containerName;\r\n\r\n    if (mediaType === 'video') {\r\n        mediaId = mediaId + '-vid';\r\n    } else if (mediaType === 'audio') {\r\n        mediaId = mediaId + '-aud';\r\n    }\r\n\r\n    return mediaId;\r\n};\r\n\r\nexport const capitalizeStr = (inputStr: string) => {\r\n    if (inputStr === null) {\r\n        return '';\r\n    }\r\n\r\n    return String(inputStr).charAt(0).toUpperCase() + String(inputStr).substring(1);\r\n};\r\n\r\nexport async function getDataBlob(src: string) {\r\n    return fetch(src, {mode: 'no-cors'})\r\n        .then((res) => res.blob())\r\n        .then((blob) => new Promise((res, rej) => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onloadend = () => res(reader.result);\r\n            reader.onerror = rej;\r\n            reader.readAsDataURL(blob);\r\n        }));\r\n}\r\n\r\nexport async function preloadMediaBlob(src: string, type: 'video' | 'audio' | 'image') {\r\n    const res = await fetch(src, {mode: 'no-cors'});\r\n    let blob: Blob | MediaSource = new Blob();\r\n\r\n    if (type === 'image') {\r\n        blob = new Blob()\r\n    } else if (type === 'video') {\r\n        blob = await res.blob();\r\n    } else if (type === 'audio') {\r\n        const data = await res.arrayBuffer();\r\n        blob = new Blob([data], { type: audioFileType(getFileExt(src)) })\r\n    }\r\n\r\n    console.log({blob})\r\n    return URL.createObjectURL(blob);\r\n}\r\n\r\nexport async function fetchJSON(url: string) {\r\n    return fetch(url)\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport function getFileExt(filename: string) {\r\n    const filenameArr = String(filename).split('.');\r\n\r\n    return filenameArr[filenameArr.length - 1];\r\n}\r\n\r\nexport function audioFileType(str: string) {\r\n    const validAudioTypes = {\r\n        'mp3': 'audio/mp3',\r\n        'wav': 'audio/wav',\r\n        'ogg': 'audio/ogg',\r\n    };\r\n\r\n    if (Boolean(validAudioTypes[str as 'mp3' | 'wav' | 'ogg'])) {\r\n        return validAudioTypes[str as 'mp3' | 'wav' | 'ogg'];\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nexport function composeResourceUrlByPlatform(platform: OptionsType['platform'], params: any) {\r\n    let resourceUrl = params.regionOptions.getResourceUrl\r\n        .replace(\":regionId\", params.regionId)\r\n        .replace(\":id\", params.mediaId) +\r\n        '?preview=1&layoutPreview=1';\r\n\r\n    if (platform === 'chromeOS') {\r\n        resourceUrl = params.cmsUrl +\r\n            '/chromeOS/resource/' +\r\n            params.fileId +\r\n            '?saveAs=' + params.uri;\r\n    } else if (!Boolean(params['mediaType'])) {\r\n        resourceUrl += '&scale_override=' + params.scaleFactor;\r\n    }\r\n\r\n    return resourceUrl;\r\n}\r\n\r\nexport function composeBgUrlByPlatform(\r\n    platform: OptionsType['platform'],\r\n    params: any\r\n) {\r\n    let bgImageUrl = params.layoutBackgroundDownloadUrl.replace(\":id\", (params.layout.id as unknown) as string) +\r\n        '?preview=1&width=' + params.layout.sWidth +\r\n        '&height=' + params.layout.sHeight +\r\n        '&dynamic&proportional=0';\r\n\r\n    if (platform === 'chromeOS') {\r\n        bgImageUrl = params.cmsUrl +\r\n            '/chromeOS/resource/' + params.layout.id +\r\n            '?saveAs=' + params.layout.bgImage;\r\n    }\r\n\r\n    return bgImageUrl;\r\n}\r\n\r\ntype LayoutIndexType = {\r\n    [k: string]: InputLayoutType & {\r\n        index: number;\r\n    }\r\n}\r\n\r\nexport function getIndexByLayoutId(layoutsInput: InputLayoutType[], layoutId?: number | null) {\r\n    let layoutIndexes = layoutsInput.reduce((a: LayoutIndexType, b, indx) => {\r\n        a[Number(b.layoutId)] = {\r\n            ...b,\r\n            index: indx\r\n        };\r\n\r\n        return a;\r\n    }, {});\r\n\r\n    if (layoutId === null || !layoutId) {\r\n        return layoutIndexes;\r\n    }\r\n\r\n    return layoutIndexes[layoutId];\r\n}\r\n\r\nexport function isEmpty(input: any) {\r\n    return !Boolean(input) || String(input).length === 0;\r\n}\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { DefaultEvents, Emitter, Unsubscribe } from \"nanoevents\";\r\nimport {ILayout, initialLayout, OptionsType} from \"../Layout/Layout.types\";\r\nimport {platform} from \"../../Modules/Platform/Platform\";\r\nimport {IMedia} from \"../Media/Media.types\";\r\n\r\nexport interface IRegionEvents {\r\n    start: (layout: IRegion) => void;\r\n    end: (layout: IRegion) => void;\r\n}\r\n\r\nexport interface IRegion {\r\n    layout: ILayout;\r\n    id: string;\r\n    regionId: string;\r\n    xml: null | Element;\r\n    mediaObjects: IMedia[];\r\n    mediaObjectsActions: String[];\r\n    currentMedia: number;\r\n    complete: boolean;\r\n    containerName: string;\r\n    ending: boolean;\r\n    ended: boolean;\r\n    oneMedia: boolean;\r\n    oldMedia: IMedia | undefined;\r\n    curMedia: IMedia | undefined;\r\n    nxtMedia: IMedia | undefined;\r\n    currentMediaIndex: number;\r\n    totalMediaObjects: number;\r\n    ready: boolean;\r\n    options: {\r\n        [k: string]: any;\r\n    };\r\n    sWidth: number;\r\n    sHeight: number;\r\n    offsetX: number;\r\n    offsetY: number;\r\n    zIndex: number;\r\n    index: number;\r\n    emitter?: Emitter<DefaultEvents>;\r\n    prepareRegion(): void;\r\n    playNextMedia(): void;\r\n    transitionNodes(oldMedia: IMedia | undefined, newMedia: IMedia | undefined): void;\r\n    finished(): void;\r\n    run(): void;\r\n    end(): void;\r\n    exitTransition(): void;\r\n    exitTransitionComplete(): void;\r\n    on<E extends keyof IRegionEvents>(event: E, callback: IRegionEvents[E]): Unsubscribe;\r\n    prepareMediaObjects(): void;\r\n}\r\n\r\nexport const initialRegion: IRegion = {\r\n    layout: initialLayout,\r\n    id: '',\r\n    regionId: '',\r\n    xml: null,\r\n    mediaObjects: [],\r\n    mediaObjectsActions: [],\r\n    currentMedia: -1,\r\n    complete: false,\r\n    containerName: '',\r\n    ending: false,\r\n    ended: false,\r\n    oneMedia: false,\r\n    oldMedia: undefined,\r\n    curMedia: undefined,\r\n    nxtMedia: undefined,\r\n    currentMediaIndex: 0,\r\n    totalMediaObjects: 0,\r\n    ready: false,\r\n    options: {},\r\n    sWidth: 0,\r\n    sHeight: 0,\r\n    offsetX: 0,\r\n    offsetY: 0,\r\n    zIndex: 0,\r\n    index: -1,\r\n    prepareRegion() {\r\n    },\r\n    playNextMedia() {\r\n    },\r\n    transitionNodes() {\r\n    },\r\n    finished() {\r\n    },\r\n    run() {\r\n    },\r\n    end() {\r\n    },\r\n    exitTransition() {},\r\n    exitTransitionComplete() {},\r\n    on<E extends keyof IRegionEvents>(event: E, callback: IRegionEvents[E]): Unsubscribe {\r\n        return <Unsubscribe>{};\r\n    },\r\n    prepareMediaObjects() {\r\n    },\r\n};\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { DefaultEvents, Emitter, Unsubscribe } from \"nanoevents\";\r\nimport { IMediaEvents } from \"../../Modules/Media/Media\";\r\nimport {initialRegion, IRegion} from \"../Region/Region.types\";\r\n\r\nexport interface IMedia {\r\n    region: IRegion;\r\n    xml: null | Element;\r\n    id: string;\r\n    idCounter: number;\r\n    index: number;\r\n    containerName: string;\r\n    html: null | HTMLElement;\r\n    iframe: null | HTMLIFrameElement;\r\n    iframeName: string;\r\n    mediaType: string;\r\n    render: string;\r\n    attachedAudio: boolean;\r\n    singlePlay: boolean;\r\n    timeoutId: ReturnType<typeof setTimeout>;\r\n    ready: boolean;\r\n    checkIframeStatus: boolean;\r\n    loadIframeOnRun: boolean;\r\n    tempSrc: string;\r\n    finished: boolean;\r\n    schemaVersion: string;\r\n    type: string;\r\n    duration: number;\r\n    useDuration: boolean;\r\n    fileId: string;\r\n    uri: string;\r\n    options: {\r\n        [k: string]: any;\r\n    };\r\n    divWidth: number;\r\n    divHeight: number;\r\n    url: string | null;\r\n    loop: boolean;\r\n    emitter?: Emitter<DefaultEvents>;\r\n    run(): void;\r\n    init(): void;\r\n    stop(): Promise<void>;\r\n    on<E extends keyof IMediaEvents>(event: E, callback: IMediaEvents[E]): Unsubscribe;\r\n}\r\n\r\nexport const initialMedia: IMedia = {\r\n    region: initialRegion,\r\n    xml: null,\r\n    id: '',\r\n    index: 0,\r\n    idCounter: 0,\r\n    containerName: '',\r\n    html: null,\r\n    iframe: null,\r\n    iframeName: '',\r\n    mediaType: '',\r\n    render: 'html',\r\n    attachedAudio: false,\r\n    singlePlay: false,\r\n    timeoutId: setTimeout(() => {}, 100),\r\n    ready: true,\r\n    checkIframeStatus: false,\r\n    loadIframeOnRun: false,\r\n    tempSrc: '',\r\n    finished: false,\r\n    schemaVersion: '1',\r\n    type: '',\r\n    duration: 0,\r\n    useDuration: Boolean(0),\r\n    fileId: '',\r\n    uri: '',\r\n    options: {},\r\n    divWidth: 0,\r\n    divHeight: 0,\r\n    url: null,\r\n    loop: false,\r\n    run() {},\r\n    init() {},\r\n    stop() {\r\n        return Promise.resolve();\r\n    },\r\n    on<E extends keyof IMediaEvents>(event: E, callback: IMediaEvents[E]): Unsubscribe {\r\n        return <Unsubscribe>{};\r\n    },\r\n}\r\n","/*\n * Copyright (C) 2024 Xibo Signage Ltd\n *\n * Xibo - Digital Signage - https://www.xibosignage.com\n *\n * This file is part of Xibo.\n *\n * Xibo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * Xibo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\n */\nexport const defaultTrans = (duration: number, trans: 'in' | 'out') => {\n    const defaultKeyframes = [\n        { display: trans === 'in' ? 'none' : 'block' },\n        { display: trans === 'out' ? 'none' : 'block' },\n    ];\n    const defaultTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n    };\n\n    return {\n        keyframes: defaultKeyframes,\n        timing: defaultTiming,\n    };\n};\n\nexport const fadeInElem = (duration: number) => {\n    const fadeInKeyframes = [\n        { opacity: 0 },\n        { opacity: 1 },\n    ];\n    const fadeInTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n        fill: 'forwards',\n    };\n\n    return {\n        keyframes: fadeInKeyframes,\n        timing: fadeInTiming,\n    }\n};\n\nexport const fadeOutElem = (duration: number) => {\n    const fadeOutKeyframes = [\n        { opacity: 1 },\n        { opacity: 0, zIndex: -1 },\n    ];\n    const fadeOutTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n        fill: 'forwards',\n    };\n\n    return {\n        keyframes: fadeOutKeyframes,\n        timing: fadeOutTiming,\n    }\n};\n\nexport type KeyframeOptionsType = {\n    from: {\n        [k: string]: any,\n    },\n    to: {\n        [k: string]: any,\n    },\n}\n\nexport const flyInElem = (duration: number, keyframeOptions: KeyframeOptionsType | undefined, direction?: string) => {\n    const flyInKeyframes = [\n        {opacity: 0},\n        {opacity: 1, zIndex: 1},\n    ];\n    const flyInTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n        fill: 'forwards',\n    };\n\n    if (keyframeOptions && Boolean(keyframeOptions.from)) {\n        flyInKeyframes[0] = {...keyframeOptions.from, ...flyInKeyframes[0]};\n    }\n\n    if (keyframeOptions && Boolean(keyframeOptions.to)) {\n        flyInKeyframes[1] = {...keyframeOptions.to, ...flyInKeyframes[1]};\n    }\n\n    return {\n        keyframes: flyInKeyframes,\n        timing: flyInTiming,\n    };\n};\n\nexport const flyOutElem = (duration: number, keyframeOptions: KeyframeOptionsType | undefined, direction?: string) => {\n    const flyOutKeyframes: Keyframe[] = [\n        {opacity: 1},\n        {opacity: 0, zIndex: -1},\n    ];\n    const flyOutTiming: number | KeyframeAnimationOptions | undefined = {\n        duration,\n        fill: 'forwards',\n    };\n\n    if (keyframeOptions && Boolean(keyframeOptions.from)) {\n        flyOutKeyframes[0] = {...keyframeOptions.from, ...flyOutKeyframes[0]};\n    }\n\n    if (keyframeOptions && Boolean(keyframeOptions.to)) {\n        flyOutKeyframes[1] = {...keyframeOptions.to, ...flyOutKeyframes[1]};\n    }\n\n    return {\n        keyframes: flyOutKeyframes,\n        timing: flyOutTiming,\n    };\n};\n\nexport type TransitionNameType = 'fadeIn' | 'fadeOut' | 'flyIn' | 'flyOut' | 'defaultIn' | 'defaultOut';\n\nexport type TransitionElementOptions = {\n    duration: number;\n    keyframes?: KeyframeOptionsType;\n    direction?: string;\n};\n\nexport const transitionElement = (transition: TransitionNameType, options: TransitionElementOptions) => {\n    const transitions = {\n        fadeIn: fadeInElem(options.duration),\n        fadeOut: fadeOutElem(options.duration),\n        flyIn: flyInElem(options.duration, options.keyframes, options.direction),\n        flyOut: flyOutElem(options.duration, options.keyframes, options.direction),\n        defaultIn: defaultTrans(options.duration, 'in'),\n        defaultOut: defaultTrans(options.duration, 'out'),\n    };\n\n    return transitions[transition];\n};\n\nexport type compassPoints = 'N' | 'NE' | 'E' | 'SE' | 'S' | 'SW' | 'W' | 'NW';\n\nexport type flyTransitionParams = {\n    trans: 'in' | 'out';\n    direction: compassPoints;\n    height: string | number;\n    width: string | number;\n};\n\nexport const flyTransitionKeyframes = (params: flyTransitionParams): KeyframeOptionsType => {\n    const keyframes = {\n        from: {},\n        to: {},\n    };\n    const opacityAttr = (source: 'from' | 'to') => {\n        if (source === 'from') {\n            return params.trans === 'in' ? 0 : 1;\n        }\n        \n        return params.trans === 'out' ? 1 : 0;\n    };\n\n    switch (params.direction) {\n        case 'N':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `${params.height}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `-${params.height}px`,\n            };\n            break;\n        case 'NE':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `${params.height}px` : 0,\n                left: params.trans === 'in' ? `-${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `-${params.height}px`,\n                left: params.trans === 'in' ? 0 : `${params.width}px`,\n            };\n            break;\n        case 'E':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                left: params.trans === 'in' ? `-${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                left: params.trans === 'in' ? 0 : `${params.width}px`,\n            };\n            break;\n        case 'SE':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `-${params.height}px` : 0,\n                left: params.trans === 'in' ? `-${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `${params.height}px`,\n                left: params.trans === 'in' ? 0 : `${params.width}px`,\n            };\n            break;\n        case 'S':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `-${params.height}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `${params.height}px`,\n            };\n            break;\n        case 'SW':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `-${params.height}px` : 0,\n                left: params.trans === 'in' ? `${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `${params.height}px`,\n                left: params.trans === 'in' ? 0 : `-${params.width}px`,\n            };\n            break;\n        case 'W':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                left: params.trans === 'in' ? `${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                left: params.trans === 'in' ? 0 : `-${params.width}px`,\n            };\n            break;\n        case 'NW':\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `${params.height}px` : 0,\n                left: params.trans === 'in' ? `${params.width}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `-${params.height}px`,\n                left: params.trans === 'in' ? 0 : `-${params.width}px`,\n            };\n            break;\n        default:\n            keyframes.from = {\n                opacity: opacityAttr('from'),\n                top: params.trans === 'in' ? `${params.height}px` : 0,\n            };\n            keyframes.to = {\n                opacity: opacityAttr('to'),\n                top: params.trans === 'in' ? 0 : `-${params.height}px`,\n            };\n            break;\n    }\n\n    return keyframes;\n};\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { createNanoEvents } from \"nanoevents\";\r\nimport { OptionsType } from '../../Types/Layout';\r\nimport { IRegion } from '../../Types/Region';\r\nimport { IMedia, initialMedia } from '../../Types/Media';\r\nimport { fetchJSON, getMediaId, nextId, preloadMediaBlob } from '../Generators';\r\nimport { TransitionElementOptions, compassPoints, flyTransitionKeyframes, transitionElement } from '../Transitions';\r\nimport VideoMedia from './VideoMedia';\r\nimport AudioMedia from './AudioMedia';\r\nimport {composeResourceUrlByPlatform, getDataBlob} from \"../Generators/Generators\";\r\nimport {IXlr} from \"../../Types/XLR\";\r\n\r\nexport interface IMediaEvents {\r\n    start: (media: IMedia) => void;\r\n    end: (media: IMedia) => void;\r\n}\r\n\r\nexport default function Media(\r\n    region: IRegion,\r\n    mediaId: string,\r\n    xml: Element,\r\n    options: OptionsType,\r\n    xlr: IXlr,\r\n) {\r\n    const props = {\r\n        region: region,\r\n        mediaId: mediaId,\r\n        xml: xml,\r\n        options: options,\r\n    };\r\n    let mediaTimer: string | number | NodeJS.Timeout | null | undefined = null;\r\n    let mediaTimeCount = 0;\r\n    const emitter = createNanoEvents<IMediaEvents>();\r\n    const mediaObject: IMedia = {\r\n        ...initialMedia,\r\n        ...props,\r\n    };\r\n    const startMediaTimer = (media: IMedia) => {\r\n        mediaTimer = setInterval(() => {\r\n            mediaTimeCount++;\r\n            if (mediaTimeCount > media.duration) {\r\n                media.emitter?.emit('end', media);\r\n            }\r\n        }, 1000);\r\n        console.log('Showing Media ' + media.id + ' for ' + media.duration + 's of Region ' + media.region.regionId);\r\n    };\r\n\r\n    emitter.on('start', function(media) {\r\n        if (media.mediaType === 'video') {\r\n            VideoMedia(media).init();\r\n\r\n            if (media.duration > 0) {\r\n                startMediaTimer(media);\r\n            }\r\n        } else if (media.mediaType === 'audio') {\r\n            AudioMedia(media).init();\r\n            if (media.duration > 0) {\r\n                startMediaTimer(media);\r\n            }\r\n        } else {\r\n            startMediaTimer(media);\r\n        }\r\n    });\r\n\r\n    emitter.on('end', function(media) {\r\n        if (mediaTimer) {\r\n            clearInterval(mediaTimer);\r\n            mediaTimeCount = 0;\r\n        }\r\n\r\n        media.region.playNextMedia();\r\n    });\r\n\r\n    mediaObject.init = function() {\r\n        const self = mediaObject;\r\n        self.id = props.mediaId;\r\n        self.fileId = self.xml?.getAttribute('fileId') || '';\r\n        self.idCounter = nextId(props.options);\r\n        self.containerName = `M-${self.id}-${self.idCounter}`;\r\n        self.iframeName = `${self.containerName}-iframe`;\r\n        self.mediaType = self.xml?.getAttribute('type') || '';\r\n        self.render = self.xml?.getAttribute('render') || '';\r\n        self.duration = parseInt(self.xml?.getAttribute('duration') as string) || 0;\r\n        self.options = { ...props.options, mediaId };\r\n\r\n        const $mediaIframe = document.createElement('iframe');\r\n        const mediaOptions = self.xml?.getElementsByTagName('options');\r\n\r\n        if (mediaOptions) {\r\n            for (let _options of Array.from(mediaOptions)) {\r\n                // Get options\r\n                const _mediaOptions = _options.children;\r\n                for (let mediaOption of Array.from(_mediaOptions)) {\r\n                    self.options[mediaOption.nodeName.toLowerCase()] = mediaOption.textContent;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check for options.uri and add it to media\r\n        if (Boolean(self.options['uri'])) {\r\n            self.uri = self.options['uri'];\r\n        }\r\n\r\n        // Show in fullscreen?\r\n        if(self.options.showfullscreen === \"1\") {\r\n            // Set dimensions as the layout ones\r\n            self.divWidth = self.region.layout.sWidth;\r\n            self.divHeight = self.region.layout.sHeight;\r\n        } else {\r\n            // Set dimensions as the region ones\r\n            self.divWidth = self.region.sWidth;\r\n            self.divHeight = self.region.sHeight;\r\n        }\r\n\r\n        $mediaIframe.scrolling = 'no';\r\n        $mediaIframe.id = self.iframeName;\r\n        $mediaIframe.width = `${self.divWidth}px`;\r\n        $mediaIframe.height = `${self.divHeight}px`;\r\n        $mediaIframe.style.cssText = `border: 0; visibility: hidden;`;\r\n\r\n        const $mediaId = getMediaId(self);\r\n        let $media = document.getElementById($mediaId);\r\n\r\n        if ($media === null) {\r\n            if (self.mediaType === 'video') {\r\n                $media = document.createElement('video');\r\n            } else if (self.mediaType === 'audio') {\r\n                $media = new Audio();\r\n            } else {\r\n                $media = document.createElement('div');\r\n            }\r\n        \r\n            $media.id = $mediaId;\r\n        }\r\n\r\n        $media.className = 'media--item';\r\n\r\n        /* Scale the Content Container */\r\n        $media.style.cssText = `\r\n            display: none;\r\n            width: ${self.divWidth}px;\r\n            height: ${self.divHeight}px;\r\n            position: absolute;\r\n            background-size: contain;\r\n            background-repeat: no-repeat;\r\n            background-position: center;\r\n        `;\r\n\r\n        const $region = document.getElementById(`${self.region.containerName}`);\r\n\r\n        const resourceUrlParams: any = {\r\n            ...xlr.config.config,\r\n            regionOptions: self.region.options,\r\n            layoutId: self.region.layout.layoutId,\r\n            regionId: self.region.id,\r\n            mediaId: self.id,\r\n            fileId: self.fileId,\r\n            scaleFactor: self.region.layout.scaleFactor,\r\n            uri: self.uri,\r\n        };\r\n\r\n        if (self.mediaType === 'image' || self.mediaType === 'video') {\r\n            resourceUrlParams.mediaType = self.mediaType;\r\n        }\r\n\r\n        const tmpUrl = composeResourceUrlByPlatform(xlr.config.platform, resourceUrlParams);\r\n\r\n        self.url = tmpUrl;\r\n\r\n        // Loop if media has loop, or if region has loop and a single media\r\n        self.loop =\r\n            self.options['loop'] == '1' ||\r\n            (self.region.options['loop'] == '1' && self.region.totalMediaObjects == 1);\r\n\r\n        $mediaIframe.src = `${tmpUrl}&width=${self.divWidth}&height=${self.divHeight}`;\r\n\r\n        if (self.render === 'html' || self.mediaType === 'ticker' || self.mediaType === 'webpage') {\r\n            self.checkIframeStatus = true;\r\n            self.iframe = $mediaIframe;\r\n        }  else if (self.mediaType === \"image\") {\r\n            // preload.addFiles(tmpUrl);\r\n            // $media.style.cssText = $media.style.cssText.concat(`background-image: url('${tmpUrl}');`);\r\n            if (self.options['scaletype'] === 'stretch') {\r\n                $media.style.cssText = $media.style.cssText.concat(`background-size: 100% 100%;`);\r\n            } else if (self.options['scaletype'] === 'fit') {\r\n                $media.style.cssText = $media.style.cssText.concat(`background-size: cover;`);\r\n            } else {\r\n                // Center scale type, do we have align or valign?\r\n                const align = (self.options['align'] == \"\") ? \"center\" : self.options['align'];\r\n                const valign = (self.options['valign'] == \"\" || self.options['valign'] == \"middle\") ? \"center\" : self.options['valign'];\r\n                $media.style.cssText = $media.style.cssText.concat(`background-position: ${align} ${valign}`);\r\n            }\r\n        } else if (self.mediaType === 'video') {\r\n            const $videoMedia = $media as HTMLVideoElement;\r\n\r\n            $videoMedia.preload = 'auto';\r\n            $videoMedia.textContent = 'Unsupported Video';\r\n\r\n            if (Boolean(self.options['mute'])) {\r\n                $videoMedia.muted = self.options.mute === '1';\r\n            }\r\n\r\n            if (Boolean(self.options['scaletype'])) {\r\n                if (self.options.scaletype === 'stretch') {\r\n                    $videoMedia.style.objectFit = 'fill';\r\n                }\r\n            }\r\n            $videoMedia.playsInline = true;\r\n\r\n            if (self.loop) {\r\n                $videoMedia.loop = true;\r\n            }\r\n\r\n            $media = $videoMedia;\r\n        } else if (self.mediaType === 'audio') {\r\n            const $audioMedia = $media as HTMLAudioElement;\r\n\r\n            $audioMedia.preload = 'auto';\r\n            $audioMedia.textContent = 'Unsupported Audio';\r\n            $audioMedia.autoplay = true;\r\n\r\n            if (self.loop) {\r\n                $audioMedia.loop = true;\r\n            }\r\n\r\n            $media = $audioMedia;\r\n        }\r\n\r\n        // Duration is per item condition\r\n        if (self.render === 'html' || self.mediaType === 'ticker') {\r\n            /* Check if the ticker duration is based on the number of items in the feed */\r\n            if (self.options['durationisperitem'] === '1') {\r\n                const regex = new RegExp('<!-- NUMITEMS=(.*?) -->');\r\n\r\n                (async () => {\r\n                    let html = await fetchJSON(`${tmpUrl}&width=${self.divWidth}&height=${self.divHeight}`);\r\n                    console.log({html});\r\n                    const res = regex.exec(html);\r\n\r\n                    if (res !== null) {\r\n                        self.duration = parseInt(String(self.duration)) * parseInt(res[1]);\r\n                    }\r\n                })();\r\n            }\r\n        }\r\n\r\n        // Check if the media has fade-in/out transitions\r\n        if (Boolean(self.options['transin']) && Boolean(self.options['transinduration'])) {\r\n            const transInDuration = Number(self.options.transinduration);\r\n            const fadeInTrans = transitionElement('fadeIn', { duration: transInDuration });\r\n            $media.animate(fadeInTrans.keyframes, fadeInTrans.timing);\r\n        }\r\n\r\n        // Add media to the region\r\n        // Second media if exists, will be off-canvas\r\n        // All added media will be hidden by default\r\n        // It will start showing when region.nextMedia() function is called\r\n\r\n        // When there's only 1 item and loop = false, don't remove the item but leave it at its last state\r\n        // For image, and only 1 item, it should still have the transition for next state\r\n        // Add conditions for video duration being 0 or 1 and also the loop property\r\n        // For video url, we have to create a URL out of the XLF video URL\r\n\r\n        /**\r\n         * @DONE\r\n         * Case 1: Video duration = 0, this will play the video for its entire duration\r\n         * Case 2: Video duration is set > 0 and loop = false\r\n         * E.g. Set duration = 100s, video duration = 62s\r\n         * the video will play until 62s and will stop to its last frame until 100s\r\n         * After 100s, it will expire\r\n         * Case 3: Video duration is set > 0 and loop = true\r\n         * E.g. Set duration = 100s, video duration = 62s, loop = true\r\n         * the video will play until 62s and will loop through until the remaining 38s\r\n         * to complete the 100s set duration\r\n         */\r\n\r\n        // Add html node to media for \r\n\r\n        self.html = $media;\r\n\r\n        // Check/set iframe based widgets play status\r\n        // if(self.iframe && self.checkIframeStatus) {\r\n        //     // Set state as false ( for now )\r\n        //     self.ready = false;\r\n        //\r\n        //     // Append iframe\r\n        //     $media.innerHTML = '';\r\n        //     $media.appendChild(self.iframe as Node);\r\n        //\r\n        //     // On iframe load, set state as ready to play full preview\r\n        //     (self.iframe) && self.iframe.addEventListener('load', function(){\r\n        //         self.ready = true;\r\n        //         if (self.iframe) {\r\n        //             const iframeStyles = self.iframe.style.cssText;\r\n        //             self.iframe.style.cssText = iframeStyles?.concat('visibility: visible;');\r\n        //         }\r\n        //     });\r\n        // }\r\n\r\n    };\r\n\r\n    mediaObject.run = function() {\r\n        const self = mediaObject;\r\n        let transInDuration = 1;\r\n        let transInDirection: compassPoints = 'E';\r\n\r\n        if (Boolean(self.options['transinduration'])) {\r\n            transInDuration = Number(self.options.transinduration);\r\n        }\r\n\r\n        if (Boolean(self.options['transindirection'])) {\r\n            transInDirection = self.options.transindirection;\r\n        }\r\n\r\n        let defaultTransInOptions: TransitionElementOptions = {duration: transInDuration};\r\n        let transIn = transitionElement('defaultIn', {duration: defaultTransInOptions.duration});\r\n        \r\n        if (Boolean(self.options['transin'])) {\r\n            let transInName = self.options['transin'];\r\n\r\n            if (transInName === 'fly') {\r\n                transInName = `${transInName}In`;\r\n                defaultTransInOptions.keyframes = flyTransitionKeyframes({\r\n                    trans: 'in',\r\n                    direction: transInDirection,\r\n                    height: self.divHeight,\r\n                    width: self.divWidth,\r\n                });\r\n            }\r\n\r\n            transIn = transitionElement(transInName, defaultTransInOptions);\r\n        }\r\n\r\n        const showCurrentMedia = async () => {\r\n            let $mediaId = getMediaId(self);\r\n            let $media = document.getElementById($mediaId);\r\n            const isCMS = xlr.config.platform === 'CMS';\r\n\r\n            if ($media === null) {\r\n                $media = getNewMedia();\r\n            }\r\n\r\n            if ($media !== null) {\r\n                $media.style.setProperty('display', 'block');\r\n\r\n                if (Boolean(self.options['transin'])) {\r\n                    $media.animate(transIn.keyframes, transIn.timing);\r\n                }\r\n\r\n                if (self.mediaType === 'image' && self.url !== null) {\r\n                    ($media as HTMLImageElement).style\r\n                        .setProperty(\r\n                            'background-image',\r\n                            `url(${!isCMS ? self.url : await getDataBlob(self.url)}`\r\n                        );\r\n                } else if (self.mediaType === 'video' && self.url !== null) {\r\n                    ($media as HTMLVideoElement).src =\r\n                        isCMS ? await preloadMediaBlob(self.url, self.mediaType) : self.url;\r\n                } else if (self.mediaType === 'audio' && self.url !== null) {\r\n                    ($media as HTMLAudioElement).src =\r\n                        isCMS ? await preloadMediaBlob(self.url, self.mediaType) : self.url;\r\n                } else if ((self.render === 'html' || self.mediaType === 'webpage') &&\r\n                    self.iframe && self.checkIframeStatus\r\n                ) {\r\n                    // Set state as false ( for now )\r\n                    self.ready = false;\r\n\r\n                    // Append iframe\r\n                    $media.innerHTML = '';\r\n                    $media.appendChild(self.iframe as Node);\r\n\r\n                    // On iframe load, set state as ready to play full preview\r\n                    (self.iframe) && self.iframe.addEventListener('load', function(){\r\n                        self.ready = true;\r\n                        if (self.iframe) {\r\n                            const iframeStyles = self.iframe.style.cssText;\r\n                            self.iframe.style.cssText = iframeStyles?.concat('visibility: visible;');\r\n                        }\r\n                    });\r\n                }\r\n\r\n                self.emitter?.emit('start', self);\r\n            }\r\n        };\r\n        const getNewMedia = (): HTMLElement | null => {\r\n            const $region = document.getElementById(`${self.region.containerName}`);\r\n            // This function is for checking whether\r\n            // the region still has to show a media item\r\n            // when another region is not finished yet\r\n            if (self.region.complete && !self.region.layout.allEnded) {\r\n                // Add currentMedia to the region\r\n\r\n                ($region) && $region.insertBefore(self.html as Node, $region.lastElementChild);\r\n\r\n                return self.html as HTMLElement;\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        showCurrentMedia();\r\n    };\r\n\r\n    mediaObject.stop = async function() {\r\n        const self = mediaObject;\r\n        const $media = document.getElementById(getMediaId(self));\r\n\r\n        if ($media) {\r\n            $media.style.display = 'none';\r\n            $media.remove();\r\n        }\r\n    };\r\n\r\n    \r\n    mediaObject.on = function<E extends keyof IMediaEvents>(event: E, callback: IMediaEvents[E]) {\r\n        return emitter.on(event, callback);\r\n    };\r\n\r\n    mediaObject.emitter = emitter;\r\n\r\n    mediaObject.init();\r\n\r\n    return mediaObject;\r\n}","/*\n * Copyright (C) 2024 Xibo Signage Ltd\n *\n * Xibo - Digital Signage - https://www.xibosignage.com\n *\n * This file is part of Xibo.\n *\n * Xibo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * Xibo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport { IMedia } from '../../Types/Media';\nimport { capitalizeStr, getMediaId } from '../Generators';\n\nexport default function VideoMedia(media: IMedia) {\n    const videoMediaObject = {\n        init() {\n            const $videoMedia = document.getElementById(getMediaId(media)) as HTMLVideoElement;\n\n            if ($videoMedia) {\n                $videoMedia.onloadstart = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} has started loading data . . .`);\n                };\n                $videoMedia.onloadeddata = () => {\n                    if ($videoMedia.readyState >= 2) {\n                        console.log(`${capitalizeStr(media.mediaType)} data for media > ${media.id} has been fully loaded . . .`);\n                    }\n                };\n                $videoMedia.oncanplay = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} can be played . . .`);\n        \n                    const videoPlayPromise = $videoMedia.play();\n        \n                    if (videoPlayPromise !== undefined) {\n                        videoPlayPromise.then(() => {\n                            console.log('autoplay started . . .');\n                            // Autoplay restarted\n                        }).catch(error => {\n                            $videoMedia.muted = true;\n                            $videoMedia.play();\n                        });\n                    }\n                };\n                $videoMedia.onplaying = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} is now playing . . .`);\n                };\n\n                if (media.duration === 0) {\n                    $videoMedia.ondurationchange = () => {\n                        console.log('Showing Media ' + media.id + ' for ' + $videoMedia.duration + 's of Region ' + media.region.regionId);\n                    };\n                    $videoMedia.onended = () => {\n                        console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} has ended playing . . .`);\n                        media.emitter?.emit('end', media);\n                    };\n                }\n            }\n        }\n    }\n\n    return videoMediaObject;\n}\n","/*\n * Copyright (C) 2024 Xibo Signage Ltd\n *\n * Xibo - Digital Signage - https://www.xibosignage.com\n *\n * This file is part of Xibo.\n *\n * Xibo is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * any later version.\n *\n * Xibo is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport { IMedia } from '../../Types/Media';\nimport { capitalizeStr, getMediaId } from '../Generators';\n\nimport './media.css';\n\nexport default function AudioMedia(media: IMedia) {\n    const audioMediaObject = {\n        init() {\n            const $audioMedia = document.getElementById(getMediaId(media)) as HTMLAudioElement;\n            let $playBtn: HTMLButtonElement | null = null;\n\n            if ($audioMedia) {\n                $audioMedia.onloadstart = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} has started loading data . . .`);\n                };\n                $audioMedia.onloadeddata = () => {\n                    if ($audioMedia.readyState >= 2) {\n                        console.log(`${capitalizeStr(media.mediaType)} data for media > ${media.id} has been fully loaded . . .`);\n                    }\n                };\n                $audioMedia.oncanplay = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} can be played . . .`);\n                };\n                $audioMedia.onplaying = () => {\n                    console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} is now playing . . .`);\n\n                    if ($playBtn !== null) {\n                        $playBtn.remove();\n                    }\n                };\n\n                const audioPlayPromise = $audioMedia.play();\n    \n                if (audioPlayPromise !== undefined) {\n                    audioPlayPromise.then(() => {\n                        console.log('autoplay started . . .');\n                        // Autoplay restarted\n                    }).catch(error => {\n                        if (error.name === 'NotAllowedError') {\n                            // Let's show a play audio button\n                            $playBtn = document.createElement('button');\n\n                            $playBtn.classList.add('play-audio-btn');\n                            $playBtn.textContent = 'Play Audio';\n                            $playBtn.addEventListener('click', () => {\n                                $audioMedia.muted = false;\n                                $audioMedia.play();\n                            });\n                            $audioMedia.parentNode?.insertBefore($playBtn, $audioMedia.nextSibling);\n                        }\n                    });\n                }\n                if (media.duration === 0) {\n                    $audioMedia.ondurationchange = () => {\n                        console.log('Showing Media ' + media.id + ' for ' + $audioMedia.duration + 's of Region ' + media.region.regionId);\n                    };\n                    $audioMedia.onended = () => {\n                        console.log(`${capitalizeStr(media.mediaType)} for media > ${media.id} has ended playing . . .`);\n                        media.emitter?.emit('end', media);\n                    };\n                }\n            }\n        },\n    };\n\n    return audioMediaObject;\n}\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {createNanoEvents} from 'nanoevents';\r\nimport {\r\n    GetLayoutParamType,\r\n    GetLayoutType,\r\n    ILayout,\r\n    initialLayout,\r\n    OptionsType,\r\n} from '../../Types/Layout';\r\nimport { IXlr } from '../../Types/XLR';\r\nimport { nextId } from '../Generators';\r\nimport { Region } from '../Region';\r\n\r\nimport './layout.css';\r\nimport {composeBgUrlByPlatform, getIndexByLayoutId} from '../Generators/Generators';\r\n\r\nconst playAgainClickHandle = function(ev: { preventDefault: () => void; }) {\r\n    ev.preventDefault();\r\n    history.go(0);\r\n};\r\n\r\nexport function initRenderingDOM(targetContainer: Element | null) {\r\n    let _targetContainer = targetContainer;\r\n    const previewPlayer = document.createElement('div');\r\n    const previewScreen = document.createElement('div');\r\n    const endPlay = document.createElement('div');\r\n    const playAgainLink = document.createElement('a');\r\n\r\n    // Preview player\r\n    previewPlayer.className = 'player-preview';\r\n    previewPlayer.id = 'player_container';\r\n\r\n    // Preview screen\r\n    previewScreen.className = 'screen-preview';\r\n    previewScreen.id = 'screen_container';\r\n\r\n    // Ended play\r\n    endPlay.className = 'preview-ended';\r\n    endPlay.id = 'play_ended';\r\n    endPlay.style.display = 'none';\r\n\r\n    // Play again link\r\n    playAgainLink.id = 'play_back_preview';\r\n    playAgainLink.className = 'play-back-preview';\r\n    playAgainLink.style.cssText = 'text-decoration: none; color: #ffffff;';\r\n    playAgainLink.innerHTML = 'Play again?';\r\n    playAgainLink.removeEventListener('click', playAgainClickHandle);\r\n    playAgainLink.addEventListener('click', playAgainClickHandle);\r\n\r\n    if (!_targetContainer) {\r\n        _targetContainer = document.body;\r\n    }\r\n\r\n    if (_targetContainer) {\r\n        if (_targetContainer.querySelector('#player_container') === null) {\r\n            _targetContainer.insertBefore(previewPlayer, _targetContainer.firstChild);\r\n\r\n            if (previewPlayer.querySelector('#screen_container') === null) {\r\n                previewPlayer.appendChild(previewScreen);\r\n            }\r\n\r\n            if (previewPlayer.querySelector('#play_ended') === null) {\r\n                previewPlayer.appendChild(endPlay);\r\n\r\n                if (endPlay.querySelector('a') === null) {\r\n                    endPlay.appendChild(playAgainLink);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function getXlf(layoutOptions: OptionsType) {\r\n    let apiHost = window.location.origin;\r\n\r\n    let xlfUrl = apiHost + layoutOptions.xlfUrl;\r\n    let fetchOptions: RequestInit = {};\r\n\r\n    if (layoutOptions.platform === 'CMS') {\r\n        xlfUrl = apiHost + layoutOptions.xlfUrl;\r\n        fetchOptions.mode = 'no-cors';\r\n    } else if (layoutOptions.platform === 'chromeOS') {\r\n        xlfUrl = layoutOptions.xlfUrl;\r\n        fetchOptions.mode = 'cors';\r\n        fetchOptions.headers = {\r\n            'Content-Type': 'text/xml',\r\n        };\r\n    } else if (layoutOptions.platform !== 'CMS' && layoutOptions.appHost !== null) {\r\n        xlfUrl = layoutOptions.appHost + layoutOptions.xlfUrl;\r\n    }\r\n\r\n    const res = await fetch(xlfUrl);\r\n\r\n    return await res.text();\r\n}\r\n\r\nexport function handleAxiosError(error: any, message?: string) {\r\n    console.error(error);\r\n    if (error.response.status == 500) {\r\n        // SOAP responses are always 500's\r\n        // Return the body\r\n        throw new Error(error.response.data);\r\n    } else {\r\n        throw new Error(message || 'Unknown Error');\r\n    }\r\n}\r\n\r\nexport function getLayout(params: GetLayoutParamType): GetLayoutType {\r\n    let _currentLayout = undefined;\r\n    let _nextLayout = undefined;\r\n    let {\r\n        inputLayouts,\r\n        currentLayout,\r\n        nextLayout,\r\n        currentLayoutIndex: currLayoutIndx\r\n    } = params.xlr;\r\n    const hasLayout = inputLayouts.length > 0;\r\n    let currentLayoutIndex = currLayoutIndx;\r\n    let nextLayoutIndex = currentLayoutIndex + 1;\r\n\r\n    if (currentLayout === undefined && nextLayout === undefined) {\r\n        let activeLayout;\r\n        // Preview just got started\r\n        if (hasLayout) {\r\n            let nextLayoutTemp = {...initialLayout};\r\n            activeLayout = inputLayouts[currentLayoutIndex];\r\n            _currentLayout = {...initialLayout, ...activeLayout};\r\n\r\n            if (inputLayouts.length > 1) {\r\n                nextLayoutTemp = {...nextLayoutTemp, ...inputLayouts[nextLayoutIndex]};\r\n                _nextLayout = nextLayoutTemp;\r\n            } else {\r\n                _nextLayout = _currentLayout;\r\n            }\r\n\r\n            _currentLayout.id = activeLayout.layoutId;\r\n\r\n            if (nextLayoutTemp) {\r\n                _nextLayout.id = nextLayoutTemp.layoutId;\r\n            }\r\n        }\r\n    } else {\r\n        if (hasLayout) {\r\n            _currentLayout = nextLayout;\r\n\r\n            currentLayoutIndex = getIndexByLayoutId(inputLayouts, _currentLayout?.layoutId).index as number;\r\n            nextLayoutIndex = currentLayoutIndex + 1;\r\n\r\n            if (inputLayouts.length > 1 && nextLayoutIndex < inputLayouts.length) {\r\n                if (Boolean(params.xlr.layouts[nextLayoutIndex])) {\r\n                    _nextLayout = params.xlr.layouts[nextLayoutIndex];\r\n                } else {\r\n                    _nextLayout = {...initialLayout, ...inputLayouts[nextLayoutIndex]};\r\n                }\r\n            }\r\n\r\n            // If _nextLayout is undefined, then we go back to first layout\r\n            if (_nextLayout === undefined) {\r\n                _nextLayout = params.xlr.layouts[0];\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        currentLayoutIndex,\r\n        inputLayouts: params.xlr.inputLayouts,\r\n        current: _currentLayout,\r\n        next: _nextLayout,\r\n    }\r\n}\r\n\r\nexport interface ILayoutEvents {\r\n    start: (layout: ILayout) => void;\r\n    end: (layout: ILayout) => void;\r\n}\r\n\r\nexport default function Layout(\r\n    data: Document | null,\r\n    options: OptionsType,\r\n    xlr: IXlr,\r\n    layout?: ILayout\r\n) {\r\n    const props = {\r\n        data: data,\r\n        options: options,\r\n        layout: layout || initialLayout,\r\n    }\r\n    const emitter = createNanoEvents<ILayoutEvents>();\r\n\r\n    emitter.on('start', (layout) => {\r\n        layout.done = false;\r\n        console.log('Layout start emitted > Layout ID > ', layout.id);\r\n    });\r\n\r\n    emitter.on('end', (layout) => {\r\n        console.log('Ending layout with ID of > ', layout.layoutId);\r\n        layout.done = true;\r\n        /* Remove layout that has ended */\r\n        const $layout = document.getElementById(layout.containerName);\r\n\r\n        console.log({$layout});\r\n\r\n        if ($layout !== null) {\r\n            $layout.remove();\r\n        }\r\n\r\n        if (xlr.config.platform !== 'CMS') {\r\n            // Transition next layout to current layout and prepare next layout if exist\r\n            xlr.prepareLayouts().then((parent) => {\r\n                xlr.playSchedules(parent);\r\n            });\r\n        }\r\n    });\r\n\r\n    const layoutObject: ILayout = {\r\n        ...props.layout,\r\n        options: props.options,\r\n        emitter,\r\n    };\r\n\r\n    layoutObject.on = function<E extends keyof ILayoutEvents>(event: E, callback: ILayoutEvents[E]) {\r\n        return emitter.on(event, callback);\r\n    };\r\n    layoutObject.run = function() {\r\n        const layout = layoutObject;\r\n        const $layoutContainer = document.getElementById(`${layout.containerName}`);\r\n        const $splashScreen = document.getElementById(`splash_${layout.id}`);\r\n\r\n        if ($layoutContainer) {\r\n            $layoutContainer.style.display = 'block';\r\n        }\r\n\r\n        if ($splashScreen) {\r\n            $splashScreen.style.display = 'none';\r\n        }\r\n\r\n        console.log('Layout running > Layout ID > ', layout.id);\r\n        console.log('Layout Regions > ', layout.regions);\r\n        for (let i = 0; i < layout.regions.length; i++) {\r\n            // playLog(4, \"debug\", \"Running region \" + self.regions[i].id, false);\r\n            layout.regions[i].run();\r\n        }\r\n    };\r\n\r\n    layoutObject.parseXlf = function() {\r\n        const layout = layoutObject;\r\n        const {data, options} = props;\r\n        layout.containerName = \"L\" + layout.id + \"-\" + nextId(options);\r\n        layout.regions = [];\r\n\r\n        /* Create a hidden div to show the layout in */\r\n        let $layout = document.getElementById(layout.containerName);\r\n\r\n        if ($layout === null) {\r\n            $layout = document.createElement('div');\r\n            $layout.id = layout.containerName;\r\n        }\r\n\r\n        let $screen = document.getElementById('screen_container');\r\n        ($screen) && $screen.appendChild($layout);\r\n\r\n        if ($layout) {\r\n            $layout.style.display = 'none';\r\n            $layout.style.outline = 'red solid thin';\r\n        }\r\n\r\n        layout.layoutNode = data;\r\n\r\n        /* Calculate the screen size */\r\n        layout.sw = $screen?.offsetWidth || 0;\r\n        layout.sh = $screen?.offsetHeight || 0;\r\n\r\n        layout.xw = Number(layout.layoutNode?.firstElementChild?.getAttribute('width'));\r\n        layout.xh = Number(layout.layoutNode?.firstElementChild?.getAttribute('height'));\r\n        layout.zIndex = Number(layout.layoutNode?.firstElementChild?.getAttribute('zindex')) || 0;\r\n\r\n        /* Calculate Scale Factor */\r\n        layout.scaleFactor = Math.min((layout.sw / layout.xw), (layout.sh / layout.xh));\r\n        layout.sWidth = Math.round(layout.xw * layout.scaleFactor);\r\n        layout.sHeight = Math.round(layout.xh * layout.scaleFactor);\r\n        layout.offsetX = Math.abs(layout.sw - layout.sWidth) / 2;\r\n        layout.offsetY = Math.abs(layout.sh - layout.sHeight) / 2;\r\n\r\n        /* Scale the Layout Container */\r\n        if ($layout) {\r\n            $layout.style.width = `${layout.sWidth}px`;\r\n            $layout.style.height = `${layout.sHeight}px`;\r\n            $layout.style.position = 'absolute';\r\n            $layout.style.left = `${layout.offsetX}px`;\r\n            $layout.style.top = `${layout.offsetY}px`;\r\n        }\r\n\r\n        if ($layout && layout.zIndex !== null) {\r\n            $layout.style.zIndex = `${layout.zIndex}`;\r\n        }\r\n\r\n        /* Set the layout background */\r\n        layout.bgColor = layout.layoutNode?.firstElementChild?.getAttribute('bgcolor') || '';\r\n        layout.bgImage = layout.layoutNode?.firstElementChild?.getAttribute('background') || '';\r\n\r\n        if (!(layout.bgImage === \"\" || typeof layout.bgImage === 'undefined')) {\r\n            /* Extract the image ID from the filename */\r\n            layout.bgId = layout.bgImage.substring(0, layout.bgImage.indexOf('.'));\r\n\r\n            const bgImageUrl = composeBgUrlByPlatform(\r\n                xlr.config.platform,\r\n                {\r\n                    ...options,\r\n                    layout,\r\n                }\r\n            );\r\n\r\n            if ($layout) {\r\n                $layout.style.backgroundImage = `url(\"${bgImageUrl}\")`;\r\n                $layout.style.backgroundRepeat = 'no-repeat';\r\n                $layout.style.backgroundSize = `${layout.sWidth}px ${layout.sHeight}px`;\r\n                $layout.style.backgroundPosition = '0px 0px';\r\n            }\r\n        }\r\n\r\n        // Set the background color\r\n        if ($layout && layout.bgColor) {\r\n            $layout.style.backgroundColor = `${layout.bgColor}`;\r\n        }\r\n\r\n        // Hide if layout is not the currentLayout\r\n        if ($layout && xlr.currentLayoutId !== undefined && xlr.currentLayoutId !== layout.id) {\r\n            $layout.style.display = 'none';\r\n        }\r\n\r\n        // Create regions\r\n        const layoutRegions = Array.from(layout?.layoutNode?.getElementsByTagName('region') || []);\r\n\r\n        Array.from(layoutRegions).forEach((regionXml, indx) => {\r\n            const regionObj = Region(\r\n                layout,\r\n                regionXml,\r\n                regionXml?.getAttribute('id') || '',\r\n                options,\r\n                xlr,\r\n            );\r\n\r\n            regionObj.index = indx;\r\n            layout.regions.push(regionObj);\r\n        });\r\n    };\r\n\r\n    layoutObject.prepareLayout = function() {\r\n        layoutObject.parseXlf();\r\n    };\r\n\r\n    layoutObject.regionExpired = function() {\r\n        const self = layoutObject;\r\n        self.allExpired = true;\r\n\r\n        for (let layoutRegion of self.regions) {\r\n            if (!layoutRegion.complete) {\r\n                self.allExpired = false;\r\n            }\r\n        }\r\n\r\n        if (self.allExpired) {\r\n            self.end();\r\n        }\r\n    };\r\n\r\n    layoutObject.regionEnded = function() {\r\n        const self = layoutObject;\r\n        self.allEnded = true;\r\n        \r\n        for (var i = 0; i < self.regions.length; i++) {\r\n            if (! self.regions[i].ended) {\r\n                self.allEnded = false;\r\n            }\r\n        }\r\n        \r\n        if (self.allEnded) {\r\n            self.stopAllMedia().then(() => {\r\n                console.log('starting to end layout . . .');\r\n                if (xlr.config.platform === 'CMS') {\r\n                    const $end = document.getElementById('play_ended');\r\n                    const $preview = document.getElementById('screen_container');\r\n        \r\n                    if ($preview) {\r\n                        while($preview.firstChild) {\r\n                            $preview.removeChild($preview.firstChild);\r\n                        }\r\n        \r\n                        $preview.style.display = 'none';\r\n                    }\r\n        \r\n                    if ($end) {\r\n                        $end.style.display = 'block';\r\n                    }\r\n                }\r\n                \r\n                self.emitter?.emit('end', self);\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    layoutObject.end = function() {\r\n        console.log('Executing Layout::end and Calling Region::end ', layoutObject);\r\n\r\n        /* Ask the layout to gracefully stop running now */\r\n        for (let layoutRegion of layoutObject.regions) {\r\n            layoutRegion.end();\r\n        }\r\n    };\r\n\r\n    layoutObject.stopAllMedia = function() {\r\n        console.log('Stopping all media . . .');\r\n        return new Promise(async (resolve) => {\r\n            for(var i = 0;i < layoutObject.regions.length;i++) {\r\n                var region = layoutObject.regions[i];\r\n                for(var j = 0;j < region.mediaObjects.length;j++) {\r\n                    var media = region.mediaObjects[j];\r\n                    await media.stop();\r\n                }\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    };\r\n\r\n    layoutObject.prepareLayout();\r\n\r\n    return layoutObject;\r\n}\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {ILayout, InputLayoutType, OptionsType} from \"../Layout/Layout.types\";\r\nimport {platform} from \"../../Modules/Platform/Platform\";\r\n\r\nexport type PrepareLayoutsType = {\r\n    moveNext?: boolean;\r\n};\r\n\r\nexport enum ELayoutType {\r\n    CURRENT,\r\n    NEXT,\r\n}\r\n\r\nexport interface IXlr {\r\n    inputLayouts: InputLayoutType[],\r\n    config: OptionsType,\r\n    layouts: ILayout[],\r\n    currentLayoutIndex: number;\r\n    currentLayoutId: number | null;\r\n    currentLayout: ILayout | undefined;\r\n    nextLayout: ILayout | undefined;\r\n    bootstrap(): void;\r\n    init(): Promise<IXlr>;\r\n    playSchedules(xlr: IXlr): void;\r\n    prepareLayoutXlf(inputLayout: ILayout | undefined): Promise<ILayout>;\r\n    prepareLayouts(): Promise<IXlr>;\r\n}\r\n\r\nexport const initialXlr: IXlr = {\r\n    inputLayouts: [],\r\n    config: platform,\r\n    layouts: [],\r\n    currentLayoutIndex: 0,\r\n    currentLayoutId: null,\r\n    currentLayout: undefined,\r\n    nextLayout: undefined,\r\n    bootstrap() {\r\n    },\r\n    init() {\r\n        return Promise.resolve(<IXlr>{});\r\n    },\r\n    playSchedules() {\r\n    },\r\n    prepareLayoutXlf(inputLayout: ILayout | undefined): Promise<ILayout> {\r\n        return Promise.resolve(<ILayout>{});\r\n    },\r\n    prepareLayouts(): Promise<IXlr> {\r\n        return Promise.resolve(<IXlr>{});\r\n    }\r\n};\r\n","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport { createNanoEvents } from \"nanoevents\";\r\nimport { ILayout, OptionsType } from '../../Types/Layout';\r\nimport { initialRegion, IRegion, IRegionEvents } from '../../Types/Region';\r\nimport { IMedia } from '../../Types/Media';\r\nimport { getMediaId, nextId } from '../Generators';\r\nimport { platform } from '../Platform';\r\nimport { Media } from '../Media';\r\nimport {\r\n    TransitionElementOptions,\r\n    TransitionNameType,\r\n    compassPoints,\r\n    flyTransitionKeyframes,\r\n    transitionElement,\r\n} from '../Transitions';\r\nimport {IXlr} from \"../../Types/XLR\";\r\n\r\nexport default function Region(\r\n    layout: ILayout,\r\n    xml: Element,\r\n    regionId: string,\r\n    options: OptionsType,\r\n    xlr: IXlr,\r\n) {\r\n    const props = {\r\n        layout: layout,\r\n        xml: xml,\r\n        regionId: regionId,\r\n        options: options,\r\n    }\r\n    const emitter = createNanoEvents<IRegionEvents>();\r\n    let regionObject: IRegion = {\r\n        ...initialRegion,\r\n        ...props,\r\n    };\r\n\r\n    regionObject.prepareRegion = function() {\r\n        const self = regionObject;\r\n        const {layout, options} = self;\r\n        self.id = props.regionId;\r\n        self.options = {...platform, ...props.options};\r\n        self.containerName = `R-${self.id}-${nextId(self.options as OptionsType & IRegion[\"options\"])}`;\r\n        self.xml = props.xml;\r\n        self.mediaObjects = [];\r\n\r\n        self.sWidth = (self.xml) && Number(self.xml?.getAttribute('width')) * layout.scaleFactor;\r\n        self.sHeight = (self.xml) && Number(self.xml?.getAttribute('height')) * layout.scaleFactor;\r\n        self.offsetX = (self.xml) && Number(self.xml?.getAttribute('left')) * layout.scaleFactor;\r\n        self.offsetY = (self.xml) && Number(self.xml?.getAttribute('top')) * layout.scaleFactor;\r\n        self.zIndex = (self.xml) && Number(self.xml?.getAttribute('zindex'));\r\n        \r\n        const regionOptions = self.xml?.getElementsByTagName('options');\r\n\r\n        if (regionOptions) {\r\n            for (let _options of Array.from(regionOptions)) {\r\n                // Get options\r\n                const _regionOptions = _options.children;\r\n                for (let regionOption of Array.from(_regionOptions)) {\r\n                    self.options[regionOption.nodeName.toLowerCase()] = regionOption.textContent;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let $region = document.getElementById(self.containerName);\r\n        const $layout = document.getElementById(`${self.layout.containerName}`);\r\n\r\n        if ($region === null) {\r\n            $region = document.createElement('div');\r\n            $region.id = self.containerName;\r\n        }\r\n\r\n        ($layout) && $layout.appendChild($region);\r\n\r\n        /* Scale the Layout Container */\r\n        /* Add region styles */\r\n        $region.style.cssText = `\r\n            width: ${self.sWidth}px;\r\n            height: ${self.sHeight}px;\r\n            position: absolute;\r\n            left: ${self.offsetX}px;\r\n            top: ${self.offsetY}px;\r\n            z-index: ${Math.round(self.zIndex)};\r\n        `;\r\n        $region.className = 'region--item';\r\n\r\n        /* Parse region media objects */\r\n        const regionMediaItems = Array.from(self.xml.getElementsByTagName('media'));\r\n        self.totalMediaObjects = regionMediaItems.length;\r\n\r\n        Array.from(regionMediaItems).forEach((mediaXml, indx) => {\r\n            const mediaObj = Media(\r\n                self,\r\n                mediaXml?.getAttribute('id') || '',\r\n                mediaXml,\r\n                options as OptionsType & IRegion[\"options\"],\r\n                xlr,\r\n            );\r\n\r\n            mediaObj.index = indx;\r\n            self.mediaObjects.push(mediaObj);\r\n        });\r\n\r\n        self.prepareMediaObjects();\r\n    };\r\n\r\n    regionObject.finished = function() {\r\n        const self = regionObject;\r\n        console.log('Region::finished called . . . ', self.id);\r\n        // Mark as complete\r\n        self.complete = true;\r\n        self.layout.regions[regionObject.index] = regionObject;\r\n        self.layout.regionExpired();\r\n    };\r\n\r\n    regionObject.prepareMediaObjects = function() {\r\n        const self = regionObject;\r\n        let nextMediaIndex;\r\n\r\n        if (self.mediaObjects.length > 0) {\r\n\r\n            if (self.curMedia) {\r\n                self.oldMedia = self.curMedia;\r\n            } else {\r\n                self.oldMedia = undefined;\r\n            }\r\n\r\n            if (self.currentMediaIndex >= self.mediaObjects.length) {\r\n                self.currentMediaIndex = 0;\r\n            }\r\n\r\n            self.curMedia = self.mediaObjects[self.currentMediaIndex];\r\n\r\n            nextMediaIndex = self.currentMediaIndex + 1;\r\n\r\n            if (nextMediaIndex >= self.mediaObjects.length ||\r\n                (\r\n                    !Boolean(self.mediaObjects[nextMediaIndex]) &&\r\n                    self.mediaObjects.length === 1\r\n                )\r\n            ) {\r\n                nextMediaIndex = 0;\r\n            }\r\n\r\n            if (Boolean(self.mediaObjects[nextMediaIndex])) {\r\n                self.nxtMedia = self.mediaObjects[nextMediaIndex];\r\n            }\r\n\r\n            const $region = document.getElementById(`${self.containerName}`);\r\n            // Append available media to region DOM\r\n            if (self.curMedia) {\r\n                ($region) && $region.insertBefore(self.curMedia.html as Node, $region.lastElementChild);\r\n            }\r\n\r\n            if (self.nxtMedia) {\r\n                ($region) && $region.insertBefore(self.nxtMedia.html as Node, $region.lastElementChild);\r\n            }\r\n        }\r\n    };\r\n\r\n    regionObject.run = function() {\r\n        console.log('Called Region::run > ', regionObject.id);\r\n\r\n        if (regionObject.curMedia) {\r\n            regionObject.transitionNodes(regionObject.oldMedia, regionObject.curMedia);\r\n        }\r\n    };\r\n\r\n    regionObject.transitionNodes = function(oldMedia: IMedia | undefined, newMedia: IMedia | undefined) {\r\n        const self = regionObject;\r\n        let transOutDuration = 1;\r\n        let transOutDirection: compassPoints = 'E';\r\n\r\n        if (newMedia) {\r\n            if (oldMedia && Boolean(oldMedia.options['transoutduration'])) {\r\n                transOutDuration = Number(oldMedia.options.transoutduration);\r\n            }\r\n\r\n            if (oldMedia && Boolean(oldMedia.options['transoutdirection'])) {\r\n                transOutDirection = oldMedia.options.transoutdirection;\r\n            }\r\n    \r\n            let defaultTransOutOptions: TransitionElementOptions = {duration: transOutDuration};\r\n            let transOut = transitionElement('defaultOut', {duration: defaultTransOutOptions.duration});\r\n    \r\n            let transOutName: TransitionNameType | string;\r\n            if (oldMedia && Boolean(oldMedia.options['transout'])) {\r\n                transOutName = oldMedia.options['transout'];\r\n    \r\n                if (transOutName === 'fly') {\r\n                    transOutName = `${transOutName}Out`;\r\n                    defaultTransOutOptions.keyframes = flyTransitionKeyframes({\r\n                        trans: 'out',\r\n                        direction: transOutDirection,\r\n                        height: oldMedia.divHeight,\r\n                        width: oldMedia.divWidth,\r\n                    });\r\n                }\r\n                \r\n                transOut = transitionElement(transOutName as TransitionNameType, defaultTransOutOptions);\r\n            }\r\n            \r\n            const hideOldMedia = new Promise((resolve) => {\r\n                // Hide oldMedia\r\n                if (oldMedia) {\r\n                    const $oldMedia = document.getElementById(getMediaId(oldMedia));\r\n                    if ($oldMedia) {\r\n                        const removeOldMedia = () => {\r\n                            $oldMedia.style.setProperty('display', 'none');\r\n                            $oldMedia.remove();\r\n                        };\r\n\r\n                        let oldMediaAnimate: any;\r\n                        if (Boolean(oldMedia.options['transout'])) {\r\n                            oldMediaAnimate = $oldMedia.animate(transOut.keyframes, transOut.timing);\r\n                        }\r\n\r\n                        if (Boolean(oldMedia.options['transout']) && self.totalMediaObjects > 1) {\r\n                            if (transOutName === 'flyOut') {\r\n                                // Reset last item to original position and state\r\n                                oldMediaAnimate ? oldMediaAnimate.finished\r\n                                    .then(() => {\r\n                                        resolve(true);\r\n                                        oldMediaAnimate?.effect?.updateTiming({fill: 'none'});\r\n                                        removeOldMedia();\r\n                                    }) : undefined;\r\n                            } else {\r\n                                setTimeout(removeOldMedia, transOutDuration / 2);\r\n                                resolve(true);\r\n                            }\r\n                        } else {\r\n                            removeOldMedia();\r\n                            // Resolve this right away\r\n                            // As a result, the transition between two media object\r\n                            // seems like a cross-over\r\n                            resolve(true);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    \r\n            if (oldMedia) {\r\n                hideOldMedia.then((isDone) => {\r\n                    if (isDone) {\r\n                        newMedia.run();\r\n                    }\r\n                });\r\n            } else {\r\n                newMedia.run();\r\n            }\r\n        }\r\n    };\r\n\r\n    regionObject.playNextMedia = function() {\r\n        const self = regionObject;\r\n\r\n        /* The current media has finished running */\r\n        if (self.ended) {\r\n            return;\r\n        }\r\n\r\n        if (self.currentMediaIndex === self.mediaObjects.length - 1) {\r\n            self.finished();\r\n\r\n            if (self.layout.allEnded) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // When the region has completed and when currentMedia is html\r\n        // Then, preserve the currentMedia state\r\n        if (self.complete &&\r\n            self.curMedia?.render === 'html'\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        // When the region has completed and mediaObjects.length = 1\r\n        // and curMedia.loop = false, then put the media on\r\n        // its current state\r\n        if (self.complete && self.mediaObjects.length === 1 &&\r\n            self.curMedia?.render !== 'html' &&\r\n            self.curMedia?.mediaType === 'image' &&\r\n            !self.curMedia?.loop\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        self.currentMediaIndex = self.currentMediaIndex + 1;\r\n        self.prepareMediaObjects();\r\n\r\n        self.transitionNodes(self.oldMedia, self.curMedia);\r\n    };\r\n    \r\n    regionObject.end = function() {\r\n        const self = regionObject;\r\n        self.ending = true;\r\n        /* The Layout has finished running */\r\n        /* Do any region exit transition then clean up */\r\n        self.layout.regions[self.index] = self;\r\n\r\n        console.log('Calling Region::end ', self);\r\n        self.exitTransition();\r\n    };\r\n\r\n    regionObject.exitTransition = function() {\r\n        const self = regionObject;\r\n        /* TODO: Actually implement region exit transitions */\r\n        const $region = document.getElementById(`${self.containerName}`);\r\n\r\n        if ($region) {\r\n            $region.style.display = 'none';\r\n        }\r\n\r\n        console.log('Called Region::exitTransition ', self.id);\r\n\r\n        self.exitTransitionComplete();\r\n    };\r\n\r\n    regionObject.exitTransitionComplete = function() {\r\n        const self = regionObject;\r\n        console.log('Called Region::exitTransitionComplete ', self.id);\r\n        self.ended = true;\r\n        self.layout.regions[self.index] = self;\r\n        self.layout.regionEnded();\r\n    };\r\n\r\n    regionObject.on = function<E extends keyof IRegionEvents>(event: E, callback: IRegionEvents[E]) {\r\n        return emitter.on(event, callback);\r\n    };\r\n\r\n    regionObject.emitter = emitter;\r\n\r\n    regionObject.prepareRegion();\r\n\r\n    return regionObject;\r\n}","/*\r\n * Copyright (C) 2024 Xibo Signage Ltd\r\n *\r\n * Xibo - Digital Signage - https://www.xibosignage.com\r\n *\r\n * This file is part of Xibo.\r\n *\r\n * Xibo is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU Lesser General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * any later version.\r\n *\r\n * Xibo is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU Lesser General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU Lesser General Public License\r\n * along with Xibo.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\nimport {\r\n    Layout, getLayout, getXlf, initRenderingDOM\r\n} from \"./Modules/Layout\";\r\nimport { platform } from './Modules/Platform';\r\nimport {\r\n    ILayout, initialLayout, InputLayoutType, OptionsType,\r\n} from \"./Types/Layout\";\r\nimport { ELayoutType, initialXlr, IXlr } from './Types/XLR';\r\n\r\nexport default function XiboLayoutRenderer(\r\n    inputLayouts: InputLayoutType[],\r\n    options?: OptionsType,\r\n) {\r\n    const props = {\r\n        inputLayouts,\r\n        options,\r\n    }\r\n\r\n    const xlrObject: IXlr = {\r\n        ...initialXlr,\r\n        bootstrap() {\r\n            // Place to set configurations and initialize required props\r\n            const self = this;\r\n            self.inputLayouts = !Array.isArray(props.inputLayouts) ?\r\n                [props.inputLayouts] : props.inputLayouts;\r\n            self.config = JSON.parse(JSON.stringify({...platform, ...props.options}));\r\n        },\r\n        init() {\r\n            return new Promise<IXlr>((resolve) => {\r\n                const self = this;\r\n\r\n                // Prepare rendering DOM\r\n                const previewCanvas = document.querySelector('.preview-canvas');\r\n\r\n                initRenderingDOM(previewCanvas);\r\n\r\n                self.prepareLayouts().then((xlr) => {\r\n                    resolve(xlr);\r\n                });\r\n            });\r\n        },\r\n\r\n        playSchedules(xlr: IXlr) {\r\n            // Check if there's a current layout\r\n            if (xlr.currentLayout !== undefined) {\r\n                xlr.currentLayout.emitter?.emit('start', xlr.currentLayout);\r\n                xlr.currentLayout.run();\r\n            }\r\n        },\r\n\r\n        async prepareLayoutXlf(inputLayout: ILayout) {\r\n            const self = this;\r\n            // Compose layout props first\r\n            let newOptions: OptionsType = Object.assign({}, platform);\r\n\r\n            newOptions = {\r\n                ...newOptions,\r\n                ...props.options,\r\n            };\r\n\r\n            if (self.config.platform ==='CMS' &&\r\n                inputLayout && Boolean(inputLayout.layoutId)\r\n            ) {\r\n                newOptions.xlfUrl =\r\n                    newOptions.xlfUrl.replace(':layoutId', String(inputLayout.layoutId));\r\n            } else if (self.config.platform === 'chromeOS') {\r\n                newOptions.xlfUrl = inputLayout.path as string;\r\n            }\r\n\r\n            let layoutXlf: string;\r\n            let layoutXlfNode: Document | null;\r\n            if (inputLayout && inputLayout.layoutNode === null) {\r\n                layoutXlf = await getXlf(newOptions);\r\n\r\n                const parser = new window.DOMParser();\r\n                layoutXlfNode = parser.parseFromString(layoutXlf as string, 'text/xml');\r\n            } else {\r\n                layoutXlfNode = inputLayout && inputLayout.layoutNode;\r\n            }\r\n\r\n            return new Promise<ILayout>((resolve) => {\r\n                const xlrLayoutObj = initialLayout;\r\n                \r\n                xlrLayoutObj.id = Number(inputLayout.layoutId);\r\n                xlrLayoutObj.layoutId = Number(inputLayout.layoutId);\r\n                xlrLayoutObj.options = newOptions;\r\n\r\n                resolve(Layout(layoutXlfNode, newOptions, self, xlrLayoutObj));\r\n            });\r\n        },\r\n\r\n        async prepareLayouts() {\r\n            const self = this;\r\n            // Get layouts\r\n            const xlrLayouts = getLayout({xlr: self});\r\n\r\n            self.currentLayoutId = xlrLayouts.current?.layoutId as ILayout['layoutId'];\r\n\r\n            const layoutsXlf = () => {\r\n                let xlf = [];\r\n\r\n                xlf.push(xlrLayouts.current);\r\n\r\n                if (xlrLayouts.current?.layoutId !== xlrLayouts.next?.layoutId) {\r\n                    xlf.push(xlrLayouts.next);\r\n                }\r\n\r\n                return xlf.reduce((coll: Promise<ILayout>[], item) => {\r\n                    return [\r\n                        ...coll,\r\n                        self.prepareLayoutXlf(item),\r\n                    ];\r\n                }, []);\r\n            };\r\n            const layouts = await Promise.all<Array<Promise<ILayout>>>(layoutsXlf());\r\n\r\n            return new Promise<IXlr>((resolve) => {\r\n                self.layouts = layouts;\r\n                self.currentLayout = self.layouts[0];\r\n\r\n                if (Boolean(self.layouts[1])) {\r\n                    self.nextLayout = self.layouts[1];\r\n                } else {\r\n                    // Use current layout as next layout if only one layout is available\r\n                    self.nextLayout = self.layouts[0];\r\n                }\r\n\r\n                self.currentLayoutIndex = xlrLayouts.currentLayoutIndex;\r\n                self.layouts[self.currentLayoutIndex] = self.currentLayout;\r\n\r\n                resolve(self);\r\n            });\r\n        },\r\n    }\r\n\r\n    xlrObject.bootstrap();\r\n\r\n    return xlrObject;\r\n}\r\n"],"names":["createNanoEvents","s","emit","event","_len","arguments","length","args","Array","_key","i","callbacks","this","events","apply","on","cb","_this$events","_this","push","_this$events$event","filter","platform","getResourceUrl","xlfUrl","layoutBackgroundDownloadUrl","layoutPreviewUrl","libraryDownloadUrl","loaderUrl","idCounter","inPreview","appHost","initialLayout","id","layoutId","sw","sh","xw","xh","zIndex","scaleFactor","sWidth","sHeight","offsetX","offsetY","bgColor","bgImage","bgId","containerName","layoutNode","regionMaxZIndex","ready","regionObjects","drawer","allExpired","regions","actions","options","done","allEnded","path","prepareLayout","parseXlf","run","callback","regionExpired","end","regionEnded","stopAllMedia","Promise","resolve","nextId","getMediaId","_ref","mediaType","mediaId","capitalizeStr","h","inputStr","String","charAt","toUpperCase","substring","getDataBlob","_x","_getDataBlob","_asyncToGenerator","_regeneratorRuntime","mark","_callee","src","wrap","_context","prev","next","abrupt","fetch","mode","then","res","blob","rej","reader","FileReader","onloadend","result","onerror","readAsDataURL","stop","preloadMediaBlob","_x2","_x3","_preloadMediaBlob","b","_callee2","type","data","_context2","sent","Blob","arrayBuffer","audioFileType","filename","filenameArr","split","console","log","URL","createObjectURL","fetchJSON","_x4","_fetchJSON","I","_callee3","url","_context3","json","err","str","validAudioTypes","mp3","wav","ogg","Boolean","initialRegion","layout","regionId","xml","mediaObjects","mediaObjectsActions","currentMedia","complete","ending","ended","oneMedia","oldMedia","undefined","curMedia","nxtMedia","currentMediaIndex","totalMediaObjects","index","prepareRegion","playNextMedia","transitionNodes","finished","exitTransition","exitTransitionComplete","prepareMediaObjects","initialMedia","region","html","iframe","iframeName","render","attachedAudio","singlePlay","timeoutId","setTimeout","checkIframeStatus","loadIframeOnRun","tempSrc","schemaVersion","duration","useDuration","fileId","uri","divWidth","divHeight","loop","init","defaultTrans","trans","keyframes","display","timing","fadeOutElem","opacity","fill","flyInElem","T","keyframeOptions","direction","flyInKeyframes","flyInTiming","from","_objectSpread","to","flyOutElem","flyOutKeyframes","flyOutTiming","transitionElement","transition","fadeIn","fadeOut","flyIn","flyOut","defaultIn","defaultOut","flyTransitionKeyframes","params","opacityAttr","source","top","concat","height","left","width","Media","xlr","props","mediaTimer","mediaTimeCount","emitter","mediaObject","startMediaTimer","v","media","setInterval","_media$emitter","$videoMedia","document","getElementById","onloadstart","onloadeddata","readyState","oncanplay","videoPlayPromise","play","error","muted","onplaying","ondurationchange","onended","VideoMedia","$audioMedia","$playBtn","remove","audioPlayPromise","_$audioMedia$parentNo","name","createElement","classList","add","textContent","addEventListener","parentNode","insertBefore","nextSibling","AudioMedia","clearInterval","_self$xml","_self$xml2","_self$xml3","_self$xml4","_self$xml5","self","getAttribute","parseInt","$mediaIframe","mediaOptions","getElementsByTagName","_i","_Array$from","_mediaOptions","children","_i2","_Array$from2","mediaOption","nodeName","toLowerCase","showfullscreen","scrolling","style","cssText","$mediaId","$media","Audio","className","resourceUrlParams","config","regionOptions","tmpUrl","resourceUrl","replace","cmsUrl","composeResourceUrlByPlatform","scaletype","align","valign","preload","mute","objectFit","playsInline","autoplay","durationisperitem","regex","RegExp","t","exec","transin","transinduration","transInDuration","Number","fadeInTrans","animate","transInDirection","transindirection","defaultTransInOptions","transIn","transInName","showCurrentMedia","_ref2","e","isCMS","_self$emitter","getNewMedia","setProperty","t0","t1","t2","t3","t4","call","t5","t6","innerHTML","appendChild","iframeStyles","$region","lastElementChild","ELayoutType","playAgainClickHandle","ev","preventDefault","history","go","getXlf","_getXlf","layoutOptions","apiHost","fetchOptions","window","location","origin","headers","text","getLayout","activeLayout","_currentLayout2","layoutsInput","layoutIndexes","_currentLayout","_nextLayout","_params$xlr","inputLayouts","currentLayout","nextLayout","currLayoutIndx","currentLayoutIndex","hasLayout","nextLayoutIndex","nextLayoutTemp","reduce","a","indx","layouts","current","Layout","$layout","prepareLayouts","parent","playSchedules","layoutObject","$layoutContainer","$splashScreen","_layout$layoutNode","_layout$layoutNode2","_layout$layoutNode3","_layout$layoutNode4","_layout$layoutNode5","_layout$layoutNode6","$screen","outline","offsetWidth","offsetHeight","firstElementChild","Math","min","round","abs","position","indexOf","bgImageUrl","composeBgUrlByPlatform","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","backgroundColor","currentLayoutId","layoutRegions","forEach","regionXml","regionObj","regionObject","_self$xml6","_regionOptions","regionOption","regionMediaItems","mediaXml","mediaObj","nextMediaIndex","newMedia","transOutDuration","transOutDirection","transoutduration","transoutdirection","transOutName","defaultTransOutOptions","transOut","transout","hideOldMedia","$oldMedia","oldMediaAnimate","removeOldMedia","l","_oldMediaAnimate","effect","updateTiming","isDone","_self$curMedia","_self$curMedia2","_self$curMedia3","_self$curMedia4","Region","_step","_iterator","_createForOfIteratorHelper","n","value","f","$end","$preview","firstChild","removeChild","_step2","_iterator2","j","CURRENT","NEXT","initialXlr","bootstrap","prepareLayoutXlf","inputLayout","xlrObject","isArray","JSON","parse","stringify","_targetContainer","previewPlayer","previewScreen","endPlay","playAgainLink","previewCanvas","querySelector","removeEventListener","body","_xlr$currentLayout$em","_this2","newOptions","layoutXlf","layoutXlfNode","parser","Object","assign","DOMParser","parseFromString","xlrLayoutObj","_this3","_xlrLayouts$current","xlrLayouts","layoutsXlf","_xlrLayouts$current2","_xlrLayouts$next","xlf","coll","item","_toConsumableArray","all"],"mappings":"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","x_google_ignoreList":[0]}